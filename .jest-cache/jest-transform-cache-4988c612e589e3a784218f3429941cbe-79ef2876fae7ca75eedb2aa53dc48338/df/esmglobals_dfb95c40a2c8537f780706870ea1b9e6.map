{"file":"/home/runner/workspace/utils/__mocks__/esm-globals.ts","mappings":";;;;;;AAWA,8CAOC;AAED,4CAOC;AA3BD,2DAA2D;AAC3D,6BAAoC;AACpC,+BAA+B;AAC/B,gDAAwB;AAExB,yFAAyF;AACzF,MAAM,OAAO,GAAG,UAAU,OAAO,CAAC,GAAG,EAAE,uBAAuB,CAAC;AAElD,QAAA,UAAU,GAAG,IAAA,mBAAa,EAAC,OAAO,CAAC,CAAC;AACpC,QAAA,SAAS,GAAG,IAAA,cAAO,EAAC,kBAAU,CAAC,CAAC;AAE7C,SAAgB,iBAAiB,CAAC,aAAqB;IACrD,IAAI,CAAC;QACH,OAAO,IAAA,mBAAa,EAAC,aAAa,CAAC,CAAC;IACtC,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,gCAAgC;QAChC,OAAO,cAAI,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,cAAc,CAAC,CAAC;IACrD,CAAC;AACH,CAAC;AAED,SAAgB,gBAAgB,CAAC,aAAqB;IACpD,IAAI,CAAC;QACH,OAAO,IAAA,cAAO,EAAC,IAAA,mBAAa,EAAC,aAAa,CAAC,CAAC,CAAC;IAC/C,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,6EAA6E;QAC7E,OAAO,OAAO,CAAC,GAAG,EAAE,CAAC;IACvB,CAAC;AACH,CAAC","names":[],"sources":["/home/runner/workspace/utils/__mocks__/esm-globals.ts"],"sourcesContent":["// Mock for esm-globals to avoid import.meta issues in Jest\nimport { fileURLToPath } from 'url';\nimport { dirname } from 'path';\nimport path from 'path';\n\n// For Jest testing, we'll use process.cwd() as fallback since import.meta is problematic\nconst mockUrl = `file://${process.cwd()}/utils/esm-globals.ts`;\n\nexport const __filename = fileURLToPath(mockUrl);\nexport const __dirname = dirname(__filename);\n\nexport function getModuleFilename(importMetaUrl: string) {\n  try {\n    return fileURLToPath(importMetaUrl);\n  } catch (error) {\n    // Fallback for Jest environment\n    return path.resolve(process.cwd(), 'mock-file.ts');\n  }\n}\n\nexport function getModuleDirname(importMetaUrl: string) {\n  try {\n    return dirname(fileURLToPath(importMetaUrl));\n  } catch (error) {\n    // Fallback for Jest environment - return the directory of the calling module\n    return process.cwd();\n  }\n}"],"version":3}