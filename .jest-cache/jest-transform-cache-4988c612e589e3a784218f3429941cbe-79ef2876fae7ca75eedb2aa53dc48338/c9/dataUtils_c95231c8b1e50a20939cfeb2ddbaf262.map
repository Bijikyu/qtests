{"version":3,"names":["mockModels","require","sendEmail","module","exports"],"sources":["dataUtils.js"],"sourcesContent":["/**\n * Data and Database Testing Utilities\n * \n * This module provides utilities for database mocking, model simulation,\n * and data generation for testing scenarios. These utilities help test\n * data-dependent applications without requiring actual database connections.\n * \n * Design philosophy:\n * - Database-free testing for fast, isolated tests\n * - Realistic data generation for comprehensive testing\n * - In-memory model simulation with full API compatibility\n * - Email system mocking for notification testing\n * \n * Why data utilities are grouped together:\n * 1. All utilities deal with data persistence and generation\n * 2. They provide alternatives to external data dependencies\n * 3. Often used together in application testing scenarios\n * 4. Share common patterns for entity creation and management\n * \n * Module organization rationale:\n * These utilities are grouped because they all serve the purpose of\n * providing data and persistence layer testing without external dependencies,\n * offering different levels of abstraction for various testing needs.\n */\n\n// Import mockModels for in-memory database model simulation\n// mockModels provides Mongoose-compatible models without database dependencies\n// for testing data-dependent applications with full CRUD operations\nconst mockModels = require('../utils/mockModels');\n\n// Import sendEmail utility for email system mocking\n// sendEmail provides lightweight email mocking for testing notification systems\n// without requiring external mail service configuration or actual email delivery\nconst sendEmail = require('../utils/sendEmail');\n\n/**\n * Export data and database testing utilities\n * \n * These utilities are exported together because they provide\n * complementary functionality for data layer testing:\n * \n * - mockModels: For database model simulation and CRUD operations\n * - sendEmail: For email system mocking and notification testing\n * \n * Export strategy:\n * - Object export for consistent access patterns\n * - Descriptive property names that indicate purpose\n * - Grouped by data-related functionality for developer convenience\n */\nmodule.exports = {\n  // In-memory database model simulation with Mongoose compatibility\n  mockModels,\n  \n  // Email system mocking for notification testing\n  sendEmail\n};"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAMA,UAAU,GAAGC,OAAO,CAAC,qBAAqB,CAAC;;AAEjD;AACA;AACA;AACA,MAAMC,SAAS,GAAGD,OAAO,CAAC,oBAAoB,CAAC;;AAE/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAE,MAAM,CAACC,OAAO,GAAG;EACf;EACAJ,UAAU;EAEV;EACAE;AACF,CAAC","ignoreList":[]}