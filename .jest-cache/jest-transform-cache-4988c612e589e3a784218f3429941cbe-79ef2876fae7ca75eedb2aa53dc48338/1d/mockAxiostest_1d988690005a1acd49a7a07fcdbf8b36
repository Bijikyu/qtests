a033e885e3ced9bf254d8da25cfc6302
// Auto-generated unit test for mockAxios.js - optimized for speed
const mod = require('./mockAxios.js');
describe('mockAxios.js', () => {
  test('createMockAxios works', async () => {
    // Fast assertion - TODO: implement specific test logic
    expect(typeof mod.createMockAxios).toBeDefined();
  });
  test('createUserMockAxios works', async () => {
    // Fast assertion - TODO: implement specific test logic
    expect(typeof mod.createUserMockAxios).toBeDefined();
  });
  test('createMockResponse works', async () => {
    // Fast assertion - TODO: implement specific test logic
    expect(typeof mod.createMockResponse).toBeDefined();
  });
  test('mockAxios works', async () => {
    // Fast assertion - TODO: implement specific test logic
    expect(typeof mod.mockAxios).toBeDefined();
  });
  test('axiosWrapper works', async () => {
    // Fast assertion - TODO: implement specific test logic
    expect(typeof mod.axiosWrapper).toBeDefined();
  });
  test('createSimpleMockAxios works', async () => {
    // Fast assertion - TODO: implement specific test logic
    expect(typeof mod.createSimpleMockAxios).toBeDefined();
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJtb2QiLCJyZXF1aXJlIiwiZGVzY3JpYmUiLCJ0ZXN0IiwiZXhwZWN0IiwiY3JlYXRlTW9ja0F4aW9zIiwidG9CZURlZmluZWQiLCJjcmVhdGVVc2VyTW9ja0F4aW9zIiwiY3JlYXRlTW9ja1Jlc3BvbnNlIiwibW9ja0F4aW9zIiwiYXhpb3NXcmFwcGVyIiwiY3JlYXRlU2ltcGxlTW9ja0F4aW9zIl0sInNvdXJjZXMiOlsibW9ja0F4aW9zLnRlc3QuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQXV0by1nZW5lcmF0ZWQgdW5pdCB0ZXN0IGZvciBtb2NrQXhpb3MuanMgLSBvcHRpbWl6ZWQgZm9yIHNwZWVkXG5jb25zdCBtb2QgPSByZXF1aXJlKCcuL21vY2tBeGlvcy5qcycpO1xuXG5kZXNjcmliZSgnbW9ja0F4aW9zLmpzJywgKCkgPT4ge1xuICB0ZXN0KCdjcmVhdGVNb2NrQXhpb3Mgd29ya3MnLCBhc3luYyAoKSA9PiB7XG4gICAgLy8gRmFzdCBhc3NlcnRpb24gLSBUT0RPOiBpbXBsZW1lbnQgc3BlY2lmaWMgdGVzdCBsb2dpY1xuICAgIGV4cGVjdCh0eXBlb2YgbW9kLmNyZWF0ZU1vY2tBeGlvcykudG9CZURlZmluZWQoKTtcbiAgfSk7XG4gIHRlc3QoJ2NyZWF0ZVVzZXJNb2NrQXhpb3Mgd29ya3MnLCBhc3luYyAoKSA9PiB7XG4gICAgLy8gRmFzdCBhc3NlcnRpb24gLSBUT0RPOiBpbXBsZW1lbnQgc3BlY2lmaWMgdGVzdCBsb2dpY1xuICAgIGV4cGVjdCh0eXBlb2YgbW9kLmNyZWF0ZVVzZXJNb2NrQXhpb3MpLnRvQmVEZWZpbmVkKCk7XG4gIH0pO1xuICB0ZXN0KCdjcmVhdGVNb2NrUmVzcG9uc2Ugd29ya3MnLCBhc3luYyAoKSA9PiB7XG4gICAgLy8gRmFzdCBhc3NlcnRpb24gLSBUT0RPOiBpbXBsZW1lbnQgc3BlY2lmaWMgdGVzdCBsb2dpY1xuICAgIGV4cGVjdCh0eXBlb2YgbW9kLmNyZWF0ZU1vY2tSZXNwb25zZSkudG9CZURlZmluZWQoKTtcbiAgfSk7XG4gIHRlc3QoJ21vY2tBeGlvcyB3b3JrcycsIGFzeW5jICgpID0+IHtcbiAgICAvLyBGYXN0IGFzc2VydGlvbiAtIFRPRE86IGltcGxlbWVudCBzcGVjaWZpYyB0ZXN0IGxvZ2ljXG4gICAgZXhwZWN0KHR5cGVvZiBtb2QubW9ja0F4aW9zKS50b0JlRGVmaW5lZCgpO1xuICB9KTtcbiAgdGVzdCgnYXhpb3NXcmFwcGVyIHdvcmtzJywgYXN5bmMgKCkgPT4ge1xuICAgIC8vIEZhc3QgYXNzZXJ0aW9uIC0gVE9ETzogaW1wbGVtZW50IHNwZWNpZmljIHRlc3QgbG9naWNcbiAgICBleHBlY3QodHlwZW9mIG1vZC5heGlvc1dyYXBwZXIpLnRvQmVEZWZpbmVkKCk7XG4gIH0pO1xuICB0ZXN0KCdjcmVhdGVTaW1wbGVNb2NrQXhpb3Mgd29ya3MnLCBhc3luYyAoKSA9PiB7XG4gICAgLy8gRmFzdCBhc3NlcnRpb24gLSBUT0RPOiBpbXBsZW1lbnQgc3BlY2lmaWMgdGVzdCBsb2dpY1xuICAgIGV4cGVjdCh0eXBlb2YgbW9kLmNyZWF0ZVNpbXBsZU1vY2tBeGlvcykudG9CZURlZmluZWQoKTtcbiAgfSk7XG59KTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQSxNQUFNQSxHQUFHLEdBQUdDLE9BQU8sQ0FBQyxnQkFBZ0IsQ0FBQztBQUVyQ0MsUUFBUSxDQUFDLGNBQWMsRUFBRSxNQUFNO0VBQzdCQyxJQUFJLENBQUMsdUJBQXVCLEVBQUUsWUFBWTtJQUN4QztJQUNBQyxNQUFNLENBQUMsT0FBT0osR0FBRyxDQUFDSyxlQUFlLENBQUMsQ0FBQ0MsV0FBVyxDQUFDLENBQUM7RUFDbEQsQ0FBQyxDQUFDO0VBQ0ZILElBQUksQ0FBQywyQkFBMkIsRUFBRSxZQUFZO0lBQzVDO0lBQ0FDLE1BQU0sQ0FBQyxPQUFPSixHQUFHLENBQUNPLG1CQUFtQixDQUFDLENBQUNELFdBQVcsQ0FBQyxDQUFDO0VBQ3RELENBQUMsQ0FBQztFQUNGSCxJQUFJLENBQUMsMEJBQTBCLEVBQUUsWUFBWTtJQUMzQztJQUNBQyxNQUFNLENBQUMsT0FBT0osR0FBRyxDQUFDUSxrQkFBa0IsQ0FBQyxDQUFDRixXQUFXLENBQUMsQ0FBQztFQUNyRCxDQUFDLENBQUM7RUFDRkgsSUFBSSxDQUFDLGlCQUFpQixFQUFFLFlBQVk7SUFDbEM7SUFDQUMsTUFBTSxDQUFDLE9BQU9KLEdBQUcsQ0FBQ1MsU0FBUyxDQUFDLENBQUNILFdBQVcsQ0FBQyxDQUFDO0VBQzVDLENBQUMsQ0FBQztFQUNGSCxJQUFJLENBQUMsb0JBQW9CLEVBQUUsWUFBWTtJQUNyQztJQUNBQyxNQUFNLENBQUMsT0FBT0osR0FBRyxDQUFDVSxZQUFZLENBQUMsQ0FBQ0osV0FBVyxDQUFDLENBQUM7RUFDL0MsQ0FBQyxDQUFDO0VBQ0ZILElBQUksQ0FBQyw2QkFBNkIsRUFBRSxZQUFZO0lBQzlDO0lBQ0FDLE1BQU0sQ0FBQyxPQUFPSixHQUFHLENBQUNXLHFCQUFxQixDQUFDLENBQUNMLFdBQVcsQ0FBQyxDQUFDO0VBQ3hELENBQUMsQ0FBQztBQUNKLENBQUMsQ0FBQyIsImlnbm9yZUxpc3QiOltdfQ==