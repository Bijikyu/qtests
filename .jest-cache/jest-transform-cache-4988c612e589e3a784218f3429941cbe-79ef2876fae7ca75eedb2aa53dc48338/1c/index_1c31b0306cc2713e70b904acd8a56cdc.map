{"version":3,"names":["stubMethod","mockConsole","require","testEnv","offlineMode","testHelpers","setup","stubs","TestGenerator","runTestSuite","runTestSuites","createAssertions","module","exports"],"sources":["index.js"],"sourcesContent":["/**\n * qtests - Main Entry Point\n * \n * This module serves as the unified export point for all qtests functionality.\n * The architecture is designed to provide a clean, intuitive API where users\n * can access all testing utilities through a single import.\n * \n * Design rationale:\n * - Single entry point reduces cognitive load for users\n * - Organized by functionality (core, environment, setup, stubs) for clarity\n * - Each category is kept in separate lib files for maintainability\n * - Maintains backward compatibility with existing API\n */\n\n\n// Import organized utility categories from lib directory\nconst { stubMethod, mockConsole } = require('./lib/coreUtils');\nconst { testEnv, offlineMode, testHelpers } = require('./lib/envUtils');\nconst { setup } = require('./lib/setup');\nconst stubs = require('./lib/stubs');\nconst { TestGenerator } = require('./lib/testGenerator');\nconst { runTestSuite, runTestSuites, createAssertions } = require('./utils/runTestSuite');\n\n\n// export main module utilities at bottom per requirements\nmodule.exports = {\n  stubMethod, // method replacement utility for isolating dependencies\n  mockConsole, // console output capture for testing logging behavior\n  testEnv, // environment and mock management for complex test scenarios\n  offlineMode, // offline/online mode utility with automatic switching\n  testHelpers, // advanced testing utilities for module reloading and mocking\n  TestGenerator, // automatic test generation from source code analysis\n  runTestSuite, // lightweight test runner for simple test scenarios\n  runTestSuites, // run multiple test suites with overall summary\n  createAssertions, // basic assertion helpers for test writing\n  setup, // call this to activate stubs when desired\n  stubs // stub library organized under namespace\n};"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA,MAAM;EAAEA,UAAU;EAAEC;AAAY,CAAC,GAAGC,OAAO,CAAC,iBAAiB,CAAC;AAC9D,MAAM;EAAEC,OAAO;EAAEC,WAAW;EAAEC;AAAY,CAAC,GAAGH,OAAO,CAAC,gBAAgB,CAAC;AACvE,MAAM;EAAEI;AAAM,CAAC,GAAGJ,OAAO,CAAC,aAAa,CAAC;AACxC,MAAMK,KAAK,GAAGL,OAAO,CAAC,aAAa,CAAC;AACpC,MAAM;EAAEM;AAAc,CAAC,GAAGN,OAAO,CAAC,qBAAqB,CAAC;AACxD,MAAM;EAAEO,YAAY;EAAEC,aAAa;EAAEC;AAAiB,CAAC,GAAGT,OAAO,CAAC,sBAAsB,CAAC;;AAGzF;AACAU,MAAM,CAACC,OAAO,GAAG;EACfb,UAAU;EAAE;EACZC,WAAW;EAAE;EACbE,OAAO;EAAE;EACTC,WAAW;EAAE;EACbC,WAAW;EAAE;EACbG,aAAa;EAAE;EACfC,YAAY;EAAE;EACdC,aAAa;EAAE;EACfC,gBAAgB;EAAE;EAClBL,KAAK;EAAE;EACPC,KAAK,CAAC;AACR,CAAC","ignoreList":[]}