e03dba674fb2a4fd7e195ae801360c3d
// Auto-generated API test for GET /test
const {
  httpTest
} = require('qtests/lib/envUtils');
describe('GET /test', () => {
  test('should succeed', async () => {
    // Create mock app for testing
    const app = httpTest.createMockApp();
    app.get('/test', (req, res) => {
      res.statusCode = 200;
      res.setHeader('content-type', 'application/json');
      res.end(JSON.stringify({
        success: true
      }));
    });
    const res = await httpTest.supertest(app).get('/test').expect(200).end();
    expect(res.body.success).toBe(true);
  });
  test('should handle error responses', async () => {
    const app = httpTest.createMockApp();
    app.get('/test', (req, res) => {
      res.statusCode = 400;
      res.setHeader('content-type', 'application/json');
      res.end(JSON.stringify({
        error: 'Bad request'
      }));
    });
    const res = await httpTest.supertest(app).get('/test').expect(400).end();
    expect(res.body.error).toBe('Bad request');
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJodHRwVGVzdCIsInJlcXVpcmUiLCJkZXNjcmliZSIsInRlc3QiLCJhcHAiLCJjcmVhdGVNb2NrQXBwIiwiZ2V0IiwicmVxIiwicmVzIiwic3RhdHVzQ29kZSIsInNldEhlYWRlciIsImVuZCIsIkpTT04iLCJzdHJpbmdpZnkiLCJzdWNjZXNzIiwic3VwZXJ0ZXN0IiwiZXhwZWN0IiwiYm9keSIsInRvQmUiLCJlcnJvciJdLCJzb3VyY2VzIjpbInV0aWxzX19odHRwVGVzdC50ZXN0LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEF1dG8tZ2VuZXJhdGVkIEFQSSB0ZXN0IGZvciBHRVQgL3Rlc3RcbmNvbnN0IHsgaHR0cFRlc3QgfSA9IHJlcXVpcmUoJ3F0ZXN0cy9saWIvZW52VXRpbHMnKTtcblxuZGVzY3JpYmUoJ0dFVCAvdGVzdCcsICgpID0+IHtcbiAgdGVzdCgnc2hvdWxkIHN1Y2NlZWQnLCBhc3luYyAoKSA9PiB7XG4gICAgLy8gQ3JlYXRlIG1vY2sgYXBwIGZvciB0ZXN0aW5nXG4gICAgY29uc3QgYXBwID0gaHR0cFRlc3QuY3JlYXRlTW9ja0FwcCgpO1xuICAgIGFwcC5nZXQoJy90ZXN0JywgKHJlcSwgcmVzKSA9PiB7XG4gICAgICByZXMuc3RhdHVzQ29kZSA9IDIwMDtcbiAgICAgIHJlcy5zZXRIZWFkZXIoJ2NvbnRlbnQtdHlwZScsICdhcHBsaWNhdGlvbi9qc29uJyk7XG4gICAgICByZXMuZW5kKEpTT04uc3RyaW5naWZ5KHsgc3VjY2VzczogdHJ1ZSB9KSk7XG4gICAgfSk7XG4gICAgXG4gICAgY29uc3QgcmVzID0gYXdhaXQgaHR0cFRlc3Quc3VwZXJ0ZXN0KGFwcClcbiAgICAgIC5nZXQoJy90ZXN0JylcbiAgICAgIC5leHBlY3QoMjAwKVxuICAgICAgLmVuZCgpO1xuICAgIFxuICAgIGV4cGVjdChyZXMuYm9keS5zdWNjZXNzKS50b0JlKHRydWUpO1xuICB9KTtcblxuICB0ZXN0KCdzaG91bGQgaGFuZGxlIGVycm9yIHJlc3BvbnNlcycsIGFzeW5jICgpID0+IHtcbiAgICBjb25zdCBhcHAgPSBodHRwVGVzdC5jcmVhdGVNb2NrQXBwKCk7XG4gICAgYXBwLmdldCgnL3Rlc3QnLCAocmVxLCByZXMpID0+IHtcbiAgICAgIHJlcy5zdGF0dXNDb2RlID0gNDAwO1xuICAgICAgcmVzLnNldEhlYWRlcignY29udGVudC10eXBlJywgJ2FwcGxpY2F0aW9uL2pzb24nKTtcbiAgICAgIHJlcy5lbmQoSlNPTi5zdHJpbmdpZnkoeyBlcnJvcjogJ0JhZCByZXF1ZXN0JyB9KSk7XG4gICAgfSk7XG4gICAgXG4gICAgY29uc3QgcmVzID0gYXdhaXQgaHR0cFRlc3Quc3VwZXJ0ZXN0KGFwcClcbiAgICAgIC5nZXQoJy90ZXN0JylcbiAgICAgIC5leHBlY3QoNDAwKVxuICAgICAgLmVuZCgpO1xuICAgIFxuICAgIGV4cGVjdChyZXMuYm9keS5lcnJvcikudG9CZSgnQmFkIHJlcXVlc3QnKTtcbiAgfSk7XG59KTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQSxNQUFNO0VBQUVBO0FBQVMsQ0FBQyxHQUFHQyxPQUFPLENBQUMscUJBQXFCLENBQUM7QUFFbkRDLFFBQVEsQ0FBQyxXQUFXLEVBQUUsTUFBTTtFQUMxQkMsSUFBSSxDQUFDLGdCQUFnQixFQUFFLFlBQVk7SUFDakM7SUFDQSxNQUFNQyxHQUFHLEdBQUdKLFFBQVEsQ0FBQ0ssYUFBYSxDQUFDLENBQUM7SUFDcENELEdBQUcsQ0FBQ0UsR0FBRyxDQUFDLE9BQU8sRUFBRSxDQUFDQyxHQUFHLEVBQUVDLEdBQUcsS0FBSztNQUM3QkEsR0FBRyxDQUFDQyxVQUFVLEdBQUcsR0FBRztNQUNwQkQsR0FBRyxDQUFDRSxTQUFTLENBQUMsY0FBYyxFQUFFLGtCQUFrQixDQUFDO01BQ2pERixHQUFHLENBQUNHLEdBQUcsQ0FBQ0MsSUFBSSxDQUFDQyxTQUFTLENBQUM7UUFBRUMsT0FBTyxFQUFFO01BQUssQ0FBQyxDQUFDLENBQUM7SUFDNUMsQ0FBQyxDQUFDO0lBRUYsTUFBTU4sR0FBRyxHQUFHLE1BQU1SLFFBQVEsQ0FBQ2UsU0FBUyxDQUFDWCxHQUFHLENBQUMsQ0FDdENFLEdBQUcsQ0FBQyxPQUFPLENBQUMsQ0FDWlUsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUNYTCxHQUFHLENBQUMsQ0FBQztJQUVSSyxNQUFNLENBQUNSLEdBQUcsQ0FBQ1MsSUFBSSxDQUFDSCxPQUFPLENBQUMsQ0FBQ0ksSUFBSSxDQUFDLElBQUksQ0FBQztFQUNyQyxDQUFDLENBQUM7RUFFRmYsSUFBSSxDQUFDLCtCQUErQixFQUFFLFlBQVk7SUFDaEQsTUFBTUMsR0FBRyxHQUFHSixRQUFRLENBQUNLLGFBQWEsQ0FBQyxDQUFDO0lBQ3BDRCxHQUFHLENBQUNFLEdBQUcsQ0FBQyxPQUFPLEVBQUUsQ0FBQ0MsR0FBRyxFQUFFQyxHQUFHLEtBQUs7TUFDN0JBLEdBQUcsQ0FBQ0MsVUFBVSxHQUFHLEdBQUc7TUFDcEJELEdBQUcsQ0FBQ0UsU0FBUyxDQUFDLGNBQWMsRUFBRSxrQkFBa0IsQ0FBQztNQUNqREYsR0FBRyxDQUFDRyxHQUFHLENBQUNDLElBQUksQ0FBQ0MsU0FBUyxDQUFDO1FBQUVNLEtBQUssRUFBRTtNQUFjLENBQUMsQ0FBQyxDQUFDO0lBQ25ELENBQUMsQ0FBQztJQUVGLE1BQU1YLEdBQUcsR0FBRyxNQUFNUixRQUFRLENBQUNlLFNBQVMsQ0FBQ1gsR0FBRyxDQUFDLENBQ3RDRSxHQUFHLENBQUMsT0FBTyxDQUFDLENBQ1pVLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FDWEwsR0FBRyxDQUFDLENBQUM7SUFFUkssTUFBTSxDQUFDUixHQUFHLENBQUNTLElBQUksQ0FBQ0UsS0FBSyxDQUFDLENBQUNELElBQUksQ0FBQyxhQUFhLENBQUM7RUFDNUMsQ0FBQyxDQUFDO0FBQ0osQ0FBQyxDQUFDIiwiaWdub3JlTGlzdCI6W119