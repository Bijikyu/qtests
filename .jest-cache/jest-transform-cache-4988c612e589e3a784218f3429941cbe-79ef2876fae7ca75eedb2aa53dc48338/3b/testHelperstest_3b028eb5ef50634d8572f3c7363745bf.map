{"version":3,"names":["stubQerrors","reload","moduleReloadLock","withMockConsole","createJsonRes","createRes","generateKey","backupEnvVars","restoreEnvVars","withSavedEnv","require","describe","afterEach","clear","process","env","QTESTS_TEST_VAR","test","expect","err","message","toContain","not","toThrow","consoleSpy","jest","spyOn","console","mockImplementation","toHaveBeenCalledWith","mockRestore","beforeEach","ORIGINAL_VAR","MODIFY_VAR","NEW_VAR","SELECTIVE_VAR","backup","toHaveProperty","undefined","Object","keys","toHaveLength","length","toBeGreaterThan","toBe","toBeUndefined","key","toMatch","mockApp","post","fn","mockReturnThis","send","mockSupertest","mockResolvedValue","statusCode","doMock","supertest","response","testPath","module1","toBeDefined","fullPath","resolve","__dirname","add","module2","delete","has","toBeInstanceOf","Function","res","json","mock","calls","toEqual","result","status","success","originalJest","global","error","TEST_WITH_SAVED","TEMP_VAR","ERROR_TEST","Error","rejects","spy","log","filter","call","envBackup","NODE_ENV","reloadedModule","data"],"sources":["testHelpers.test.js"],"sourcesContent":["/**\n * Test Helpers Enhanced Functionality Tests\n * \n * This test suite verifies the enhanced test helper utilities that centralize\n * common mocking and module reload logic. Tests cover the new Node.js test module\n * integration, selective environment variable backup, and HTTP integration patterns.\n * \n * Test coverage includes:\n * - Enhanced stubQerrors with Node.js test module support\n * - Selective and complete environment variable backup/restore\n * - Enhanced generateKey with HTTP endpoint testing\n * - Module reloading with thread-safe locking\n * - Response object creation with framework compatibility\n * - Environment wrapper utilities\n */\n\nconst {\n  stubQerrors,\n  reload,\n  moduleReloadLock,\n  withMockConsole,\n  createJsonRes,\n  createRes,\n  generateKey,\n  backupEnvVars,\n  restoreEnvVars,\n  withSavedEnv\n} = require('../utils/testHelpers');\n\ndescribe('Enhanced Test Helpers Framework', () => {\n  \n  // Clean up after each test\n  afterEach(() => {\n    // Clear module reload locks\n    moduleReloadLock.clear();\n    \n    // Restore environment if needed\n    if (process.env.QTESTS_TEST_VAR) {\n      delete process.env.QTESTS_TEST_VAR;\n    }\n  });\n  \n  describe('stubQerrors with Node.js test module integration', () => {\n    \n    test('handles missing qerrors module gracefully', () => {\n      // Test graceful handling when qerrors is not available\n      expect(() => {\n        // This should not throw even if qerrors is missing\n        try {\n          stubQerrors();\n        } catch (err) {\n          // Expected behavior - module not found is acceptable\n          expect(err.message).toContain('Cannot find module');\n        }\n      }).not.toThrow();\n    });\n    \n    test('logs function entry and completion', () => {\n      const consoleSpy = jest.spyOn(console, 'log').mockImplementation(() => {});\n      \n      try {\n        stubQerrors();\n      } catch (err) {\n        // Expected - qerrors may not be available\n      }\n      \n      expect(consoleSpy).toHaveBeenCalledWith('stubQerrors is running with none');\n      \n      consoleSpy.mockRestore();\n    });\n  });\n  \n  describe('Enhanced environment variable management', () => {\n    \n    beforeEach(() => {\n      // Set up test environment\n      process.env.ORIGINAL_VAR = 'original_value';\n      process.env.MODIFY_VAR = 'will_be_modified';\n    });\n    \n    afterEach(() => {\n      // Clean up test environment\n      delete process.env.ORIGINAL_VAR;\n      delete process.env.MODIFY_VAR;\n      delete process.env.NEW_VAR;\n      delete process.env.SELECTIVE_VAR;\n    });\n    \n    test('selective backup captures only specified variables', () => {\n      const backup = backupEnvVars('ORIGINAL_VAR', 'NONEXISTENT_VAR');\n      \n      expect(backup).toHaveProperty('ORIGINAL_VAR', 'original_value');\n      expect(backup).toHaveProperty('NONEXISTENT_VAR', undefined);\n      expect(Object.keys(backup)).toHaveLength(2);\n    });\n    \n    test('full backup captures entire environment', () => {\n      const backup = backupEnvVars();\n      \n      expect(backup).toHaveProperty('ORIGINAL_VAR', 'original_value');\n      expect(backup).toHaveProperty('MODIFY_VAR', 'will_be_modified');\n      expect(Object.keys(backup).length).toBeGreaterThan(10); // Should capture many variables\n    });\n    \n    test('selective restoration only restores specified variables', () => {\n      const backup = backupEnvVars('MODIFY_VAR');\n      \n      // Modify variables\n      process.env.MODIFY_VAR = 'modified_value';\n      process.env.NEW_VAR = 'new_value';\n      \n      // Restore selective backup\n      restoreEnvVars(backup);\n      \n      expect(process.env.MODIFY_VAR).toBe('will_be_modified'); // Restored\n      expect(process.env.NEW_VAR).toBe('new_value'); // Not removed (selective restore)\n    });\n    \n    test('complete restoration removes added variables', () => {\n      const backup = backupEnvVars();\n      \n      // Add new variable and modify existing\n      process.env.NEW_VAR = 'new_value';\n      process.env.MODIFY_VAR = 'modified_value';\n      \n      // Restore complete backup\n      restoreEnvVars(backup);\n      \n      expect(process.env.MODIFY_VAR).toBe('will_be_modified'); // Restored\n      expect(process.env.NEW_VAR).toBeUndefined(); // Removed (complete restore)\n    });\n    \n    test('handles undefined values correctly', () => {\n      // Create backup with undefined value\n      delete process.env.MODIFY_VAR;\n      const backup = backupEnvVars('MODIFY_VAR');\n      \n      // Add the variable back\n      process.env.MODIFY_VAR = 'added_back';\n      \n      // Restore should remove it again\n      restoreEnvVars(backup);\n      \n      expect(process.env.MODIFY_VAR).toBeUndefined();\n    });\n    \n    test('restoreEnvVars handles no backup parameter', () => {\n      expect(() => {\n        restoreEnvVars(); // Should not throw\n      }).not.toThrow();\n    });\n  });\n  \n  describe('Enhanced generateKey with HTTP support', () => {\n    \n    test('generates direct API keys with suffix', async () => {\n      const key = await generateKey('user');\n      \n      expect(key).toBe('test-api-key-user');\n    });\n    \n    test('generates timestamp-based keys without suffix', async () => {\n      const key = await generateKey();\n      \n      expect(key).toMatch(/^test-api-key-\\d+$/);\n    });\n    \n    test('handles HTTP app testing mode', async () => {\n      // Create mock app object\n      const mockApp = {\n        post: jest.fn().mockReturnThis(),\n        send: jest.fn().mockReturnThis()\n      };\n      \n      // Mock httpTest.supertest\n      const mockSupertest = jest.fn(() => ({\n        post: jest.fn().mockReturnThis(),\n        send: jest.fn().mockResolvedValue({ statusCode: 201 })\n      }));\n      \n      // Mock the httpTest module\n      jest.doMock('../utils/httpTest', () => ({\n        supertest: mockSupertest\n      }));\n      \n      try {\n        const response = await generateKey(mockApp, 'userService');\n        \n        expect(response).toHaveProperty('statusCode', 201);\n        expect(mockSupertest).toHaveBeenCalledWith(mockApp);\n      } catch (err) {\n        // Expected if httpTest module is not available\n        expect(err.message).toContain('Cannot find module');\n      }\n    });\n  });\n  \n  describe('Module reloading with thread safety', () => {\n    \n    test('reload prevents concurrent operations on same module', () => {\n      const testPath = 'mockConsole';\n      \n      // First reload should succeed\n      const module1 = reload(testPath);\n      expect(module1).toBeDefined();\n      \n      // Add to lock manually to simulate concurrent access\n      const fullPath = require('path').resolve(__dirname, '..', 'utils', testPath);\n      moduleReloadLock.add(fullPath);\n      \n      // Second reload should skip and return cached version\n      const module2 = reload(testPath);\n      expect(module2).toBeDefined();\n      \n      // Clean up\n      moduleReloadLock.delete(fullPath);\n    });\n    \n    test('reload handles non-existent modules gracefully', () => {\n      expect(() => {\n        reload('nonexistent/module');\n      }).toThrow();\n    });\n    \n    test('moduleReloadLock is exposed for testing', () => {\n      expect(moduleReloadLock).toBeDefined();\n      expect(moduleReloadLock.has).toBeInstanceOf(Function);\n      expect(moduleReloadLock.add).toBeInstanceOf(Function);\n      expect(moduleReloadLock.delete).toBeInstanceOf(Function);\n    });\n  });\n  \n  describe('Response object creation with framework compatibility', () => {\n    \n    test('createJsonRes works with Jest spies', () => {\n      const res = createJsonRes();\n      \n      expect(res).toHaveProperty('json');\n      expect(typeof res.json).toBe('function');\n      \n      // Test that it's a proper spy\n      res.json({ test: 'data' });\n      \n      if (res.json.mock) {\n        expect(res.json.mock.calls).toHaveLength(1);\n        expect(res.json.mock.calls[0][0]).toEqual({ test: 'data' });\n      }\n    });\n    \n    test('createRes provides comprehensive response mock', () => {\n      const res = createRes();\n      \n      expect(res).toHaveProperty('status');\n      expect(res).toHaveProperty('json');\n      expect(res).toHaveProperty('send');\n      expect(res).toHaveProperty('end');\n      \n      // Test method chaining\n      const result = res.status(200).json({ success: true });\n      expect(result).toBe(res); // Should return same object for chaining\n      \n      // Test call tracking\n      if (res.status.mock && res.json.mock) {\n        expect(res.status.mock.calls).toHaveLength(1);\n        expect(res.status.mock.calls[0][0]).toBe(200);\n        expect(res.json.mock.calls).toHaveLength(1);\n        expect(res.json.mock.calls[0][0]).toEqual({ success: true });\n      }\n    });\n    \n    test('response mocks work without Jest', () => {\n      // Temporarily hide Jest to test fallback\n      const originalJest = global.jest;\n      delete global.jest;\n      \n      try {\n        const res = createRes();\n        \n        expect(res).toHaveProperty('status');\n        expect(res).toHaveProperty('json');\n        \n        // Test manual call tracking\n        res.status(404);\n        res.json({ error: 'Not found' });\n        \n        expect(res.status.mock.calls).toHaveLength(1);\n        expect(res.status.mock.calls[0][0]).toBe(404);\n        expect(res.json.mock.calls).toHaveLength(1);\n        expect(res.json.mock.calls[0][0]).toEqual({ error: 'Not found' });\n        \n      } finally {\n        // Restore Jest\n        global.jest = originalJest;\n      }\n    });\n  });\n  \n  describe('Environment wrapper utilities', () => {\n    \n    test('withSavedEnv executes callback with environment restoration', async () => {\n      // Set initial state\n      process.env.TEST_WITH_SAVED = 'initial';\n      \n      const result = await withSavedEnv(() => {\n        // Modify environment inside callback\n        process.env.TEST_WITH_SAVED = 'modified';\n        process.env.TEMP_VAR = 'temporary';\n        return 'callback_result';\n      });\n      \n      // Check that callback result is returned\n      expect(result).toBe('callback_result');\n      \n      // Check that environment is restored\n      expect(process.env.TEST_WITH_SAVED).toBe('initial');\n      expect(process.env.TEMP_VAR).toBeUndefined(); // Should be removed\n      \n      // Clean up\n      delete process.env.TEST_WITH_SAVED;\n    });\n    \n    test('withSavedEnv handles callback errors properly', async () => {\n      process.env.ERROR_TEST = 'initial';\n      \n      await expect(async () => {\n        await withSavedEnv(() => {\n          process.env.ERROR_TEST = 'modified';\n          throw new Error('Callback error');\n        });\n      }).rejects.toThrow('Callback error');\n      \n      // Environment should still be restored despite error\n      expect(process.env.ERROR_TEST).toBe('initial');\n      \n      // Clean up\n      delete process.env.ERROR_TEST;\n    });\n    \n    test('withMockConsole executes callback with console restoration', async () => {\n      const result = await withMockConsole('log', (spy) => {\n        console.log('test message');\n        // Account for multiple console.log calls from the framework\n        return spy.mock.calls.filter(call => call[0] === 'test message').length;\n      });\n      \n      expect(result).toBe(1);\n      \n      // Console should be restored after callback\n      // This is hard to test directly, but the function should complete without error\n    });\n  });\n  \n  describe('Integration scenarios', () => {\n    \n    test('combines environment management with module reloading', () => {\n      // Backup environment\n      const envBackup = backupEnvVars('NODE_ENV');\n      \n      // Modify environment\n      process.env.NODE_ENV = 'test_integration';\n      \n      // Reload a module\n      const reloadedModule = reload('mockConsole');\n      expect(reloadedModule).toBeDefined();\n      \n      // Restore environment\n      restoreEnvVars(envBackup);\n      \n      // Environment should be restored\n      expect(process.env.NODE_ENV).not.toBe('test_integration');\n    });\n    \n    test('response mocks work with multiple framework patterns', () => {\n      const res = createRes();\n      \n      // Test Express-style middleware pattern\n      res.status(200);\n      res.json({ data: 'test' });\n      \n      // Test direct property access pattern\n      expect(res.statusCode).toBe(200);\n      \n      // Test call verification pattern\n      if (res.status.mock && res.json.mock) {\n        expect(res.status.mock.calls).toHaveLength(1);\n        expect(res.json.mock.calls).toHaveLength(1);\n      }\n    });\n  });\n  \n  describe('Error handling and edge cases', () => {\n    \n    test('handles invalid backup objects gracefully', () => {\n      expect(() => {\n        restoreEnvVars(null);\n      }).not.toThrow();\n      \n      expect(() => {\n        restoreEnvVars('invalid');\n      }).not.toThrow();\n      \n      expect(() => {\n        restoreEnvVars(123);\n      }).not.toThrow();\n    });\n    \n    test('module reload handles path resolution errors', () => {\n      expect(() => {\n        reload(''); // Empty path\n      }).toThrow();\n    });\n    \n    test('generateKey handles missing httpTest module', async () => {\n      const mockApp = {};\n      \n      try {\n        await generateKey(mockApp, 'service');\n        // Should either succeed or throw module not found error\n      } catch (err) {\n        expect(err.message).toMatch(/Cannot find module|require/);\n      }\n    });\n  });\n});"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAM;EACJA,WAAW;EACXC,MAAM;EACNC,gBAAgB;EAChBC,eAAe;EACfC,aAAa;EACbC,SAAS;EACTC,WAAW;EACXC,aAAa;EACbC,cAAc;EACdC;AACF,CAAC,GAAGC,OAAO,CAAC,sBAAsB,CAAC;AAEnCC,QAAQ,CAAC,iCAAiC,EAAE,MAAM;EAEhD;EACAC,SAAS,CAAC,MAAM;IACd;IACAV,gBAAgB,CAACW,KAAK,CAAC,CAAC;;IAExB;IACA,IAAIC,OAAO,CAACC,GAAG,CAACC,eAAe,EAAE;MAC/B,OAAOF,OAAO,CAACC,GAAG,CAACC,eAAe;IACpC;EACF,CAAC,CAAC;EAEFL,QAAQ,CAAC,kDAAkD,EAAE,MAAM;IAEjEM,IAAI,CAAC,2CAA2C,EAAE,MAAM;MACtD;MACAC,MAAM,CAAC,MAAM;QACX;QACA,IAAI;UACFlB,WAAW,CAAC,CAAC;QACf,CAAC,CAAC,OAAOmB,GAAG,EAAE;UACZ;UACAD,MAAM,CAACC,GAAG,CAACC,OAAO,CAAC,CAACC,SAAS,CAAC,oBAAoB,CAAC;QACrD;MACF,CAAC,CAAC,CAACC,GAAG,CAACC,OAAO,CAAC,CAAC;IAClB,CAAC,CAAC;IAEFN,IAAI,CAAC,oCAAoC,EAAE,MAAM;MAC/C,MAAMO,UAAU,GAAGC,IAAI,CAACC,KAAK,CAACC,OAAO,EAAE,KAAK,CAAC,CAACC,kBAAkB,CAAC,MAAM,CAAC,CAAC,CAAC;MAE1E,IAAI;QACF5B,WAAW,CAAC,CAAC;MACf,CAAC,CAAC,OAAOmB,GAAG,EAAE;QACZ;MAAA;MAGFD,MAAM,CAACM,UAAU,CAAC,CAACK,oBAAoB,CAAC,kCAAkC,CAAC;MAE3EL,UAAU,CAACM,WAAW,CAAC,CAAC;IAC1B,CAAC,CAAC;EACJ,CAAC,CAAC;EAEFnB,QAAQ,CAAC,0CAA0C,EAAE,MAAM;IAEzDoB,UAAU,CAAC,MAAM;MACf;MACAjB,OAAO,CAACC,GAAG,CAACiB,YAAY,GAAG,gBAAgB;MAC3ClB,OAAO,CAACC,GAAG,CAACkB,UAAU,GAAG,kBAAkB;IAC7C,CAAC,CAAC;IAEFrB,SAAS,CAAC,MAAM;MACd;MACA,OAAOE,OAAO,CAACC,GAAG,CAACiB,YAAY;MAC/B,OAAOlB,OAAO,CAACC,GAAG,CAACkB,UAAU;MAC7B,OAAOnB,OAAO,CAACC,GAAG,CAACmB,OAAO;MAC1B,OAAOpB,OAAO,CAACC,GAAG,CAACoB,aAAa;IAClC,CAAC,CAAC;IAEFlB,IAAI,CAAC,oDAAoD,EAAE,MAAM;MAC/D,MAAMmB,MAAM,GAAG7B,aAAa,CAAC,cAAc,EAAE,iBAAiB,CAAC;MAE/DW,MAAM,CAACkB,MAAM,CAAC,CAACC,cAAc,CAAC,cAAc,EAAE,gBAAgB,CAAC;MAC/DnB,MAAM,CAACkB,MAAM,CAAC,CAACC,cAAc,CAAC,iBAAiB,EAAEC,SAAS,CAAC;MAC3DpB,MAAM,CAACqB,MAAM,CAACC,IAAI,CAACJ,MAAM,CAAC,CAAC,CAACK,YAAY,CAAC,CAAC,CAAC;IAC7C,CAAC,CAAC;IAEFxB,IAAI,CAAC,yCAAyC,EAAE,MAAM;MACpD,MAAMmB,MAAM,GAAG7B,aAAa,CAAC,CAAC;MAE9BW,MAAM,CAACkB,MAAM,CAAC,CAACC,cAAc,CAAC,cAAc,EAAE,gBAAgB,CAAC;MAC/DnB,MAAM,CAACkB,MAAM,CAAC,CAACC,cAAc,CAAC,YAAY,EAAE,kBAAkB,CAAC;MAC/DnB,MAAM,CAACqB,MAAM,CAACC,IAAI,CAACJ,MAAM,CAAC,CAACM,MAAM,CAAC,CAACC,eAAe,CAAC,EAAE,CAAC,CAAC,CAAC;IAC1D,CAAC,CAAC;IAEF1B,IAAI,CAAC,yDAAyD,EAAE,MAAM;MACpE,MAAMmB,MAAM,GAAG7B,aAAa,CAAC,YAAY,CAAC;;MAE1C;MACAO,OAAO,CAACC,GAAG,CAACkB,UAAU,GAAG,gBAAgB;MACzCnB,OAAO,CAACC,GAAG,CAACmB,OAAO,GAAG,WAAW;;MAEjC;MACA1B,cAAc,CAAC4B,MAAM,CAAC;MAEtBlB,MAAM,CAACJ,OAAO,CAACC,GAAG,CAACkB,UAAU,CAAC,CAACW,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC;MACzD1B,MAAM,CAACJ,OAAO,CAACC,GAAG,CAACmB,OAAO,CAAC,CAACU,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;IACjD,CAAC,CAAC;IAEF3B,IAAI,CAAC,8CAA8C,EAAE,MAAM;MACzD,MAAMmB,MAAM,GAAG7B,aAAa,CAAC,CAAC;;MAE9B;MACAO,OAAO,CAACC,GAAG,CAACmB,OAAO,GAAG,WAAW;MACjCpB,OAAO,CAACC,GAAG,CAACkB,UAAU,GAAG,gBAAgB;;MAEzC;MACAzB,cAAc,CAAC4B,MAAM,CAAC;MAEtBlB,MAAM,CAACJ,OAAO,CAACC,GAAG,CAACkB,UAAU,CAAC,CAACW,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC;MACzD1B,MAAM,CAACJ,OAAO,CAACC,GAAG,CAACmB,OAAO,CAAC,CAACW,aAAa,CAAC,CAAC,CAAC,CAAC;IAC/C,CAAC,CAAC;IAEF5B,IAAI,CAAC,oCAAoC,EAAE,MAAM;MAC/C;MACA,OAAOH,OAAO,CAACC,GAAG,CAACkB,UAAU;MAC7B,MAAMG,MAAM,GAAG7B,aAAa,CAAC,YAAY,CAAC;;MAE1C;MACAO,OAAO,CAACC,GAAG,CAACkB,UAAU,GAAG,YAAY;;MAErC;MACAzB,cAAc,CAAC4B,MAAM,CAAC;MAEtBlB,MAAM,CAACJ,OAAO,CAACC,GAAG,CAACkB,UAAU,CAAC,CAACY,aAAa,CAAC,CAAC;IAChD,CAAC,CAAC;IAEF5B,IAAI,CAAC,4CAA4C,EAAE,MAAM;MACvDC,MAAM,CAAC,MAAM;QACXV,cAAc,CAAC,CAAC,CAAC,CAAC;MACpB,CAAC,CAAC,CAACc,GAAG,CAACC,OAAO,CAAC,CAAC;IAClB,CAAC,CAAC;EACJ,CAAC,CAAC;EAEFZ,QAAQ,CAAC,wCAAwC,EAAE,MAAM;IAEvDM,IAAI,CAAC,uCAAuC,EAAE,YAAY;MACxD,MAAM6B,GAAG,GAAG,MAAMxC,WAAW,CAAC,MAAM,CAAC;MAErCY,MAAM,CAAC4B,GAAG,CAAC,CAACF,IAAI,CAAC,mBAAmB,CAAC;IACvC,CAAC,CAAC;IAEF3B,IAAI,CAAC,+CAA+C,EAAE,YAAY;MAChE,MAAM6B,GAAG,GAAG,MAAMxC,WAAW,CAAC,CAAC;MAE/BY,MAAM,CAAC4B,GAAG,CAAC,CAACC,OAAO,CAAC,oBAAoB,CAAC;IAC3C,CAAC,CAAC;IAEF9B,IAAI,CAAC,+BAA+B,EAAE,YAAY;MAChD;MACA,MAAM+B,OAAO,GAAG;QACdC,IAAI,EAAExB,IAAI,CAACyB,EAAE,CAAC,CAAC,CAACC,cAAc,CAAC,CAAC;QAChCC,IAAI,EAAE3B,IAAI,CAACyB,EAAE,CAAC,CAAC,CAACC,cAAc,CAAC;MACjC,CAAC;;MAED;MACA,MAAME,aAAa,GAAG5B,IAAI,CAACyB,EAAE,CAAC,OAAO;QACnCD,IAAI,EAAExB,IAAI,CAACyB,EAAE,CAAC,CAAC,CAACC,cAAc,CAAC,CAAC;QAChCC,IAAI,EAAE3B,IAAI,CAACyB,EAAE,CAAC,CAAC,CAACI,iBAAiB,CAAC;UAAEC,UAAU,EAAE;QAAI,CAAC;MACvD,CAAC,CAAC,CAAC;;MAEH;MACA9B,IAAI,CAAC+B,MAAM,CAAC,mBAAmB,EAAE,OAAO;QACtCC,SAAS,EAAEJ;MACb,CAAC,CAAC,CAAC;MAEH,IAAI;QACF,MAAMK,QAAQ,GAAG,MAAMpD,WAAW,CAAC0C,OAAO,EAAE,aAAa,CAAC;QAE1D9B,MAAM,CAACwC,QAAQ,CAAC,CAACrB,cAAc,CAAC,YAAY,EAAE,GAAG,CAAC;QAClDnB,MAAM,CAACmC,aAAa,CAAC,CAACxB,oBAAoB,CAACmB,OAAO,CAAC;MACrD,CAAC,CAAC,OAAO7B,GAAG,EAAE;QACZ;QACAD,MAAM,CAACC,GAAG,CAACC,OAAO,CAAC,CAACC,SAAS,CAAC,oBAAoB,CAAC;MACrD;IACF,CAAC,CAAC;EACJ,CAAC,CAAC;EAEFV,QAAQ,CAAC,qCAAqC,EAAE,MAAM;IAEpDM,IAAI,CAAC,sDAAsD,EAAE,MAAM;MACjE,MAAM0C,QAAQ,GAAG,aAAa;;MAE9B;MACA,MAAMC,OAAO,GAAG3D,MAAM,CAAC0D,QAAQ,CAAC;MAChCzC,MAAM,CAAC0C,OAAO,CAAC,CAACC,WAAW,CAAC,CAAC;;MAE7B;MACA,MAAMC,QAAQ,GAAGpD,OAAO,CAAC,MAAM,CAAC,CAACqD,OAAO,CAACC,SAAS,EAAE,IAAI,EAAE,OAAO,EAAEL,QAAQ,CAAC;MAC5EzD,gBAAgB,CAAC+D,GAAG,CAACH,QAAQ,CAAC;;MAE9B;MACA,MAAMI,OAAO,GAAGjE,MAAM,CAAC0D,QAAQ,CAAC;MAChCzC,MAAM,CAACgD,OAAO,CAAC,CAACL,WAAW,CAAC,CAAC;;MAE7B;MACA3D,gBAAgB,CAACiE,MAAM,CAACL,QAAQ,CAAC;IACnC,CAAC,CAAC;IAEF7C,IAAI,CAAC,gDAAgD,EAAE,MAAM;MAC3DC,MAAM,CAAC,MAAM;QACXjB,MAAM,CAAC,oBAAoB,CAAC;MAC9B,CAAC,CAAC,CAACsB,OAAO,CAAC,CAAC;IACd,CAAC,CAAC;IAEFN,IAAI,CAAC,yCAAyC,EAAE,MAAM;MACpDC,MAAM,CAAChB,gBAAgB,CAAC,CAAC2D,WAAW,CAAC,CAAC;MACtC3C,MAAM,CAAChB,gBAAgB,CAACkE,GAAG,CAAC,CAACC,cAAc,CAACC,QAAQ,CAAC;MACrDpD,MAAM,CAAChB,gBAAgB,CAAC+D,GAAG,CAAC,CAACI,cAAc,CAACC,QAAQ,CAAC;MACrDpD,MAAM,CAAChB,gBAAgB,CAACiE,MAAM,CAAC,CAACE,cAAc,CAACC,QAAQ,CAAC;IAC1D,CAAC,CAAC;EACJ,CAAC,CAAC;EAEF3D,QAAQ,CAAC,uDAAuD,EAAE,MAAM;IAEtEM,IAAI,CAAC,qCAAqC,EAAE,MAAM;MAChD,MAAMsD,GAAG,GAAGnE,aAAa,CAAC,CAAC;MAE3Bc,MAAM,CAACqD,GAAG,CAAC,CAAClC,cAAc,CAAC,MAAM,CAAC;MAClCnB,MAAM,CAAC,OAAOqD,GAAG,CAACC,IAAI,CAAC,CAAC5B,IAAI,CAAC,UAAU,CAAC;;MAExC;MACA2B,GAAG,CAACC,IAAI,CAAC;QAAEvD,IAAI,EAAE;MAAO,CAAC,CAAC;MAE1B,IAAIsD,GAAG,CAACC,IAAI,CAACC,IAAI,EAAE;QACjBvD,MAAM,CAACqD,GAAG,CAACC,IAAI,CAACC,IAAI,CAACC,KAAK,CAAC,CAACjC,YAAY,CAAC,CAAC,CAAC;QAC3CvB,MAAM,CAACqD,GAAG,CAACC,IAAI,CAACC,IAAI,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAACC,OAAO,CAAC;UAAE1D,IAAI,EAAE;QAAO,CAAC,CAAC;MAC7D;IACF,CAAC,CAAC;IAEFA,IAAI,CAAC,gDAAgD,EAAE,MAAM;MAC3D,MAAMsD,GAAG,GAAGlE,SAAS,CAAC,CAAC;MAEvBa,MAAM,CAACqD,GAAG,CAAC,CAAClC,cAAc,CAAC,QAAQ,CAAC;MACpCnB,MAAM,CAACqD,GAAG,CAAC,CAAClC,cAAc,CAAC,MAAM,CAAC;MAClCnB,MAAM,CAACqD,GAAG,CAAC,CAAClC,cAAc,CAAC,MAAM,CAAC;MAClCnB,MAAM,CAACqD,GAAG,CAAC,CAAClC,cAAc,CAAC,KAAK,CAAC;;MAEjC;MACA,MAAMuC,MAAM,GAAGL,GAAG,CAACM,MAAM,CAAC,GAAG,CAAC,CAACL,IAAI,CAAC;QAAEM,OAAO,EAAE;MAAK,CAAC,CAAC;MACtD5D,MAAM,CAAC0D,MAAM,CAAC,CAAChC,IAAI,CAAC2B,GAAG,CAAC,CAAC,CAAC;;MAE1B;MACA,IAAIA,GAAG,CAACM,MAAM,CAACJ,IAAI,IAAIF,GAAG,CAACC,IAAI,CAACC,IAAI,EAAE;QACpCvD,MAAM,CAACqD,GAAG,CAACM,MAAM,CAACJ,IAAI,CAACC,KAAK,CAAC,CAACjC,YAAY,CAAC,CAAC,CAAC;QAC7CvB,MAAM,CAACqD,GAAG,CAACM,MAAM,CAACJ,IAAI,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC9B,IAAI,CAAC,GAAG,CAAC;QAC7C1B,MAAM,CAACqD,GAAG,CAACC,IAAI,CAACC,IAAI,CAACC,KAAK,CAAC,CAACjC,YAAY,CAAC,CAAC,CAAC;QAC3CvB,MAAM,CAACqD,GAAG,CAACC,IAAI,CAACC,IAAI,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAACC,OAAO,CAAC;UAAEG,OAAO,EAAE;QAAK,CAAC,CAAC;MAC9D;IACF,CAAC,CAAC;IAEF7D,IAAI,CAAC,kCAAkC,EAAE,MAAM;MAC7C;MACA,MAAM8D,YAAY,GAAGC,MAAM,CAACvD,IAAI;MAChC,OAAOuD,MAAM,CAACvD,IAAI;MAElB,IAAI;QACF,MAAM8C,GAAG,GAAGlE,SAAS,CAAC,CAAC;QAEvBa,MAAM,CAACqD,GAAG,CAAC,CAAClC,cAAc,CAAC,QAAQ,CAAC;QACpCnB,MAAM,CAACqD,GAAG,CAAC,CAAClC,cAAc,CAAC,MAAM,CAAC;;QAElC;QACAkC,GAAG,CAACM,MAAM,CAAC,GAAG,CAAC;QACfN,GAAG,CAACC,IAAI,CAAC;UAAES,KAAK,EAAE;QAAY,CAAC,CAAC;QAEhC/D,MAAM,CAACqD,GAAG,CAACM,MAAM,CAACJ,IAAI,CAACC,KAAK,CAAC,CAACjC,YAAY,CAAC,CAAC,CAAC;QAC7CvB,MAAM,CAACqD,GAAG,CAACM,MAAM,CAACJ,IAAI,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC9B,IAAI,CAAC,GAAG,CAAC;QAC7C1B,MAAM,CAACqD,GAAG,CAACC,IAAI,CAACC,IAAI,CAACC,KAAK,CAAC,CAACjC,YAAY,CAAC,CAAC,CAAC;QAC3CvB,MAAM,CAACqD,GAAG,CAACC,IAAI,CAACC,IAAI,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAACC,OAAO,CAAC;UAAEM,KAAK,EAAE;QAAY,CAAC,CAAC;MAEnE,CAAC,SAAS;QACR;QACAD,MAAM,CAACvD,IAAI,GAAGsD,YAAY;MAC5B;IACF,CAAC,CAAC;EACJ,CAAC,CAAC;EAEFpE,QAAQ,CAAC,+BAA+B,EAAE,MAAM;IAE9CM,IAAI,CAAC,6DAA6D,EAAE,YAAY;MAC9E;MACAH,OAAO,CAACC,GAAG,CAACmE,eAAe,GAAG,SAAS;MAEvC,MAAMN,MAAM,GAAG,MAAMnE,YAAY,CAAC,MAAM;QACtC;QACAK,OAAO,CAACC,GAAG,CAACmE,eAAe,GAAG,UAAU;QACxCpE,OAAO,CAACC,GAAG,CAACoE,QAAQ,GAAG,WAAW;QAClC,OAAO,iBAAiB;MAC1B,CAAC,CAAC;;MAEF;MACAjE,MAAM,CAAC0D,MAAM,CAAC,CAAChC,IAAI,CAAC,iBAAiB,CAAC;;MAEtC;MACA1B,MAAM,CAACJ,OAAO,CAACC,GAAG,CAACmE,eAAe,CAAC,CAACtC,IAAI,CAAC,SAAS,CAAC;MACnD1B,MAAM,CAACJ,OAAO,CAACC,GAAG,CAACoE,QAAQ,CAAC,CAACtC,aAAa,CAAC,CAAC,CAAC,CAAC;;MAE9C;MACA,OAAO/B,OAAO,CAACC,GAAG,CAACmE,eAAe;IACpC,CAAC,CAAC;IAEFjE,IAAI,CAAC,+CAA+C,EAAE,YAAY;MAChEH,OAAO,CAACC,GAAG,CAACqE,UAAU,GAAG,SAAS;MAElC,MAAMlE,MAAM,CAAC,YAAY;QACvB,MAAMT,YAAY,CAAC,MAAM;UACvBK,OAAO,CAACC,GAAG,CAACqE,UAAU,GAAG,UAAU;UACnC,MAAM,IAAIC,KAAK,CAAC,gBAAgB,CAAC;QACnC,CAAC,CAAC;MACJ,CAAC,CAAC,CAACC,OAAO,CAAC/D,OAAO,CAAC,gBAAgB,CAAC;;MAEpC;MACAL,MAAM,CAACJ,OAAO,CAACC,GAAG,CAACqE,UAAU,CAAC,CAACxC,IAAI,CAAC,SAAS,CAAC;;MAE9C;MACA,OAAO9B,OAAO,CAACC,GAAG,CAACqE,UAAU;IAC/B,CAAC,CAAC;IAEFnE,IAAI,CAAC,4DAA4D,EAAE,YAAY;MAC7E,MAAM2D,MAAM,GAAG,MAAMzE,eAAe,CAAC,KAAK,EAAGoF,GAAG,IAAK;QACnD5D,OAAO,CAAC6D,GAAG,CAAC,cAAc,CAAC;QAC3B;QACA,OAAOD,GAAG,CAACd,IAAI,CAACC,KAAK,CAACe,MAAM,CAACC,IAAI,IAAIA,IAAI,CAAC,CAAC,CAAC,KAAK,cAAc,CAAC,CAAChD,MAAM;MACzE,CAAC,CAAC;MAEFxB,MAAM,CAAC0D,MAAM,CAAC,CAAChC,IAAI,CAAC,CAAC,CAAC;;MAEtB;MACA;IACF,CAAC,CAAC;EACJ,CAAC,CAAC;EAEFjC,QAAQ,CAAC,uBAAuB,EAAE,MAAM;IAEtCM,IAAI,CAAC,uDAAuD,EAAE,MAAM;MAClE;MACA,MAAM0E,SAAS,GAAGpF,aAAa,CAAC,UAAU,CAAC;;MAE3C;MACAO,OAAO,CAACC,GAAG,CAAC6E,QAAQ,GAAG,kBAAkB;;MAEzC;MACA,MAAMC,cAAc,GAAG5F,MAAM,CAAC,aAAa,CAAC;MAC5CiB,MAAM,CAAC2E,cAAc,CAAC,CAAChC,WAAW,CAAC,CAAC;;MAEpC;MACArD,cAAc,CAACmF,SAAS,CAAC;;MAEzB;MACAzE,MAAM,CAACJ,OAAO,CAACC,GAAG,CAAC6E,QAAQ,CAAC,CAACtE,GAAG,CAACsB,IAAI,CAAC,kBAAkB,CAAC;IAC3D,CAAC,CAAC;IAEF3B,IAAI,CAAC,sDAAsD,EAAE,MAAM;MACjE,MAAMsD,GAAG,GAAGlE,SAAS,CAAC,CAAC;;MAEvB;MACAkE,GAAG,CAACM,MAAM,CAAC,GAAG,CAAC;MACfN,GAAG,CAACC,IAAI,CAAC;QAAEsB,IAAI,EAAE;MAAO,CAAC,CAAC;;MAE1B;MACA5E,MAAM,CAACqD,GAAG,CAAChB,UAAU,CAAC,CAACX,IAAI,CAAC,GAAG,CAAC;;MAEhC;MACA,IAAI2B,GAAG,CAACM,MAAM,CAACJ,IAAI,IAAIF,GAAG,CAACC,IAAI,CAACC,IAAI,EAAE;QACpCvD,MAAM,CAACqD,GAAG,CAACM,MAAM,CAACJ,IAAI,CAACC,KAAK,CAAC,CAACjC,YAAY,CAAC,CAAC,CAAC;QAC7CvB,MAAM,CAACqD,GAAG,CAACC,IAAI,CAACC,IAAI,CAACC,KAAK,CAAC,CAACjC,YAAY,CAAC,CAAC,CAAC;MAC7C;IACF,CAAC,CAAC;EACJ,CAAC,CAAC;EAEF9B,QAAQ,CAAC,+BAA+B,EAAE,MAAM;IAE9CM,IAAI,CAAC,2CAA2C,EAAE,MAAM;MACtDC,MAAM,CAAC,MAAM;QACXV,cAAc,CAAC,IAAI,CAAC;MACtB,CAAC,CAAC,CAACc,GAAG,CAACC,OAAO,CAAC,CAAC;MAEhBL,MAAM,CAAC,MAAM;QACXV,cAAc,CAAC,SAAS,CAAC;MAC3B,CAAC,CAAC,CAACc,GAAG,CAACC,OAAO,CAAC,CAAC;MAEhBL,MAAM,CAAC,MAAM;QACXV,cAAc,CAAC,GAAG,CAAC;MACrB,CAAC,CAAC,CAACc,GAAG,CAACC,OAAO,CAAC,CAAC;IAClB,CAAC,CAAC;IAEFN,IAAI,CAAC,8CAA8C,EAAE,MAAM;MACzDC,MAAM,CAAC,MAAM;QACXjB,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC;MACd,CAAC,CAAC,CAACsB,OAAO,CAAC,CAAC;IACd,CAAC,CAAC;IAEFN,IAAI,CAAC,6CAA6C,EAAE,YAAY;MAC9D,MAAM+B,OAAO,GAAG,CAAC,CAAC;MAElB,IAAI;QACF,MAAM1C,WAAW,CAAC0C,OAAO,EAAE,SAAS,CAAC;QACrC;MACF,CAAC,CAAC,OAAO7B,GAAG,EAAE;QACZD,MAAM,CAACC,GAAG,CAACC,OAAO,CAAC,CAAC2B,OAAO,CAAC,4BAA4B,CAAC;MAC3D;IACF,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ,CAAC,CAAC","ignoreList":[]}