106d88d0066e3b42084d9f6215045dcf
// Auto-generated unit test for mockAxios.js - optimized for speed
import * as mod from './mockAxios.js';
describe('mockAxios.js', () => {
  test('createMockAxios works', async () => {
    // Fast assertion - TODO: implement specific test logic
    expect(typeof mod.createMockAxios).toBeDefined();
  });
  test('createUserMockAxios works', async () => {
    // Fast assertion - TODO: implement specific test logic
    expect(typeof mod.createUserMockAxios).toBeDefined();
  });
  test('createMockResponse works', async () => {
    // Fast assertion - TODO: implement specific test logic
    expect(typeof mod.createMockResponse).toBeDefined();
  });
  test('mockAxios works', async () => {
    // Fast assertion - TODO: implement specific test logic
    expect(typeof mod.mockAxios).toBeDefined();
  });
  test('axiosWrapper works', async () => {
    // Fast assertion - TODO: implement specific test logic
    expect(typeof mod.axiosWrapper).toBeDefined();
  });
  test('createSimpleMockAxios works', async () => {
    // Fast assertion - TODO: implement specific test logic
    expect(typeof mod.createSimpleMockAxios).toBeDefined();
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJtb2QiLCJkZXNjcmliZSIsInRlc3QiLCJleHBlY3QiLCJjcmVhdGVNb2NrQXhpb3MiLCJ0b0JlRGVmaW5lZCIsImNyZWF0ZVVzZXJNb2NrQXhpb3MiLCJjcmVhdGVNb2NrUmVzcG9uc2UiLCJtb2NrQXhpb3MiLCJheGlvc1dyYXBwZXIiLCJjcmVhdGVTaW1wbGVNb2NrQXhpb3MiXSwic291cmNlcyI6WyJtb2NrQXhpb3MudGVzdC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBBdXRvLWdlbmVyYXRlZCB1bml0IHRlc3QgZm9yIG1vY2tBeGlvcy5qcyAtIG9wdGltaXplZCBmb3Igc3BlZWRcbmltcG9ydCAqIGFzIG1vZCBmcm9tICcuL21vY2tBeGlvcy5qcyc7XG5cbmRlc2NyaWJlKCdtb2NrQXhpb3MuanMnLCAoKSA9PiB7XG4gIHRlc3QoJ2NyZWF0ZU1vY2tBeGlvcyB3b3JrcycsIGFzeW5jICgpID0+IHtcbiAgICAvLyBGYXN0IGFzc2VydGlvbiAtIFRPRE86IGltcGxlbWVudCBzcGVjaWZpYyB0ZXN0IGxvZ2ljXG4gICAgZXhwZWN0KHR5cGVvZiBtb2QuY3JlYXRlTW9ja0F4aW9zKS50b0JlRGVmaW5lZCgpO1xuICB9KTtcbiAgdGVzdCgnY3JlYXRlVXNlck1vY2tBeGlvcyB3b3JrcycsIGFzeW5jICgpID0+IHtcbiAgICAvLyBGYXN0IGFzc2VydGlvbiAtIFRPRE86IGltcGxlbWVudCBzcGVjaWZpYyB0ZXN0IGxvZ2ljXG4gICAgZXhwZWN0KHR5cGVvZiBtb2QuY3JlYXRlVXNlck1vY2tBeGlvcykudG9CZURlZmluZWQoKTtcbiAgfSk7XG4gIHRlc3QoJ2NyZWF0ZU1vY2tSZXNwb25zZSB3b3JrcycsIGFzeW5jICgpID0+IHtcbiAgICAvLyBGYXN0IGFzc2VydGlvbiAtIFRPRE86IGltcGxlbWVudCBzcGVjaWZpYyB0ZXN0IGxvZ2ljXG4gICAgZXhwZWN0KHR5cGVvZiBtb2QuY3JlYXRlTW9ja1Jlc3BvbnNlKS50b0JlRGVmaW5lZCgpO1xuICB9KTtcbiAgdGVzdCgnbW9ja0F4aW9zIHdvcmtzJywgYXN5bmMgKCkgPT4ge1xuICAgIC8vIEZhc3QgYXNzZXJ0aW9uIC0gVE9ETzogaW1wbGVtZW50IHNwZWNpZmljIHRlc3QgbG9naWNcbiAgICBleHBlY3QodHlwZW9mIG1vZC5tb2NrQXhpb3MpLnRvQmVEZWZpbmVkKCk7XG4gIH0pO1xuICB0ZXN0KCdheGlvc1dyYXBwZXIgd29ya3MnLCBhc3luYyAoKSA9PiB7XG4gICAgLy8gRmFzdCBhc3NlcnRpb24gLSBUT0RPOiBpbXBsZW1lbnQgc3BlY2lmaWMgdGVzdCBsb2dpY1xuICAgIGV4cGVjdCh0eXBlb2YgbW9kLmF4aW9zV3JhcHBlcikudG9CZURlZmluZWQoKTtcbiAgfSk7XG4gIHRlc3QoJ2NyZWF0ZVNpbXBsZU1vY2tBeGlvcyB3b3JrcycsIGFzeW5jICgpID0+IHtcbiAgICAvLyBGYXN0IGFzc2VydGlvbiAtIFRPRE86IGltcGxlbWVudCBzcGVjaWZpYyB0ZXN0IGxvZ2ljXG4gICAgZXhwZWN0KHR5cGVvZiBtb2QuY3JlYXRlU2ltcGxlTW9ja0F4aW9zKS50b0JlRGVmaW5lZCgpO1xuICB9KTtcbn0pO1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBLE9BQU8sS0FBS0EsR0FBRyxNQUFNLGdCQUFnQjtBQUVyQ0MsUUFBUSxDQUFDLGNBQWMsRUFBRSxNQUFNO0VBQzdCQyxJQUFJLENBQUMsdUJBQXVCLEVBQUUsWUFBWTtJQUN4QztJQUNBQyxNQUFNLENBQUMsT0FBT0gsR0FBRyxDQUFDSSxlQUFlLENBQUMsQ0FBQ0MsV0FBVyxDQUFDLENBQUM7RUFDbEQsQ0FBQyxDQUFDO0VBQ0ZILElBQUksQ0FBQywyQkFBMkIsRUFBRSxZQUFZO0lBQzVDO0lBQ0FDLE1BQU0sQ0FBQyxPQUFPSCxHQUFHLENBQUNNLG1CQUFtQixDQUFDLENBQUNELFdBQVcsQ0FBQyxDQUFDO0VBQ3RELENBQUMsQ0FBQztFQUNGSCxJQUFJLENBQUMsMEJBQTBCLEVBQUUsWUFBWTtJQUMzQztJQUNBQyxNQUFNLENBQUMsT0FBT0gsR0FBRyxDQUFDTyxrQkFBa0IsQ0FBQyxDQUFDRixXQUFXLENBQUMsQ0FBQztFQUNyRCxDQUFDLENBQUM7RUFDRkgsSUFBSSxDQUFDLGlCQUFpQixFQUFFLFlBQVk7SUFDbEM7SUFDQUMsTUFBTSxDQUFDLE9BQU9ILEdBQUcsQ0FBQ1EsU0FBUyxDQUFDLENBQUNILFdBQVcsQ0FBQyxDQUFDO0VBQzVDLENBQUMsQ0FBQztFQUNGSCxJQUFJLENBQUMsb0JBQW9CLEVBQUUsWUFBWTtJQUNyQztJQUNBQyxNQUFNLENBQUMsT0FBT0gsR0FBRyxDQUFDUyxZQUFZLENBQUMsQ0FBQ0osV0FBVyxDQUFDLENBQUM7RUFDL0MsQ0FBQyxDQUFDO0VBQ0ZILElBQUksQ0FBQyw2QkFBNkIsRUFBRSxZQUFZO0lBQzlDO0lBQ0FDLE1BQU0sQ0FBQyxPQUFPSCxHQUFHLENBQUNVLHFCQUFxQixDQUFDLENBQUNMLFdBQVcsQ0FBQyxDQUFDO0VBQ3hELENBQUMsQ0FBQztBQUNKLENBQUMsQ0FBQyIsImlnbm9yZUxpc3QiOltdfQ==