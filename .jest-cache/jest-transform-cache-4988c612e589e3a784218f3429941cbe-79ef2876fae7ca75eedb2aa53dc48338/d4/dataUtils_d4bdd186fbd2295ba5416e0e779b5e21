f197861f0badfdb6aacff5dac014c8cf
/**
 * Data and Database Testing Utilities
 *
 * This module provides utilities for database mocking, model simulation,
 * and data generation for testing scenarios. These utilities help test
 * data-dependent applications without requiring actual database connections.
 *
 * Design philosophy:
 * - Database-free testing for fast, isolated tests
 * - Realistic data generation for comprehensive testing
 * - In-memory model simulation with full API compatibility
 * - Email system mocking for notification testing
 *
 * Why data utilities are grouped together:
 * 1. All utilities deal with data persistence and generation
 * 2. They provide alternatives to external data dependencies
 * 3. Often used together in application testing scenarios
 * 4. Share common patterns for entity creation and management
 *
 * Module organization rationale:
 * These utilities are grouped because they all serve the purpose of
 * providing data and persistence layer testing without external dependencies,
 * offering different levels of abstraction for various testing needs.
 */
// Import mockModels for in-memory database model simulation
// mockModels provides Mongoose-compatible models without database dependencies
// for testing data-dependent applications with full CRUD operations
import mockModels from '../utils/mockModels.js';
// Import sendEmail utility for email system mocking
// sendEmail provides lightweight email mocking for testing notification systems
// without requiring external mail service configuration or actual email delivery
import sendEmail from '../utils/sendEmail.js';
/**
 * Export data and database testing utilities
 *
 * These utilities are exported together because they provide
 * complementary functionality for data layer testing:
 *
 * - mockModels: For database model simulation and CRUD operations
 * - sendEmail: For email system mocking and notification testing
 *
 * Export strategy:
 * - Named exports for ES module compatibility
 * - Descriptive property names that indicate purpose
 * - Grouped by data-related functionality for developer convenience
 */
export { 
// In-memory database model simulation with Mongoose compatibility
mockModels, 
// Email system mocking for notification testing
sendEmail };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiL2hvbWUvcnVubmVyL3dvcmtzcGFjZS9saWIvZGF0YVV0aWxzLnRzIiwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztHQXVCRztBQUVILDREQUE0RDtBQUM1RCwrRUFBK0U7QUFDL0Usb0VBQW9FO0FBQ3BFLE9BQU8sVUFBVSxNQUFNLHdCQUF3QixDQUFDO0FBRWhELG9EQUFvRDtBQUNwRCxnRkFBZ0Y7QUFDaEYsaUZBQWlGO0FBQ2pGLE9BQU8sU0FBUyxNQUFNLHVCQUF1QixDQUFDO0FBRTlDOzs7Ozs7Ozs7Ozs7O0dBYUc7QUFDSCxPQUFPO0FBQ0wsa0VBQWtFO0FBQ2xFLFVBQVU7QUFFVixnREFBZ0Q7QUFDaEQsU0FBUyxFQUNWLENBQUMiLCJuYW1lcyI6W10sInNvdXJjZXMiOlsiL2hvbWUvcnVubmVyL3dvcmtzcGFjZS9saWIvZGF0YVV0aWxzLnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogRGF0YSBhbmQgRGF0YWJhc2UgVGVzdGluZyBVdGlsaXRpZXNcbiAqIFxuICogVGhpcyBtb2R1bGUgcHJvdmlkZXMgdXRpbGl0aWVzIGZvciBkYXRhYmFzZSBtb2NraW5nLCBtb2RlbCBzaW11bGF0aW9uLFxuICogYW5kIGRhdGEgZ2VuZXJhdGlvbiBmb3IgdGVzdGluZyBzY2VuYXJpb3MuIFRoZXNlIHV0aWxpdGllcyBoZWxwIHRlc3RcbiAqIGRhdGEtZGVwZW5kZW50IGFwcGxpY2F0aW9ucyB3aXRob3V0IHJlcXVpcmluZyBhY3R1YWwgZGF0YWJhc2UgY29ubmVjdGlvbnMuXG4gKiBcbiAqIERlc2lnbiBwaGlsb3NvcGh5OlxuICogLSBEYXRhYmFzZS1mcmVlIHRlc3RpbmcgZm9yIGZhc3QsIGlzb2xhdGVkIHRlc3RzXG4gKiAtIFJlYWxpc3RpYyBkYXRhIGdlbmVyYXRpb24gZm9yIGNvbXByZWhlbnNpdmUgdGVzdGluZ1xuICogLSBJbi1tZW1vcnkgbW9kZWwgc2ltdWxhdGlvbiB3aXRoIGZ1bGwgQVBJIGNvbXBhdGliaWxpdHlcbiAqIC0gRW1haWwgc3lzdGVtIG1vY2tpbmcgZm9yIG5vdGlmaWNhdGlvbiB0ZXN0aW5nXG4gKiBcbiAqIFdoeSBkYXRhIHV0aWxpdGllcyBhcmUgZ3JvdXBlZCB0b2dldGhlcjpcbiAqIDEuIEFsbCB1dGlsaXRpZXMgZGVhbCB3aXRoIGRhdGEgcGVyc2lzdGVuY2UgYW5kIGdlbmVyYXRpb25cbiAqIDIuIFRoZXkgcHJvdmlkZSBhbHRlcm5hdGl2ZXMgdG8gZXh0ZXJuYWwgZGF0YSBkZXBlbmRlbmNpZXNcbiAqIDMuIE9mdGVuIHVzZWQgdG9nZXRoZXIgaW4gYXBwbGljYXRpb24gdGVzdGluZyBzY2VuYXJpb3NcbiAqIDQuIFNoYXJlIGNvbW1vbiBwYXR0ZXJucyBmb3IgZW50aXR5IGNyZWF0aW9uIGFuZCBtYW5hZ2VtZW50XG4gKiBcbiAqIE1vZHVsZSBvcmdhbml6YXRpb24gcmF0aW9uYWxlOlxuICogVGhlc2UgdXRpbGl0aWVzIGFyZSBncm91cGVkIGJlY2F1c2UgdGhleSBhbGwgc2VydmUgdGhlIHB1cnBvc2Ugb2ZcbiAqIHByb3ZpZGluZyBkYXRhIGFuZCBwZXJzaXN0ZW5jZSBsYXllciB0ZXN0aW5nIHdpdGhvdXQgZXh0ZXJuYWwgZGVwZW5kZW5jaWVzLFxuICogb2ZmZXJpbmcgZGlmZmVyZW50IGxldmVscyBvZiBhYnN0cmFjdGlvbiBmb3IgdmFyaW91cyB0ZXN0aW5nIG5lZWRzLlxuICovXG5cbi8vIEltcG9ydCBtb2NrTW9kZWxzIGZvciBpbi1tZW1vcnkgZGF0YWJhc2UgbW9kZWwgc2ltdWxhdGlvblxuLy8gbW9ja01vZGVscyBwcm92aWRlcyBNb25nb29zZS1jb21wYXRpYmxlIG1vZGVscyB3aXRob3V0IGRhdGFiYXNlIGRlcGVuZGVuY2llc1xuLy8gZm9yIHRlc3RpbmcgZGF0YS1kZXBlbmRlbnQgYXBwbGljYXRpb25zIHdpdGggZnVsbCBDUlVEIG9wZXJhdGlvbnNcbmltcG9ydCBtb2NrTW9kZWxzIGZyb20gJy4uL3V0aWxzL21vY2tNb2RlbHMuanMnO1xuXG4vLyBJbXBvcnQgc2VuZEVtYWlsIHV0aWxpdHkgZm9yIGVtYWlsIHN5c3RlbSBtb2NraW5nXG4vLyBzZW5kRW1haWwgcHJvdmlkZXMgbGlnaHR3ZWlnaHQgZW1haWwgbW9ja2luZyBmb3IgdGVzdGluZyBub3RpZmljYXRpb24gc3lzdGVtc1xuLy8gd2l0aG91dCByZXF1aXJpbmcgZXh0ZXJuYWwgbWFpbCBzZXJ2aWNlIGNvbmZpZ3VyYXRpb24gb3IgYWN0dWFsIGVtYWlsIGRlbGl2ZXJ5XG5pbXBvcnQgc2VuZEVtYWlsIGZyb20gJy4uL3V0aWxzL3NlbmRFbWFpbC5qcyc7XG5cbi8qKlxuICogRXhwb3J0IGRhdGEgYW5kIGRhdGFiYXNlIHRlc3RpbmcgdXRpbGl0aWVzXG4gKiBcbiAqIFRoZXNlIHV0aWxpdGllcyBhcmUgZXhwb3J0ZWQgdG9nZXRoZXIgYmVjYXVzZSB0aGV5IHByb3ZpZGVcbiAqIGNvbXBsZW1lbnRhcnkgZnVuY3Rpb25hbGl0eSBmb3IgZGF0YSBsYXllciB0ZXN0aW5nOlxuICogXG4gKiAtIG1vY2tNb2RlbHM6IEZvciBkYXRhYmFzZSBtb2RlbCBzaW11bGF0aW9uIGFuZCBDUlVEIG9wZXJhdGlvbnNcbiAqIC0gc2VuZEVtYWlsOiBGb3IgZW1haWwgc3lzdGVtIG1vY2tpbmcgYW5kIG5vdGlmaWNhdGlvbiB0ZXN0aW5nXG4gKiBcbiAqIEV4cG9ydCBzdHJhdGVneTpcbiAqIC0gTmFtZWQgZXhwb3J0cyBmb3IgRVMgbW9kdWxlIGNvbXBhdGliaWxpdHlcbiAqIC0gRGVzY3JpcHRpdmUgcHJvcGVydHkgbmFtZXMgdGhhdCBpbmRpY2F0ZSBwdXJwb3NlXG4gKiAtIEdyb3VwZWQgYnkgZGF0YS1yZWxhdGVkIGZ1bmN0aW9uYWxpdHkgZm9yIGRldmVsb3BlciBjb252ZW5pZW5jZVxuICovXG5leHBvcnQge1xuICAvLyBJbi1tZW1vcnkgZGF0YWJhc2UgbW9kZWwgc2ltdWxhdGlvbiB3aXRoIE1vbmdvb3NlIGNvbXBhdGliaWxpdHlcbiAgbW9ja01vZGVscyxcbiAgXG4gIC8vIEVtYWlsIHN5c3RlbSBtb2NraW5nIGZvciBub3RpZmljYXRpb24gdGVzdGluZ1xuICBzZW5kRW1haWxcbn07Il0sInZlcnNpb24iOjN9