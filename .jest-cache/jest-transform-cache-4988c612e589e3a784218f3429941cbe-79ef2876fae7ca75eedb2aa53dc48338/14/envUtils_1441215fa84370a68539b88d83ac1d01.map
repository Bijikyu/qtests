{"file":"/home/runner/workspace/lib/envUtils.ts","mappings":";AAAA;;;;;;;;;;;;GAYG;;;AAEH,iEAAiE;AACjE,oDAA8C;AAyB5C,wFAzBO,oBAAO,OAyBP;AAxBT,4DAQiC;AACjC,4DAAsD;AAiBpD,4FAjBO,4BAAW,OAiBP;AAfb,sDAAsD;AACtD,MAAM,WAAW,GAAG;IAClB,cAAc,EAAd,+BAAc;IACd,aAAa,EAAb,8BAAa;IACb,QAAQ,EAAR,yBAAQ;IACR,UAAU,EAAV,2BAAU;IACV,mBAAmB,EAAnB,oCAAmB;IACnB,yBAAyB,EAAzB,0CAAyB;IACzB,iBAAiB,EAAjB,kCAAiB;CAClB,CAAC;AAKA,kCAAW","names":[],"sources":["/home/runner/workspace/lib/envUtils.ts"],"sourcesContent":["/**\n * Environment Management Utilities - TypeScript ES Module Implementation\n * \n * This module provides utilities specifically for managing test environments,\n * including environment variable manipulation and test isolation. These utilities\n * help create isolated, predictable test environments without side effects.\n * \n * Design philosophy:\n * - Environment isolation to prevent test interference\n * - Predictable test conditions with known values\n * - Easy setup and teardown of test environments\n * - Simple, focused functionality for environment management\n */\n\n// Import environment management utilities using ES module syntax\nimport { testEnv } from '../utils/testEnv.js';\nimport { \n  setOfflineMode,\n  isOfflineMode,\n  getAxios,\n  getQerrors,\n  getEnvironmentState,\n  createEnvironmentAdapters,\n  clearOfflineCache\n} from '../utils/offlineMode.js';\nimport { testHelpers } from '../utils/testHelpers.js';\n\n// Create offlineMode object from individual functions\nconst offlineMode = {\n  setOfflineMode,\n  isOfflineMode,\n  getAxios,\n  getQerrors,\n  getEnvironmentState,\n  createEnvironmentAdapters,\n  clearOfflineCache\n};\n\n// Export the core utilities that our TypeScript index needs\nexport {\n  testEnv,     // environment variable management and test isolation\n  offlineMode, // offline/online mode utility with automatic switching\n  testHelpers  // advanced testing utilities for module reloading and mocking\n};"],"version":3}