{"version":3,"names":["mockConsole","require","withMockConsole","method","fn","spy","console","log","result","err","message","mockRestore","module","exports"],"sources":["consoleMocker.js"],"sourcesContent":["/**\n * Console Mocking Utility\n * \n * This module provides utilities for mocking console methods during testing.\n * It focuses solely on console interaction management.\n */\n\nconst { mockConsole } = require('../mockConsole');\n\n/**\n * Execute a callback with a mocked console method\n *\n * This helper creates a console spy using mockConsole, runs the callback,\n * then restores the original console method. It simplifies tests that need\n * temporary console interception.\n *\n * @param {string} method - Console method name to spy on\n * @param {Function} fn - Callback to execute with the spy\n * @returns {Promise<*>} Result returned by the callback\n */\nasync function withMockConsole(method, fn) {\n  const spy = mockConsole(method);\n  console.log(`withMockConsole is running with ${method}`);\n  try {\n    const result = await fn(spy);\n    console.log(`withMockConsole is returning ${result}`);\n    return result;\n  } catch (err) {\n    console.log(`withMockConsole error ${err.message}`);\n    throw err;\n  } finally {\n    if (spy.mockRestore) { spy.mockRestore(); }\n  }\n}\n\nmodule.exports = {\n  withMockConsole\n};"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAM;EAAEA;AAAY,CAAC,GAAGC,OAAO,CAAC,gBAAgB,CAAC;;AAEjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAeC,eAAeA,CAACC,MAAM,EAAEC,EAAE,EAAE;EACzC,MAAMC,GAAG,GAAGL,WAAW,CAACG,MAAM,CAAC;EAC/BG,OAAO,CAACC,GAAG,CAAC,mCAAmCJ,MAAM,EAAE,CAAC;EACxD,IAAI;IACF,MAAMK,MAAM,GAAG,MAAMJ,EAAE,CAACC,GAAG,CAAC;IAC5BC,OAAO,CAACC,GAAG,CAAC,gCAAgCC,MAAM,EAAE,CAAC;IACrD,OAAOA,MAAM;EACf,CAAC,CAAC,OAAOC,GAAG,EAAE;IACZH,OAAO,CAACC,GAAG,CAAC,yBAAyBE,GAAG,CAACC,OAAO,EAAE,CAAC;IACnD,MAAMD,GAAG;EACX,CAAC,SAAS;IACR,IAAIJ,GAAG,CAACM,WAAW,EAAE;MAAEN,GAAG,CAACM,WAAW,CAAC,CAAC;IAAE;EAC5C;AACF;AAEAC,MAAM,CAACC,OAAO,GAAG;EACfX;AACF,CAAC","ignoreList":[]}