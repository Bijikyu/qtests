280778e65f33bdecfecccd21f3f4c7e2
/**
 * Advanced Testing Helper Utilities - TypeScript Implementation (Refactored)
 *
 * This module has been refactored to follow Single Responsibility Principle.
 * It now coordinates between focused helper utilities for better maintainability.
 *
 * Components:
 * - helpers/moduleReloader.ts - Module cache management and reloading
 * - helpers/qerrorsStub.ts - QErrors stubbing functionality
 * - helpers/consoleMocker.ts - Console mocking utilities
 * - helpers/responseMocker.ts - Response object mocking for API testing
 */
// Import focused helper utilities
import { reload, moduleReloadLock } from './helpers/moduleReloader.js';
import { stubQerrors } from './helpers/qerrorsStub.js';
import { withMockConsole } from './helpers/consoleMocker.js';
import { createJsonRes, createRes } from './helpers/responseMocker.js';
import { backupEnvVars, restoreEnvVars, withSavedEnv } from './helpers/envManager.js';
import { generateKey } from './helpers/keyGenerator.js';
// Export all helper utilities following qtests framework patterns using ES module syntax
export { reload, moduleReloadLock, stubQerrors, withMockConsole, createJsonRes, createRes, backupEnvVars, restoreEnvVars, withSavedEnv, generateKey };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiL2hvbWUvcnVubmVyL3dvcmtzcGFjZS91dGlscy90ZXN0SGVscGVycy50cyIsIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7R0FXRztBQUVILGtDQUFrQztBQUNsQyxPQUFPLEVBQUUsTUFBTSxFQUFFLGdCQUFnQixFQUFFLE1BQU0sNkJBQTZCLENBQUM7QUFDdkUsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLDBCQUEwQixDQUFDO0FBQ3ZELE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSw0QkFBNEIsQ0FBQztBQUM3RCxPQUFPLEVBQUUsYUFBYSxFQUFFLFNBQVMsRUFBRSxNQUFNLDZCQUE2QixDQUFDO0FBQ3ZFLE9BQU8sRUFBRSxhQUFhLEVBQUUsY0FBYyxFQUFFLFlBQVksRUFBRSxNQUFNLHlCQUF5QixDQUFDO0FBQ3RGLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSwyQkFBMkIsQ0FBQztBQUV4RCx5RkFBeUY7QUFDekYsT0FBTyxFQUNMLE1BQU0sRUFDTixnQkFBZ0IsRUFDaEIsV0FBVyxFQUNYLGVBQWUsRUFDZixhQUFhLEVBQ2IsU0FBUyxFQUNULGFBQWEsRUFDYixjQUFjLEVBQ2QsWUFBWSxFQUNaLFdBQVcsRUFDWixDQUFDIiwibmFtZXMiOltdLCJzb3VyY2VzIjpbIi9ob21lL3J1bm5lci93b3Jrc3BhY2UvdXRpbHMvdGVzdEhlbHBlcnMudHMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBBZHZhbmNlZCBUZXN0aW5nIEhlbHBlciBVdGlsaXRpZXMgLSBUeXBlU2NyaXB0IEltcGxlbWVudGF0aW9uIChSZWZhY3RvcmVkKVxuICogXG4gKiBUaGlzIG1vZHVsZSBoYXMgYmVlbiByZWZhY3RvcmVkIHRvIGZvbGxvdyBTaW5nbGUgUmVzcG9uc2liaWxpdHkgUHJpbmNpcGxlLlxuICogSXQgbm93IGNvb3JkaW5hdGVzIGJldHdlZW4gZm9jdXNlZCBoZWxwZXIgdXRpbGl0aWVzIGZvciBiZXR0ZXIgbWFpbnRhaW5hYmlsaXR5LlxuICogXG4gKiBDb21wb25lbnRzOlxuICogLSBoZWxwZXJzL21vZHVsZVJlbG9hZGVyLnRzIC0gTW9kdWxlIGNhY2hlIG1hbmFnZW1lbnQgYW5kIHJlbG9hZGluZ1xuICogLSBoZWxwZXJzL3FlcnJvcnNTdHViLnRzIC0gUUVycm9ycyBzdHViYmluZyBmdW5jdGlvbmFsaXR5XG4gKiAtIGhlbHBlcnMvY29uc29sZU1vY2tlci50cyAtIENvbnNvbGUgbW9ja2luZyB1dGlsaXRpZXNcbiAqIC0gaGVscGVycy9yZXNwb25zZU1vY2tlci50cyAtIFJlc3BvbnNlIG9iamVjdCBtb2NraW5nIGZvciBBUEkgdGVzdGluZ1xuICovXG5cbi8vIEltcG9ydCBmb2N1c2VkIGhlbHBlciB1dGlsaXRpZXNcbmltcG9ydCB7IHJlbG9hZCwgbW9kdWxlUmVsb2FkTG9jayB9IGZyb20gJy4vaGVscGVycy9tb2R1bGVSZWxvYWRlci5qcyc7XG5pbXBvcnQgeyBzdHViUWVycm9ycyB9IGZyb20gJy4vaGVscGVycy9xZXJyb3JzU3R1Yi5qcyc7XG5pbXBvcnQgeyB3aXRoTW9ja0NvbnNvbGUgfSBmcm9tICcuL2hlbHBlcnMvY29uc29sZU1vY2tlci5qcyc7XG5pbXBvcnQgeyBjcmVhdGVKc29uUmVzLCBjcmVhdGVSZXMgfSBmcm9tICcuL2hlbHBlcnMvcmVzcG9uc2VNb2NrZXIuanMnO1xuaW1wb3J0IHsgYmFja3VwRW52VmFycywgcmVzdG9yZUVudlZhcnMsIHdpdGhTYXZlZEVudiB9IGZyb20gJy4vaGVscGVycy9lbnZNYW5hZ2VyLmpzJztcbmltcG9ydCB7IGdlbmVyYXRlS2V5IH0gZnJvbSAnLi9oZWxwZXJzL2tleUdlbmVyYXRvci5qcyc7XG5cbi8vIEV4cG9ydCBhbGwgaGVscGVyIHV0aWxpdGllcyBmb2xsb3dpbmcgcXRlc3RzIGZyYW1ld29yayBwYXR0ZXJucyB1c2luZyBFUyBtb2R1bGUgc3ludGF4XG5leHBvcnQge1xuICByZWxvYWQsXG4gIG1vZHVsZVJlbG9hZExvY2ssXG4gIHN0dWJRZXJyb3JzLFxuICB3aXRoTW9ja0NvbnNvbGUsXG4gIGNyZWF0ZUpzb25SZXMsXG4gIGNyZWF0ZVJlcyxcbiAgYmFja3VwRW52VmFycyxcbiAgcmVzdG9yZUVudlZhcnMsXG4gIHdpdGhTYXZlZEVudixcbiAgZ2VuZXJhdGVLZXlcbn07Il0sInZlcnNpb24iOjN9