4528765e5eebb2f6d636c12d4ace64fd
/**
 * Essential Edge Case Tests for qtests Framework
 */

const {
  backupEnvVars,
  restoreEnvVars
} = require('../utils/testHelpers');
const {
  mockConsole
} = require('../utils/mockConsole');
const offlineMode = require('../utils/offlineMode');
describe('Essential Edge Cases', () => {
  test('console method restoration works correctly', () => {
    const originalLog = console.log;
    const spy = mockConsole('log');
    expect(typeof console.log).toBe('function');
    spy.mockRestore();
    expect(console.log).toBe(originalLog);
  });
  test('environment backup and restore handles edge cases', () => {
    const backup = backupEnvVars();
    process.env.TEST_EDGE = 'test value';
    restoreEnvVars(backup);
    expect(process.env.TEST_EDGE).toBeUndefined();
  });
  test('offline mode state changes work correctly', () => {
    // Test basic offline mode functionality
    expect(typeof offlineMode.setOfflineMode).toBe('function');
    expect(typeof offlineMode.getAxios).toBe('function');
    expect(typeof offlineMode.getQerrors).toBe('function');

    // Test state changes don't throw errors
    offlineMode.setOfflineMode(true);
    offlineMode.setOfflineMode(false);
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJiYWNrdXBFbnZWYXJzIiwicmVzdG9yZUVudlZhcnMiLCJyZXF1aXJlIiwibW9ja0NvbnNvbGUiLCJvZmZsaW5lTW9kZSIsImRlc2NyaWJlIiwidGVzdCIsIm9yaWdpbmFsTG9nIiwiY29uc29sZSIsImxvZyIsInNweSIsImV4cGVjdCIsInRvQmUiLCJtb2NrUmVzdG9yZSIsImJhY2t1cCIsInByb2Nlc3MiLCJlbnYiLCJURVNUX0VER0UiLCJ0b0JlVW5kZWZpbmVkIiwic2V0T2ZmbGluZU1vZGUiLCJnZXRBeGlvcyIsImdldFFlcnJvcnMiXSwic291cmNlcyI6WyJlZGdlQ2FzZXMudGVzdC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEVzc2VudGlhbCBFZGdlIENhc2UgVGVzdHMgZm9yIHF0ZXN0cyBGcmFtZXdvcmtcbiAqL1xuXG5jb25zdCB7IGJhY2t1cEVudlZhcnMsIHJlc3RvcmVFbnZWYXJzIH0gPSByZXF1aXJlKCcuLi91dGlscy90ZXN0SGVscGVycycpO1xuY29uc3QgeyBtb2NrQ29uc29sZSB9ID0gcmVxdWlyZSgnLi4vdXRpbHMvbW9ja0NvbnNvbGUnKTtcbmNvbnN0IG9mZmxpbmVNb2RlID0gcmVxdWlyZSgnLi4vdXRpbHMvb2ZmbGluZU1vZGUnKTtcblxuZGVzY3JpYmUoJ0Vzc2VudGlhbCBFZGdlIENhc2VzJywgKCkgPT4ge1xuICB0ZXN0KCdjb25zb2xlIG1ldGhvZCByZXN0b3JhdGlvbiB3b3JrcyBjb3JyZWN0bHknLCAoKSA9PiB7XG4gICAgY29uc3Qgb3JpZ2luYWxMb2cgPSBjb25zb2xlLmxvZztcbiAgICBjb25zdCBzcHkgPSBtb2NrQ29uc29sZSgnbG9nJyk7XG4gICAgXG4gICAgZXhwZWN0KHR5cGVvZiBjb25zb2xlLmxvZykudG9CZSgnZnVuY3Rpb24nKTtcbiAgICBzcHkubW9ja1Jlc3RvcmUoKTtcbiAgICBleHBlY3QoY29uc29sZS5sb2cpLnRvQmUob3JpZ2luYWxMb2cpO1xuICB9KTtcblxuICB0ZXN0KCdlbnZpcm9ubWVudCBiYWNrdXAgYW5kIHJlc3RvcmUgaGFuZGxlcyBlZGdlIGNhc2VzJywgKCkgPT4ge1xuICAgIGNvbnN0IGJhY2t1cCA9IGJhY2t1cEVudlZhcnMoKTtcbiAgICBcbiAgICBwcm9jZXNzLmVudi5URVNUX0VER0UgPSAndGVzdCB2YWx1ZSc7XG4gICAgcmVzdG9yZUVudlZhcnMoYmFja3VwKTtcbiAgICBcbiAgICBleHBlY3QocHJvY2Vzcy5lbnYuVEVTVF9FREdFKS50b0JlVW5kZWZpbmVkKCk7XG4gIH0pO1xuXG4gIHRlc3QoJ29mZmxpbmUgbW9kZSBzdGF0ZSBjaGFuZ2VzIHdvcmsgY29ycmVjdGx5JywgKCkgPT4ge1xuICAgIC8vIFRlc3QgYmFzaWMgb2ZmbGluZSBtb2RlIGZ1bmN0aW9uYWxpdHlcbiAgICBleHBlY3QodHlwZW9mIG9mZmxpbmVNb2RlLnNldE9mZmxpbmVNb2RlKS50b0JlKCdmdW5jdGlvbicpO1xuICAgIGV4cGVjdCh0eXBlb2Ygb2ZmbGluZU1vZGUuZ2V0QXhpb3MpLnRvQmUoJ2Z1bmN0aW9uJyk7XG4gICAgZXhwZWN0KHR5cGVvZiBvZmZsaW5lTW9kZS5nZXRRZXJyb3JzKS50b0JlKCdmdW5jdGlvbicpO1xuICAgIFxuICAgIC8vIFRlc3Qgc3RhdGUgY2hhbmdlcyBkb24ndCB0aHJvdyBlcnJvcnNcbiAgICBvZmZsaW5lTW9kZS5zZXRPZmZsaW5lTW9kZSh0cnVlKTtcbiAgICBvZmZsaW5lTW9kZS5zZXRPZmZsaW5lTW9kZShmYWxzZSk7XG4gIH0pO1xufSk7Il0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7O0FBRUEsTUFBTTtFQUFFQSxhQUFhO0VBQUVDO0FBQWUsQ0FBQyxHQUFHQyxPQUFPLENBQUMsc0JBQXNCLENBQUM7QUFDekUsTUFBTTtFQUFFQztBQUFZLENBQUMsR0FBR0QsT0FBTyxDQUFDLHNCQUFzQixDQUFDO0FBQ3ZELE1BQU1FLFdBQVcsR0FBR0YsT0FBTyxDQUFDLHNCQUFzQixDQUFDO0FBRW5ERyxRQUFRLENBQUMsc0JBQXNCLEVBQUUsTUFBTTtFQUNyQ0MsSUFBSSxDQUFDLDRDQUE0QyxFQUFFLE1BQU07SUFDdkQsTUFBTUMsV0FBVyxHQUFHQyxPQUFPLENBQUNDLEdBQUc7SUFDL0IsTUFBTUMsR0FBRyxHQUFHUCxXQUFXLENBQUMsS0FBSyxDQUFDO0lBRTlCUSxNQUFNLENBQUMsT0FBT0gsT0FBTyxDQUFDQyxHQUFHLENBQUMsQ0FBQ0csSUFBSSxDQUFDLFVBQVUsQ0FBQztJQUMzQ0YsR0FBRyxDQUFDRyxXQUFXLENBQUMsQ0FBQztJQUNqQkYsTUFBTSxDQUFDSCxPQUFPLENBQUNDLEdBQUcsQ0FBQyxDQUFDRyxJQUFJLENBQUNMLFdBQVcsQ0FBQztFQUN2QyxDQUFDLENBQUM7RUFFRkQsSUFBSSxDQUFDLG1EQUFtRCxFQUFFLE1BQU07SUFDOUQsTUFBTVEsTUFBTSxHQUFHZCxhQUFhLENBQUMsQ0FBQztJQUU5QmUsT0FBTyxDQUFDQyxHQUFHLENBQUNDLFNBQVMsR0FBRyxZQUFZO0lBQ3BDaEIsY0FBYyxDQUFDYSxNQUFNLENBQUM7SUFFdEJILE1BQU0sQ0FBQ0ksT0FBTyxDQUFDQyxHQUFHLENBQUNDLFNBQVMsQ0FBQyxDQUFDQyxhQUFhLENBQUMsQ0FBQztFQUMvQyxDQUFDLENBQUM7RUFFRlosSUFBSSxDQUFDLDJDQUEyQyxFQUFFLE1BQU07SUFDdEQ7SUFDQUssTUFBTSxDQUFDLE9BQU9QLFdBQVcsQ0FBQ2UsY0FBYyxDQUFDLENBQUNQLElBQUksQ0FBQyxVQUFVLENBQUM7SUFDMURELE1BQU0sQ0FBQyxPQUFPUCxXQUFXLENBQUNnQixRQUFRLENBQUMsQ0FBQ1IsSUFBSSxDQUFDLFVBQVUsQ0FBQztJQUNwREQsTUFBTSxDQUFDLE9BQU9QLFdBQVcsQ0FBQ2lCLFVBQVUsQ0FBQyxDQUFDVCxJQUFJLENBQUMsVUFBVSxDQUFDOztJQUV0RDtJQUNBUixXQUFXLENBQUNlLGNBQWMsQ0FBQyxJQUFJLENBQUM7SUFDaENmLFdBQVcsQ0FBQ2UsY0FBYyxDQUFDLEtBQUssQ0FBQztFQUNuQyxDQUFDLENBQUM7QUFDSixDQUFDLENBQUMiLCJpZ25vcmVMaXN0IjpbXX0=