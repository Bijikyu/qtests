c9d8e58c3df7d588e03e0c77ff76cacd
// Auto-generated API test for GET /api/status
const {
  httpTest
} = require('qtests/lib/envUtils');
describe('GET /api/status', () => {
  test('should succeed', async () => {
    // Create mock app for testing
    const app = httpTest.createMockApp();
    app.get('/api/status', (req, res) => {
      res.statusCode = 200;
      res.setHeader('content-type', 'application/json');
      res.end(JSON.stringify({
        success: true
      }));
    });
    const res = await httpTest.supertest(app).get('/api/status').expect(200).end();
    expect(res.body.success).toBe(true);
  });
  test('should handle error responses', async () => {
    const app = httpTest.createMockApp();
    app.get('/api/status', (req, res) => {
      res.statusCode = 400;
      res.setHeader('content-type', 'application/json');
      res.end(JSON.stringify({
        error: 'Bad request'
      }));
    });
    const res = await httpTest.supertest(app).get('/api/status').expect(400).end();
    expect(res.body.error).toBe('Bad request');
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJodHRwVGVzdCIsInJlcXVpcmUiLCJkZXNjcmliZSIsInRlc3QiLCJhcHAiLCJjcmVhdGVNb2NrQXBwIiwiZ2V0IiwicmVxIiwicmVzIiwic3RhdHVzQ29kZSIsInNldEhlYWRlciIsImVuZCIsIkpTT04iLCJzdHJpbmdpZnkiLCJzdWNjZXNzIiwic3VwZXJ0ZXN0IiwiZXhwZWN0IiwiYm9keSIsInRvQmUiLCJlcnJvciJdLCJzb3VyY2VzIjpbImV4YW1wbGUudGVzdC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBBdXRvLWdlbmVyYXRlZCBBUEkgdGVzdCBmb3IgR0VUIC9hcGkvc3RhdHVzXG5jb25zdCB7IGh0dHBUZXN0IH0gPSByZXF1aXJlKCdxdGVzdHMvbGliL2VudlV0aWxzJyk7XG5cbmRlc2NyaWJlKCdHRVQgL2FwaS9zdGF0dXMnLCAoKSA9PiB7XG4gIHRlc3QoJ3Nob3VsZCBzdWNjZWVkJywgYXN5bmMgKCkgPT4ge1xuICAgIC8vIENyZWF0ZSBtb2NrIGFwcCBmb3IgdGVzdGluZ1xuICAgIGNvbnN0IGFwcCA9IGh0dHBUZXN0LmNyZWF0ZU1vY2tBcHAoKTtcbiAgICBhcHAuZ2V0KCcvYXBpL3N0YXR1cycsIChyZXEsIHJlcykgPT4ge1xuICAgICAgcmVzLnN0YXR1c0NvZGUgPSAyMDA7XG4gICAgICByZXMuc2V0SGVhZGVyKCdjb250ZW50LXR5cGUnLCAnYXBwbGljYXRpb24vanNvbicpO1xuICAgICAgcmVzLmVuZChKU09OLnN0cmluZ2lmeSh7IHN1Y2Nlc3M6IHRydWUgfSkpO1xuICAgIH0pO1xuICAgIFxuICAgIGNvbnN0IHJlcyA9IGF3YWl0IGh0dHBUZXN0LnN1cGVydGVzdChhcHApXG4gICAgICAuZ2V0KCcvYXBpL3N0YXR1cycpXG4gICAgICAuZXhwZWN0KDIwMClcbiAgICAgIC5lbmQoKTtcbiAgICBcbiAgICBleHBlY3QocmVzLmJvZHkuc3VjY2VzcykudG9CZSh0cnVlKTtcbiAgfSk7XG5cbiAgdGVzdCgnc2hvdWxkIGhhbmRsZSBlcnJvciByZXNwb25zZXMnLCBhc3luYyAoKSA9PiB7XG4gICAgY29uc3QgYXBwID0gaHR0cFRlc3QuY3JlYXRlTW9ja0FwcCgpO1xuICAgIGFwcC5nZXQoJy9hcGkvc3RhdHVzJywgKHJlcSwgcmVzKSA9PiB7XG4gICAgICByZXMuc3RhdHVzQ29kZSA9IDQwMDtcbiAgICAgIHJlcy5zZXRIZWFkZXIoJ2NvbnRlbnQtdHlwZScsICdhcHBsaWNhdGlvbi9qc29uJyk7XG4gICAgICByZXMuZW5kKEpTT04uc3RyaW5naWZ5KHsgZXJyb3I6ICdCYWQgcmVxdWVzdCcgfSkpO1xuICAgIH0pO1xuICAgIFxuICAgIGNvbnN0IHJlcyA9IGF3YWl0IGh0dHBUZXN0LnN1cGVydGVzdChhcHApXG4gICAgICAuZ2V0KCcvYXBpL3N0YXR1cycpXG4gICAgICAuZXhwZWN0KDQwMClcbiAgICAgIC5lbmQoKTtcbiAgICBcbiAgICBleHBlY3QocmVzLmJvZHkuZXJyb3IpLnRvQmUoJ0JhZCByZXF1ZXN0Jyk7XG4gIH0pO1xufSk7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0EsTUFBTTtFQUFFQTtBQUFTLENBQUMsR0FBR0MsT0FBTyxDQUFDLHFCQUFxQixDQUFDO0FBRW5EQyxRQUFRLENBQUMsaUJBQWlCLEVBQUUsTUFBTTtFQUNoQ0MsSUFBSSxDQUFDLGdCQUFnQixFQUFFLFlBQVk7SUFDakM7SUFDQSxNQUFNQyxHQUFHLEdBQUdKLFFBQVEsQ0FBQ0ssYUFBYSxDQUFDLENBQUM7SUFDcENELEdBQUcsQ0FBQ0UsR0FBRyxDQUFDLGFBQWEsRUFBRSxDQUFDQyxHQUFHLEVBQUVDLEdBQUcsS0FBSztNQUNuQ0EsR0FBRyxDQUFDQyxVQUFVLEdBQUcsR0FBRztNQUNwQkQsR0FBRyxDQUFDRSxTQUFTLENBQUMsY0FBYyxFQUFFLGtCQUFrQixDQUFDO01BQ2pERixHQUFHLENBQUNHLEdBQUcsQ0FBQ0MsSUFBSSxDQUFDQyxTQUFTLENBQUM7UUFBRUMsT0FBTyxFQUFFO01BQUssQ0FBQyxDQUFDLENBQUM7SUFDNUMsQ0FBQyxDQUFDO0lBRUYsTUFBTU4sR0FBRyxHQUFHLE1BQU1SLFFBQVEsQ0FBQ2UsU0FBUyxDQUFDWCxHQUFHLENBQUMsQ0FDdENFLEdBQUcsQ0FBQyxhQUFhLENBQUMsQ0FDbEJVLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FDWEwsR0FBRyxDQUFDLENBQUM7SUFFUkssTUFBTSxDQUFDUixHQUFHLENBQUNTLElBQUksQ0FBQ0gsT0FBTyxDQUFDLENBQUNJLElBQUksQ0FBQyxJQUFJLENBQUM7RUFDckMsQ0FBQyxDQUFDO0VBRUZmLElBQUksQ0FBQywrQkFBK0IsRUFBRSxZQUFZO0lBQ2hELE1BQU1DLEdBQUcsR0FBR0osUUFBUSxDQUFDSyxhQUFhLENBQUMsQ0FBQztJQUNwQ0QsR0FBRyxDQUFDRSxHQUFHLENBQUMsYUFBYSxFQUFFLENBQUNDLEdBQUcsRUFBRUMsR0FBRyxLQUFLO01BQ25DQSxHQUFHLENBQUNDLFVBQVUsR0FBRyxHQUFHO01BQ3BCRCxHQUFHLENBQUNFLFNBQVMsQ0FBQyxjQUFjLEVBQUUsa0JBQWtCLENBQUM7TUFDakRGLEdBQUcsQ0FBQ0csR0FBRyxDQUFDQyxJQUFJLENBQUNDLFNBQVMsQ0FBQztRQUFFTSxLQUFLLEVBQUU7TUFBYyxDQUFDLENBQUMsQ0FBQztJQUNuRCxDQUFDLENBQUM7SUFFRixNQUFNWCxHQUFHLEdBQUcsTUFBTVIsUUFBUSxDQUFDZSxTQUFTLENBQUNYLEdBQUcsQ0FBQyxDQUN0Q0UsR0FBRyxDQUFDLGFBQWEsQ0FBQyxDQUNsQlUsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUNYTCxHQUFHLENBQUMsQ0FBQztJQUVSSyxNQUFNLENBQUNSLEdBQUcsQ0FBQ1MsSUFBSSxDQUFDRSxLQUFLLENBQUMsQ0FBQ0QsSUFBSSxDQUFDLGFBQWEsQ0FBQztFQUM1QyxDQUFDLENBQUM7QUFDSixDQUFDLENBQUMiLCJpZ25vcmVMaXN0IjpbXX0=