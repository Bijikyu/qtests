{"version":3,"names":["DatabaseTestHelper","require","MockManager","AssertionHelper","TestDataFactory","PerformanceTestHelper","TestSuiteBuilder","constructor","config","apiMocks","emailMocks","consoleMocks","performance","autoCleanup","withApiMocks","withEmailMocks","withConsoleMocks","withPerformance","withoutAutoCleanup","build","mockManager","setupApiClientMocks","sendEmail","mocks","set","error","setupConsoleMocks","db","assertions","data","module","exports"],"sources":["testSuite.js"],"sourcesContent":["/**\n * Comprehensive Testing Suite Utilities (Refactored)\n * \n * This module has been refactored to follow Single Responsibility Principle.\n * It now coordinates between focused testing utilities for better maintainability.\n * \n * Components:\n * - testing/databaseTestHelper.js - Database testing utilities\n * - testing/mockManager.js - Mock management system\n * - testing/assertionHelper.js - Assertion helpers\n * - testing/testDataFactory.js - Test data creation\n * - testing/performanceTestHelper.js - Performance testing\n */\n\n// Import focused testing utilities\nconst { DatabaseTestHelper } = require('./testing/databaseTestHelper');\nconst { MockManager } = require('./testing/mockManager');\nconst { AssertionHelper } = require('./testing/assertionHelper');\nconst { TestDataFactory } = require('./testing/testDataFactory');\nconst { PerformanceTestHelper } = require('./testing/performanceTestHelper');\n\n/**\n * TestSuiteBuilder - Fluent API for building comprehensive test suites\n * \n * Provides a builder pattern for configuring test utilities with method chaining\n */\nclass TestSuiteBuilder {\n  constructor() {\n    this.config = {\n      apiMocks: false,\n      emailMocks: false,\n      consoleMocks: false,\n      performance: false,\n      autoCleanup: true\n    };\n  }\n  \n  withApiMocks() {\n    this.config.apiMocks = true;\n    return this;\n  }\n  \n  withEmailMocks() {\n    this.config.emailMocks = true;\n    return this;\n  }\n  \n  withConsoleMocks() {\n    this.config.consoleMocks = true;\n    return this;\n  }\n  \n  withPerformance() {\n    this.config.performance = true;\n    return this;\n  }\n  \n  withoutAutoCleanup() {\n    this.config.autoCleanup = false;\n    return this;\n  }\n  \n  build() {\n    const mockManager = new MockManager();\n    \n    // Set up mocks based on configuration\n    if (this.config.apiMocks) {\n      mockManager.setupApiClientMocks();\n    }\n    if (this.config.emailMocks) {\n      // Set up email mocks if needed\n      try {\n        const { sendEmail } = require('./email/emailSender');\n        mockManager.mocks.set('email', { sendEmail });\n      } catch (error) {\n        // Email mocks not available, skip\n      }\n    }\n    if (this.config.consoleMocks) {\n      mockManager.setupConsoleMocks();\n    }\n    \n    return {\n      mocks: mockManager,\n      db: new DatabaseTestHelper(), \n      assertions: new AssertionHelper(),\n      data: new TestDataFactory(),\n      performance: this.config.performance ? new PerformanceTestHelper() : null,\n      config: { ...this.config }\n    };\n  }\n}\n\n// Export all testing utilities following qtests framework patterns\nmodule.exports = {\n  DatabaseTestHelper,\n  MockManager,\n  AssertionHelper,\n  TestDataFactory,\n  PerformanceTestHelper,\n  TestSuiteBuilder\n};"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAM;EAAEA;AAAmB,CAAC,GAAGC,OAAO,CAAC,8BAA8B,CAAC;AACtE,MAAM;EAAEC;AAAY,CAAC,GAAGD,OAAO,CAAC,uBAAuB,CAAC;AACxD,MAAM;EAAEE;AAAgB,CAAC,GAAGF,OAAO,CAAC,2BAA2B,CAAC;AAChE,MAAM;EAAEG;AAAgB,CAAC,GAAGH,OAAO,CAAC,2BAA2B,CAAC;AAChE,MAAM;EAAEI;AAAsB,CAAC,GAAGJ,OAAO,CAAC,iCAAiC,CAAC;;AAE5E;AACA;AACA;AACA;AACA;AACA,MAAMK,gBAAgB,CAAC;EACrBC,WAAWA,CAAA,EAAG;IACZ,IAAI,CAACC,MAAM,GAAG;MACZC,QAAQ,EAAE,KAAK;MACfC,UAAU,EAAE,KAAK;MACjBC,YAAY,EAAE,KAAK;MACnBC,WAAW,EAAE,KAAK;MAClBC,WAAW,EAAE;IACf,CAAC;EACH;EAEAC,YAAYA,CAAA,EAAG;IACb,IAAI,CAACN,MAAM,CAACC,QAAQ,GAAG,IAAI;IAC3B,OAAO,IAAI;EACb;EAEAM,cAAcA,CAAA,EAAG;IACf,IAAI,CAACP,MAAM,CAACE,UAAU,GAAG,IAAI;IAC7B,OAAO,IAAI;EACb;EAEAM,gBAAgBA,CAAA,EAAG;IACjB,IAAI,CAACR,MAAM,CAACG,YAAY,GAAG,IAAI;IAC/B,OAAO,IAAI;EACb;EAEAM,eAAeA,CAAA,EAAG;IAChB,IAAI,CAACT,MAAM,CAACI,WAAW,GAAG,IAAI;IAC9B,OAAO,IAAI;EACb;EAEAM,kBAAkBA,CAAA,EAAG;IACnB,IAAI,CAACV,MAAM,CAACK,WAAW,GAAG,KAAK;IAC/B,OAAO,IAAI;EACb;EAEAM,KAAKA,CAAA,EAAG;IACN,MAAMC,WAAW,GAAG,IAAIlB,WAAW,CAAC,CAAC;;IAErC;IACA,IAAI,IAAI,CAACM,MAAM,CAACC,QAAQ,EAAE;MACxBW,WAAW,CAACC,mBAAmB,CAAC,CAAC;IACnC;IACA,IAAI,IAAI,CAACb,MAAM,CAACE,UAAU,EAAE;MAC1B;MACA,IAAI;QACF,MAAM;UAAEY;QAAU,CAAC,GAAGrB,OAAO,CAAC,qBAAqB,CAAC;QACpDmB,WAAW,CAACG,KAAK,CAACC,GAAG,CAAC,OAAO,EAAE;UAAEF;QAAU,CAAC,CAAC;MAC/C,CAAC,CAAC,OAAOG,KAAK,EAAE;QACd;MAAA;IAEJ;IACA,IAAI,IAAI,CAACjB,MAAM,CAACG,YAAY,EAAE;MAC5BS,WAAW,CAACM,iBAAiB,CAAC,CAAC;IACjC;IAEA,OAAO;MACLH,KAAK,EAAEH,WAAW;MAClBO,EAAE,EAAE,IAAI3B,kBAAkB,CAAC,CAAC;MAC5B4B,UAAU,EAAE,IAAIzB,eAAe,CAAC,CAAC;MACjC0B,IAAI,EAAE,IAAIzB,eAAe,CAAC,CAAC;MAC3BQ,WAAW,EAAE,IAAI,CAACJ,MAAM,CAACI,WAAW,GAAG,IAAIP,qBAAqB,CAAC,CAAC,GAAG,IAAI;MACzEG,MAAM,EAAE;QAAE,GAAG,IAAI,CAACA;MAAO;IAC3B,CAAC;EACH;AACF;;AAEA;AACAsB,MAAM,CAACC,OAAO,GAAG;EACf/B,kBAAkB;EAClBE,WAAW;EACXC,eAAe;EACfC,eAAe;EACfC,qBAAqB;EACrBC;AACF,CAAC","ignoreList":[]}