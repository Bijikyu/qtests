{"version":3,"names":["mockResponse","status","statusText","data","headers","config","module","exports","get","post","put","delete","patch","head","options","request"],"sources":["axios.js"],"sourcesContent":["\n/**\n * Axios HTTP Client Stub for Testing\n * \n * This module provides a minimal, side-effect-free replacement for the axios\n * HTTP client library. When tests require('axios') after qtests/setup, they\n * get this stub instead of the real axios, preventing actual network requests.\n * \n * Design philosophy:\n * - Minimal interface: only implements commonly used methods\n * - Predictable behavior: always returns empty objects\n * - No side effects: no network requests, no state changes\n * - Fast execution: immediate promise resolution\n * \n * Why stub axios specifically:\n * - Extremely common in Node.js applications\n * - Network requests slow down tests significantly\n * - Real HTTP calls can fail due to network issues\n * - Tests should be isolated from external dependencies\n * \n * Implementation approach:\n * - Async functions that resolve immediately\n * - Return empty objects (truthy but minimal)\n * - Can be extended if tests need more specific behavior\n * - Compatible with basic axios usage patterns\n */\n\n/**\n * Axios stub module exports\n * \n * Currently implements the GET and POST methods as these are the most commonly\n * stubbed in testing scenarios. Additional verbs can easily be added if needed.\n * Method selection rationale:\n * - POST is most common for API interactions\n * - Often the method that needs stubbing in integration tests\n * - Easy to add other methods following the same pattern\n * \n * Return value approach:\n * - Empty object {} is truthy (passes if (result) checks)\n * - Minimal memory footprint\n * - No properties that might interfere with test assertions\n * - Can be extended to return more realistic response shapes\n */\n// Enhanced axios stub with all HTTP methods and response structure\nconst mockResponse = {\n  status: 200,\n  statusText: 'OK',\n  data: {},\n  headers: {},\n  config: {}\n};\n\nmodule.exports = {\n  get: async () => mockResponse, // mock get method returns mock response\n  post: async () => mockResponse, // mock post method returns mock response\n  put: async () => mockResponse, // mock put method returns mock response\n  delete: async () => mockResponse, // mock delete method returns mock response  \n  patch: async () => mockResponse, // mock patch method returns mock response\n  head: async () => mockResponse, // mock head method returns mock response\n  options: async () => mockResponse, // mock options method returns mock response\n  request: async () => mockResponse // mock generic request method returns mock response\n};\n\n/**\n * Usage in tests:\n * \n * After requiring 'qtests/setup', any code that does:\n *   const axios = require('axios');\n *   const data = await axios.get(`https://api.example.com`);\n *   await axios.post('https://api.example.com', data);\n * \n * Will actually call this stub instead, which:\n * - Returns immediately without network I/O\n * - Resolves to {} for predictable test behavior\n * - Doesn't log or store any request data\n * \n * This allows testing of HTTP-dependent code without actual HTTP calls.\n */\n"],"mappings":"AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMA,YAAY,GAAG;EACnBC,MAAM,EAAE,GAAG;EACXC,UAAU,EAAE,IAAI;EAChBC,IAAI,EAAE,CAAC,CAAC;EACRC,OAAO,EAAE,CAAC,CAAC;EACXC,MAAM,EAAE,CAAC;AACX,CAAC;AAEDC,MAAM,CAACC,OAAO,GAAG;EACfC,GAAG,EAAE,MAAAA,CAAA,KAAYR,YAAY;EAAE;EAC/BS,IAAI,EAAE,MAAAA,CAAA,KAAYT,YAAY;EAAE;EAChCU,GAAG,EAAE,MAAAA,CAAA,KAAYV,YAAY;EAAE;EAC/BW,MAAM,EAAE,MAAAA,CAAA,KAAYX,YAAY;EAAE;EAClCY,KAAK,EAAE,MAAAA,CAAA,KAAYZ,YAAY;EAAE;EACjCa,IAAI,EAAE,MAAAA,CAAA,KAAYb,YAAY;EAAE;EAChCc,OAAO,EAAE,MAAAA,CAAA,KAAYd,YAAY;EAAE;EACnCe,OAAO,EAAE,MAAAA,CAAA,KAAYf,YAAY,CAAC;AACpC,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]}