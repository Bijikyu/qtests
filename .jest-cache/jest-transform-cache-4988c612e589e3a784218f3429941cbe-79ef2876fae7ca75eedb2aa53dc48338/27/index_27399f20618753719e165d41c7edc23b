60da1e97d14add103111bbd72850bbbd
"use strict";
/**
 * Mock API - Unified Interface for All Mocking Capabilities
 *
 * This module provides the main `mock` namespace with all mocking functionality
 * including function mocks, spies, timers, and module mocking.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.runOnlyPendingTimers = exports.runAllTimers = exports.advanceTimersByTime = exports.setSystemTime = exports.useRealTimers = exports.useFakeTimers = exports.spyOn = exports.fn = exports.mock = void 0;
const mockFunction_js_1 = require("./mockFunction.js");
const spyOn_js_1 = require("./spyOn.js");
const stubsRegistry_js_1 = require("./stubsRegistry.js");
const timers = __importStar(require("../timers/fakeTimers.js"));
/**
 * Main mock API object - provides Jest/Sinon-compatible interface
 */
exports.mock = {
    // Mock functions
    fn: mockFunction_js_1.fn,
    // Spies
    spyOn: spyOn_js_1.spyOn,
    restoreAllSpies: spyOn_js_1.restoreAllSpies,
    // Module mocking
    module: stubsRegistry_js_1.mockModule,
    unmock: stubsRegistry_js_1.unmockModule,
    isMocked: stubsRegistry_js_1.isMocked,
    getMockedModules: stubsRegistry_js_1.getMockedModules,
    getMockImplementation: stubsRegistry_js_1.getMockImplementation,
    // Timers
    timers: {
        useFakeTimers: timers.useFakeTimers,
        useRealTimers: timers.useRealTimers,
        setSystemTime: timers.setSystemTime,
        advanceTimersByTime: timers.advanceTimersByTime,
        runAllTimers: timers.runAllTimers,
        runOnlyPendingTimers: timers.runOnlyPendingTimers,
        getTimerCount: timers.getTimerCount,
        now: timers.now
    },
    // Cleanup functions
    clearAllMocks() {
        (0, stubsRegistry_js_1.clearAllMocks)();
        (0, spyOn_js_1.restoreAllSpiesGlobally)();
        (0, mockFunction_js_1.resetGlobalCallOrder)();
    },
    resetAllMocks() {
        this.clearAllMocks();
        timers.useRealTimers();
    }
};
// Individual exports for convenience
var mockFunction_js_2 = require("./mockFunction.js");
Object.defineProperty(exports, "fn", { enumerable: true, get: function () { return mockFunction_js_2.fn; } });
var spyOn_js_2 = require("./spyOn.js");
Object.defineProperty(exports, "spyOn", { enumerable: true, get: function () { return spyOn_js_2.spyOn; } });
var fakeTimers_js_1 = require("../timers/fakeTimers.js");
Object.defineProperty(exports, "useFakeTimers", { enumerable: true, get: function () { return fakeTimers_js_1.useFakeTimers; } });
Object.defineProperty(exports, "useRealTimers", { enumerable: true, get: function () { return fakeTimers_js_1.useRealTimers; } });
Object.defineProperty(exports, "setSystemTime", { enumerable: true, get: function () { return fakeTimers_js_1.setSystemTime; } });
Object.defineProperty(exports, "advanceTimersByTime", { enumerable: true, get: function () { return fakeTimers_js_1.advanceTimersByTime; } });
Object.defineProperty(exports, "runAllTimers", { enumerable: true, get: function () { return fakeTimers_js_1.runAllTimers; } });
Object.defineProperty(exports, "runOnlyPendingTimers", { enumerable: true, get: function () { return fakeTimers_js_1.runOnlyPendingTimers; } });
// Default export
exports.default = exports.mock;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiL2hvbWUvcnVubmVyL3dvcmtzcGFjZS9saWIvbW9ja3MvaW5kZXgudHMiLCJtYXBwaW5ncyI6IjtBQUFBOzs7OztHQUtHOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFFSCx1REFBNkQ7QUFDN0QseUNBQTZFO0FBQzdFLHlEQU80QjtBQUM1QixnRUFBa0Q7QUFFbEQ7O0dBRUc7QUFDVSxRQUFBLElBQUksR0FBRztJQUNsQixpQkFBaUI7SUFDakIsRUFBRSxFQUFGLG9CQUFFO0lBRUYsUUFBUTtJQUNSLEtBQUssRUFBTCxnQkFBSztJQUNMLGVBQWUsRUFBZiwwQkFBZTtJQUVmLGlCQUFpQjtJQUNqQixNQUFNLEVBQUUsNkJBQVU7SUFDbEIsTUFBTSxFQUFFLCtCQUFZO0lBQ3BCLFFBQVEsRUFBUiwyQkFBUTtJQUNSLGdCQUFnQixFQUFoQixtQ0FBZ0I7SUFDaEIscUJBQXFCLEVBQXJCLHdDQUFxQjtJQUVyQixTQUFTO0lBQ1QsTUFBTSxFQUFFO1FBQ04sYUFBYSxFQUFFLE1BQU0sQ0FBQyxhQUFhO1FBQ25DLGFBQWEsRUFBRSxNQUFNLENBQUMsYUFBYTtRQUNuQyxhQUFhLEVBQUUsTUFBTSxDQUFDLGFBQWE7UUFDbkMsbUJBQW1CLEVBQUUsTUFBTSxDQUFDLG1CQUFtQjtRQUMvQyxZQUFZLEVBQUUsTUFBTSxDQUFDLFlBQVk7UUFDakMsb0JBQW9CLEVBQUUsTUFBTSxDQUFDLG9CQUFvQjtRQUNqRCxhQUFhLEVBQUUsTUFBTSxDQUFDLGFBQWE7UUFDbkMsR0FBRyxFQUFFLE1BQU0sQ0FBQyxHQUFHO0tBQ2hCO0lBRUQsb0JBQW9CO0lBQ3BCLGFBQWE7UUFDWCxJQUFBLGdDQUFtQixHQUFFLENBQUM7UUFDdEIsSUFBQSxrQ0FBdUIsR0FBRSxDQUFDO1FBQzFCLElBQUEsc0NBQW9CLEdBQUUsQ0FBQztJQUN6QixDQUFDO0lBRUQsYUFBYTtRQUNYLElBQUksQ0FBQyxhQUFhLEVBQUUsQ0FBQztRQUNyQixNQUFNLENBQUMsYUFBYSxFQUFFLENBQUM7SUFDekIsQ0FBQztDQUNGLENBQUM7QUFFRixxQ0FBcUM7QUFDckMscURBQXVDO0FBQTlCLHFHQUFBLEVBQUUsT0FBQTtBQUNYLHVDQUFtQztBQUExQixpR0FBQSxLQUFLLE9BQUE7QUFDZCx5REFPaUM7QUFOL0IsOEdBQUEsYUFBYSxPQUFBO0FBQ2IsOEdBQUEsYUFBYSxPQUFBO0FBQ2IsOEdBQUEsYUFBYSxPQUFBO0FBQ2Isb0hBQUEsbUJBQW1CLE9BQUE7QUFDbkIsNkdBQUEsWUFBWSxPQUFBO0FBQ1oscUhBQUEsb0JBQW9CLE9BQUE7QUFHdEIsaUJBQWlCO0FBQ2pCLGtCQUFlLFlBQUksQ0FBQyIsIm5hbWVzIjpbXSwic291cmNlcyI6WyIvaG9tZS9ydW5uZXIvd29ya3NwYWNlL2xpYi9tb2Nrcy9pbmRleC50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIE1vY2sgQVBJIC0gVW5pZmllZCBJbnRlcmZhY2UgZm9yIEFsbCBNb2NraW5nIENhcGFiaWxpdGllc1xuICogXG4gKiBUaGlzIG1vZHVsZSBwcm92aWRlcyB0aGUgbWFpbiBgbW9ja2AgbmFtZXNwYWNlIHdpdGggYWxsIG1vY2tpbmcgZnVuY3Rpb25hbGl0eVxuICogaW5jbHVkaW5nIGZ1bmN0aW9uIG1vY2tzLCBzcGllcywgdGltZXJzLCBhbmQgbW9kdWxlIG1vY2tpbmcuXG4gKi9cblxuaW1wb3J0IHsgZm4sIHJlc2V0R2xvYmFsQ2FsbE9yZGVyIH0gZnJvbSAnLi9tb2NrRnVuY3Rpb24uanMnO1xuaW1wb3J0IHsgc3B5T24sIHJlc3RvcmVBbGxTcGllcywgcmVzdG9yZUFsbFNwaWVzR2xvYmFsbHkgfSBmcm9tICcuL3NweU9uLmpzJztcbmltcG9ydCB7IFxuICBtb2NrTW9kdWxlLCBcbiAgdW5tb2NrTW9kdWxlLCBcbiAgY2xlYXJBbGxNb2NrcyBhcyBjbGVhckFsbE1vZHVsZU1vY2tzLFxuICBpc01vY2tlZCxcbiAgZ2V0TW9ja2VkTW9kdWxlcyxcbiAgZ2V0TW9ja0ltcGxlbWVudGF0aW9uIFxufSBmcm9tICcuL3N0dWJzUmVnaXN0cnkuanMnO1xuaW1wb3J0ICogYXMgdGltZXJzIGZyb20gJy4uL3RpbWVycy9mYWtlVGltZXJzLmpzJztcblxuLyoqXG4gKiBNYWluIG1vY2sgQVBJIG9iamVjdCAtIHByb3ZpZGVzIEplc3QvU2lub24tY29tcGF0aWJsZSBpbnRlcmZhY2VcbiAqL1xuZXhwb3J0IGNvbnN0IG1vY2sgPSB7XG4gIC8vIE1vY2sgZnVuY3Rpb25zXG4gIGZuLFxuICBcbiAgLy8gU3BpZXNcbiAgc3B5T24sXG4gIHJlc3RvcmVBbGxTcGllcyxcbiAgXG4gIC8vIE1vZHVsZSBtb2NraW5nXG4gIG1vZHVsZTogbW9ja01vZHVsZSxcbiAgdW5tb2NrOiB1bm1vY2tNb2R1bGUsXG4gIGlzTW9ja2VkLFxuICBnZXRNb2NrZWRNb2R1bGVzLFxuICBnZXRNb2NrSW1wbGVtZW50YXRpb24sXG4gIFxuICAvLyBUaW1lcnNcbiAgdGltZXJzOiB7XG4gICAgdXNlRmFrZVRpbWVyczogdGltZXJzLnVzZUZha2VUaW1lcnMsXG4gICAgdXNlUmVhbFRpbWVyczogdGltZXJzLnVzZVJlYWxUaW1lcnMsXG4gICAgc2V0U3lzdGVtVGltZTogdGltZXJzLnNldFN5c3RlbVRpbWUsXG4gICAgYWR2YW5jZVRpbWVyc0J5VGltZTogdGltZXJzLmFkdmFuY2VUaW1lcnNCeVRpbWUsXG4gICAgcnVuQWxsVGltZXJzOiB0aW1lcnMucnVuQWxsVGltZXJzLFxuICAgIHJ1bk9ubHlQZW5kaW5nVGltZXJzOiB0aW1lcnMucnVuT25seVBlbmRpbmdUaW1lcnMsXG4gICAgZ2V0VGltZXJDb3VudDogdGltZXJzLmdldFRpbWVyQ291bnQsXG4gICAgbm93OiB0aW1lcnMubm93XG4gIH0sXG4gIFxuICAvLyBDbGVhbnVwIGZ1bmN0aW9uc1xuICBjbGVhckFsbE1vY2tzKCkge1xuICAgIGNsZWFyQWxsTW9kdWxlTW9ja3MoKTtcbiAgICByZXN0b3JlQWxsU3BpZXNHbG9iYWxseSgpO1xuICAgIHJlc2V0R2xvYmFsQ2FsbE9yZGVyKCk7XG4gIH0sXG4gIFxuICByZXNldEFsbE1vY2tzKCkge1xuICAgIHRoaXMuY2xlYXJBbGxNb2NrcygpO1xuICAgIHRpbWVycy51c2VSZWFsVGltZXJzKCk7XG4gIH1cbn07XG5cbi8vIEluZGl2aWR1YWwgZXhwb3J0cyBmb3IgY29udmVuaWVuY2VcbmV4cG9ydCB7IGZuIH0gZnJvbSAnLi9tb2NrRnVuY3Rpb24uanMnO1xuZXhwb3J0IHsgc3B5T24gfSBmcm9tICcuL3NweU9uLmpzJztcbmV4cG9ydCB7IFxuICB1c2VGYWtlVGltZXJzLFxuICB1c2VSZWFsVGltZXJzLCBcbiAgc2V0U3lzdGVtVGltZSxcbiAgYWR2YW5jZVRpbWVyc0J5VGltZSxcbiAgcnVuQWxsVGltZXJzLFxuICBydW5Pbmx5UGVuZGluZ1RpbWVyc1xufSBmcm9tICcuLi90aW1lcnMvZmFrZVRpbWVycy5qcyc7XG5cbi8vIERlZmF1bHQgZXhwb3J0XG5leHBvcnQgZGVmYXVsdCBtb2NrOyJdLCJ2ZXJzaW9uIjozfQ==