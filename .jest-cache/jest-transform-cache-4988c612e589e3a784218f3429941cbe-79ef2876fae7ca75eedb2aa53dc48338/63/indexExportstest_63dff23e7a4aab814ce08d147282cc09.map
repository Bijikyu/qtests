{"version":3,"names":["index","require","directStubMethod","mockConsole","directMockConsole","withMockConsole","test","expect","stubMethod","toBe","testEnv","setup","stubs","axios","winston","obj","greet","restore","result","spy","console","log","mock","calls","length"],"sources":["indexExports.test.js"],"sourcesContent":["\nconst index = require('..'); // (load main exports)\nconst directStubMethod = require('../utils/stubMethod'); // (direct stubMethod for comparison)\nconst { mockConsole: directMockConsole } = require('../utils/mockConsole'); // (direct mockConsole for comparison)\nconst { withMockConsole } = require('../utils/testHelpers'); //(helper for console spies)\n\n// Jest-style test verifying export presence\n test('index exports expected modules', () => {\n  expect(typeof index.stubMethod).toBe('function'); // (stubMethod export must be a function)\n  expect(typeof index.mockConsole).toBe('function'); // (mockConsole export must be a function)\n  expect(typeof index.testEnv).toBe('object'); // (testEnv export should be an object)\n  expect(typeof index.setup).toBe('function'); // (setup export is a callable helper)\n  expect(typeof index.stubs).toBe('object'); // (stubs namespace object)\n  expect(typeof index.stubs.axios).toBe('object'); // (axios stub object)\n  expect(typeof index.stubs.winston).toBe('object'); // (winston stub object)\n});\n\n// Verify stubMethod behaves same via index\n test('stubMethod via index works like direct import', () => {\n  const obj = { greet: () => 'hello' }; // (sample object with method)\n  const restore = index.stubMethod(obj, 'greet', () => 'stub'); // (use index export)\n  const result = obj.greet(); // (call stubbed method)\n  restore(); // (restore original)\n  expect(result).toBe('stub'); // (stubbed call result)\n  expect(obj.greet()).toBe('hello'); // (restoration check)\n  expect(index.stubMethod).toBe(directStubMethod); // (same function reference)\n});\n\n// Verify mockConsole behaves same via index\ntest('mockConsole via index works like direct import', () => withMockConsole('log', spy => { //(use helper for spy lifecycle)\n  console.log('test'); // (emit log to be captured)\n  expect(spy.mock.calls.length).toBe(3); // (expect creation log and test log)\n  expect(spy.mock.calls[2][0]).toBe('test'); // (verify captured argument)\n  expect(index.mockConsole).toBe(directMockConsole); // (same function reference)\n}));\n\n"],"mappings":"AACA,MAAMA,KAAK,GAAGC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC;AAC7B,MAAMC,gBAAgB,GAAGD,OAAO,CAAC,qBAAqB,CAAC,CAAC,CAAC;AACzD,MAAM;EAAEE,WAAW,EAAEC;AAAkB,CAAC,GAAGH,OAAO,CAAC,sBAAsB,CAAC,CAAC,CAAC;AAC5E,MAAM;EAAEI;AAAgB,CAAC,GAAGJ,OAAO,CAAC,sBAAsB,CAAC,CAAC,CAAC;;AAE7D;AACCK,IAAI,CAAC,gCAAgC,EAAE,MAAM;EAC5CC,MAAM,CAAC,OAAOP,KAAK,CAACQ,UAAU,CAAC,CAACC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;EAClDF,MAAM,CAAC,OAAOP,KAAK,CAACG,WAAW,CAAC,CAACM,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;EACnDF,MAAM,CAAC,OAAOP,KAAK,CAACU,OAAO,CAAC,CAACD,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;EAC7CF,MAAM,CAAC,OAAOP,KAAK,CAACW,KAAK,CAAC,CAACF,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;EAC7CF,MAAM,CAAC,OAAOP,KAAK,CAACY,KAAK,CAAC,CAACH,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;EAC3CF,MAAM,CAAC,OAAOP,KAAK,CAACY,KAAK,CAACC,KAAK,CAAC,CAACJ,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;EACjDF,MAAM,CAAC,OAAOP,KAAK,CAACY,KAAK,CAACE,OAAO,CAAC,CAACL,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;AACrD,CAAC,CAAC;;AAEF;AACCH,IAAI,CAAC,+CAA+C,EAAE,MAAM;EAC3D,MAAMS,GAAG,GAAG;IAAEC,KAAK,EAAEA,CAAA,KAAM;EAAQ,CAAC,CAAC,CAAC;EACtC,MAAMC,OAAO,GAAGjB,KAAK,CAACQ,UAAU,CAACO,GAAG,EAAE,OAAO,EAAE,MAAM,MAAM,CAAC,CAAC,CAAC;EAC9D,MAAMG,MAAM,GAAGH,GAAG,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;EAC5BC,OAAO,CAAC,CAAC,CAAC,CAAC;EACXV,MAAM,CAACW,MAAM,CAAC,CAACT,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;EAC7BF,MAAM,CAACQ,GAAG,CAACC,KAAK,CAAC,CAAC,CAAC,CAACP,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;EACnCF,MAAM,CAACP,KAAK,CAACQ,UAAU,CAAC,CAACC,IAAI,CAACP,gBAAgB,CAAC,CAAC,CAAC;AACnD,CAAC,CAAC;;AAEF;AACAI,IAAI,CAAC,gDAAgD,EAAE,MAAMD,eAAe,CAAC,KAAK,EAAEc,GAAG,IAAI;EAAE;EAC3FC,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC;EACrBd,MAAM,CAACY,GAAG,CAACG,IAAI,CAACC,KAAK,CAACC,MAAM,CAAC,CAACf,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;EACvCF,MAAM,CAACY,GAAG,CAACG,IAAI,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAACd,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;EAC3CF,MAAM,CAACP,KAAK,CAACG,WAAW,CAAC,CAACM,IAAI,CAACL,iBAAiB,CAAC,CAAC,CAAC;AACrD,CAAC,CAAC,CAAC","ignoreList":[]}