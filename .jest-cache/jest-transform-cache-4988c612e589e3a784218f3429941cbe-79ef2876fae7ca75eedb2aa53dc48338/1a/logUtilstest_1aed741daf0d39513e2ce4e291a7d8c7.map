{"version":3,"names":["withMockConsole","require","logStart","logReturn","executeWithLogs","test","spy","last","mock","calls","length","expect","toBe","add","a","b","res","fetchVal"],"sources":["logUtils.test.js"],"sourcesContent":["\n\nconst { withMockConsole } = require('../utils/testHelpers'); //(helper for console spies)\n\n\nconst { logStart, logReturn, executeWithLogs } = require('../lib/logUtils'); //functions under test, includes executeWithLogs\n\n\ntest('logStart logs correct start message', () => withMockConsole('log', spy => { //jest test for logStart with helper\n  logStart('fn', 1, 2); //trigger log\n  const last = spy.mock.calls.length - 1; //index of log entry\n  expect(spy.mock.calls[last][0]).toBe('[START] fn(1, 2)'); //check output\n}));\n\ntest('logReturn logs correct return message', () => withMockConsole('log', spy => { //jest test for logReturn with helper\n  logReturn('fn', 'value'); //trigger log\n  const last = spy.mock.calls.length - 1; //index of log entry\n  expect(spy.mock.calls[last][0]).toBe('[RETURN] fn -> \"value\"'); //check output\n}));\n\ntest('executeWithLogs wraps sync function', () => withMockConsole('log', spy => { //jest test for executeWithLogs sync with helper\n  function add(a, b){ //simple addition\n    return a + b; //return sum\n  }\n  const res = executeWithLogs('add', add, 1, 2); //execute with logging\n  expect(res).toBe(3); //verify result\n  expect(spy.mock.calls[3][0]).toBe('add is running with 1, 2'); //check start log\n  const last = spy.mock.calls.length - 1; //index of last log\n  expect(spy.mock.calls[last][0]).toBe('executeWithLogs is returning 3'); //check return log\n}));\n\ntest('executeWithLogs wraps async function', async () => withMockConsole('log', async spy => { //jest test for executeWithLogs async with helper\n  async function fetchVal(){ //dummy async\n    return 'ok'; //return value\n  }\n  const res = await executeWithLogs('fetchVal', fetchVal); //execute with logging\n  expect(res).toBe('ok'); //verify result\n  expect(spy.mock.calls[3][0]).toBe('fetchVal is running with none'); //check start log\n  const last = spy.mock.calls.length - 1; //index of last log\n  expect(spy.mock.calls[last][0]).toBe('executeWithLogs is returning ok'); //check return log\n}));\n\n"],"mappings":"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","ignoreList":[]}