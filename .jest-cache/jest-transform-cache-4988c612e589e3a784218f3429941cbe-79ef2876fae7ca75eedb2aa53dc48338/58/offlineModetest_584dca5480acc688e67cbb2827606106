7c701296716d20527b9d60f6f602a845
// Auto-generated unit test for offlineMode.js - optimized for speed
import * as mod from './offlineMode.js';
describe('offlineMode.js', () => {
  test('setOfflineMode works', async () => {
    // Fast assertion - TODO: implement specific test logic
    expect(typeof mod.setOfflineMode).toBeDefined();
  });
  test('isOfflineMode works', async () => {
    // Fast assertion - TODO: implement specific test logic
    expect(typeof mod.isOfflineMode).toBeDefined();
  });
  test('getAxios works', async () => {
    // Fast assertion - TODO: implement specific test logic
    expect(typeof mod.getAxios).toBeDefined();
  });
  test('getQerrors works', async () => {
    // Fast assertion - TODO: implement specific test logic
    expect(typeof mod.getQerrors).toBeDefined();
  });
  test('getEnvironmentState works', async () => {
    // Fast assertion - TODO: implement specific test logic
    expect(typeof mod.getEnvironmentState).toBeDefined();
  });
  test('createEnvironmentAdapters works', async () => {
    // Fast assertion - TODO: implement specific test logic
    expect(typeof mod.createEnvironmentAdapters).toBeDefined();
  });
  test('clearOfflineCache works', async () => {
    // Fast assertion - TODO: implement specific test logic
    expect(typeof mod.clearOfflineCache).toBeDefined();
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJtb2QiLCJkZXNjcmliZSIsInRlc3QiLCJleHBlY3QiLCJzZXRPZmZsaW5lTW9kZSIsInRvQmVEZWZpbmVkIiwiaXNPZmZsaW5lTW9kZSIsImdldEF4aW9zIiwiZ2V0UWVycm9ycyIsImdldEVudmlyb25tZW50U3RhdGUiLCJjcmVhdGVFbnZpcm9ubWVudEFkYXB0ZXJzIiwiY2xlYXJPZmZsaW5lQ2FjaGUiXSwic291cmNlcyI6WyJvZmZsaW5lTW9kZS50ZXN0LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEF1dG8tZ2VuZXJhdGVkIHVuaXQgdGVzdCBmb3Igb2ZmbGluZU1vZGUuanMgLSBvcHRpbWl6ZWQgZm9yIHNwZWVkXG5pbXBvcnQgKiBhcyBtb2QgZnJvbSAnLi9vZmZsaW5lTW9kZS5qcyc7XG5cbmRlc2NyaWJlKCdvZmZsaW5lTW9kZS5qcycsICgpID0+IHtcbiAgdGVzdCgnc2V0T2ZmbGluZU1vZGUgd29ya3MnLCBhc3luYyAoKSA9PiB7XG4gICAgLy8gRmFzdCBhc3NlcnRpb24gLSBUT0RPOiBpbXBsZW1lbnQgc3BlY2lmaWMgdGVzdCBsb2dpY1xuICAgIGV4cGVjdCh0eXBlb2YgbW9kLnNldE9mZmxpbmVNb2RlKS50b0JlRGVmaW5lZCgpO1xuICB9KTtcbiAgdGVzdCgnaXNPZmZsaW5lTW9kZSB3b3JrcycsIGFzeW5jICgpID0+IHtcbiAgICAvLyBGYXN0IGFzc2VydGlvbiAtIFRPRE86IGltcGxlbWVudCBzcGVjaWZpYyB0ZXN0IGxvZ2ljXG4gICAgZXhwZWN0KHR5cGVvZiBtb2QuaXNPZmZsaW5lTW9kZSkudG9CZURlZmluZWQoKTtcbiAgfSk7XG4gIHRlc3QoJ2dldEF4aW9zIHdvcmtzJywgYXN5bmMgKCkgPT4ge1xuICAgIC8vIEZhc3QgYXNzZXJ0aW9uIC0gVE9ETzogaW1wbGVtZW50IHNwZWNpZmljIHRlc3QgbG9naWNcbiAgICBleHBlY3QodHlwZW9mIG1vZC5nZXRBeGlvcykudG9CZURlZmluZWQoKTtcbiAgfSk7XG4gIHRlc3QoJ2dldFFlcnJvcnMgd29ya3MnLCBhc3luYyAoKSA9PiB7XG4gICAgLy8gRmFzdCBhc3NlcnRpb24gLSBUT0RPOiBpbXBsZW1lbnQgc3BlY2lmaWMgdGVzdCBsb2dpY1xuICAgIGV4cGVjdCh0eXBlb2YgbW9kLmdldFFlcnJvcnMpLnRvQmVEZWZpbmVkKCk7XG4gIH0pO1xuICB0ZXN0KCdnZXRFbnZpcm9ubWVudFN0YXRlIHdvcmtzJywgYXN5bmMgKCkgPT4ge1xuICAgIC8vIEZhc3QgYXNzZXJ0aW9uIC0gVE9ETzogaW1wbGVtZW50IHNwZWNpZmljIHRlc3QgbG9naWNcbiAgICBleHBlY3QodHlwZW9mIG1vZC5nZXRFbnZpcm9ubWVudFN0YXRlKS50b0JlRGVmaW5lZCgpO1xuICB9KTtcbiAgdGVzdCgnY3JlYXRlRW52aXJvbm1lbnRBZGFwdGVycyB3b3JrcycsIGFzeW5jICgpID0+IHtcbiAgICAvLyBGYXN0IGFzc2VydGlvbiAtIFRPRE86IGltcGxlbWVudCBzcGVjaWZpYyB0ZXN0IGxvZ2ljXG4gICAgZXhwZWN0KHR5cGVvZiBtb2QuY3JlYXRlRW52aXJvbm1lbnRBZGFwdGVycykudG9CZURlZmluZWQoKTtcbiAgfSk7XG4gIHRlc3QoJ2NsZWFyT2ZmbGluZUNhY2hlIHdvcmtzJywgYXN5bmMgKCkgPT4ge1xuICAgIC8vIEZhc3QgYXNzZXJ0aW9uIC0gVE9ETzogaW1wbGVtZW50IHNwZWNpZmljIHRlc3QgbG9naWNcbiAgICBleHBlY3QodHlwZW9mIG1vZC5jbGVhck9mZmxpbmVDYWNoZSkudG9CZURlZmluZWQoKTtcbiAgfSk7XG59KTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQSxPQUFPLEtBQUtBLEdBQUcsTUFBTSxrQkFBa0I7QUFFdkNDLFFBQVEsQ0FBQyxnQkFBZ0IsRUFBRSxNQUFNO0VBQy9CQyxJQUFJLENBQUMsc0JBQXNCLEVBQUUsWUFBWTtJQUN2QztJQUNBQyxNQUFNLENBQUMsT0FBT0gsR0FBRyxDQUFDSSxjQUFjLENBQUMsQ0FBQ0MsV0FBVyxDQUFDLENBQUM7RUFDakQsQ0FBQyxDQUFDO0VBQ0ZILElBQUksQ0FBQyxxQkFBcUIsRUFBRSxZQUFZO0lBQ3RDO0lBQ0FDLE1BQU0sQ0FBQyxPQUFPSCxHQUFHLENBQUNNLGFBQWEsQ0FBQyxDQUFDRCxXQUFXLENBQUMsQ0FBQztFQUNoRCxDQUFDLENBQUM7RUFDRkgsSUFBSSxDQUFDLGdCQUFnQixFQUFFLFlBQVk7SUFDakM7SUFDQUMsTUFBTSxDQUFDLE9BQU9ILEdBQUcsQ0FBQ08sUUFBUSxDQUFDLENBQUNGLFdBQVcsQ0FBQyxDQUFDO0VBQzNDLENBQUMsQ0FBQztFQUNGSCxJQUFJLENBQUMsa0JBQWtCLEVBQUUsWUFBWTtJQUNuQztJQUNBQyxNQUFNLENBQUMsT0FBT0gsR0FBRyxDQUFDUSxVQUFVLENBQUMsQ0FBQ0gsV0FBVyxDQUFDLENBQUM7RUFDN0MsQ0FBQyxDQUFDO0VBQ0ZILElBQUksQ0FBQywyQkFBMkIsRUFBRSxZQUFZO0lBQzVDO0lBQ0FDLE1BQU0sQ0FBQyxPQUFPSCxHQUFHLENBQUNTLG1CQUFtQixDQUFDLENBQUNKLFdBQVcsQ0FBQyxDQUFDO0VBQ3RELENBQUMsQ0FBQztFQUNGSCxJQUFJLENBQUMsaUNBQWlDLEVBQUUsWUFBWTtJQUNsRDtJQUNBQyxNQUFNLENBQUMsT0FBT0gsR0FBRyxDQUFDVSx5QkFBeUIsQ0FBQyxDQUFDTCxXQUFXLENBQUMsQ0FBQztFQUM1RCxDQUFDLENBQUM7RUFDRkgsSUFBSSxDQUFDLHlCQUF5QixFQUFFLFlBQVk7SUFDMUM7SUFDQUMsTUFBTSxDQUFDLE9BQU9ILEdBQUcsQ0FBQ1csaUJBQWlCLENBQUMsQ0FBQ04sV0FBVyxDQUFDLENBQUM7RUFDcEQsQ0FBQyxDQUFDO0FBQ0osQ0FBQyxDQUFDIiwiaWdub3JlTGlzdCI6W119