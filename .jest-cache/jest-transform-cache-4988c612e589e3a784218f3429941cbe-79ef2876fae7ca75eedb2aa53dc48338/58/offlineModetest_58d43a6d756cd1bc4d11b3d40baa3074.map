{"version":3,"names":["setOfflineMode","isOfflineMode","getAxios","getQerrors","getEnvironmentState","createEnvironmentAdapters","clearOfflineCache","require","describe","originalEnv","process","env","beforeEach","jest","resetModules","afterAll","test","CODEX","offlineMode","envState","expect","codexFlag","toBe","environmentDetected","OFFLINE_MODE","offlineFlagExplicit","axios","get","post","put","delete","request","response","status","data","toEqual","statusText","getResponse","postResponse","name","putResponse","deleteResponse","requestResponse","method","url","qerrorsImpl","qerrors","not","toThrow","consoleSpy","spyOn","console","mockImplementation","toHaveBeenCalledWith","mockRestore","state","toHaveProperty","isOffline","adapters","toBeDefined","axios1","axios2"],"sources":["offlineMode.test.js"],"sourcesContent":["/**\n * Enhanced Offline Mode Tests\n * \n * This test suite verifies the enhanced offline mode functionality including\n * environment variable detection, automatic configuration, and the new\n * environment adapter patterns. These tests ensure the offline mode utility\n * works correctly with both programmatic and environment-based configuration.\n * \n * Test coverage includes:\n * - Environment variable detection (CODEX, OFFLINE_MODE)\n * - Automatic offline mode configuration\n * - Enhanced axios mock factory integration\n * - Improved qerrors handling\n * - Environment adapter creation\n * - State management and caching behavior\n */\n\nconst {\n  setOfflineMode,\n  isOfflineMode,\n  getAxios,\n  getQerrors,\n  getEnvironmentState,\n  createEnvironmentAdapters,\n  clearOfflineCache\n} = require('../utils/offlineMode');\n\ndescribe('Enhanced Offline Mode', () => {\n  \n  // Save original environment variables\n  const originalEnv = process.env;\n  \n  beforeEach(() => {\n    // Reset environment variables for each test\n    jest.resetModules();\n    process.env = { ...originalEnv };\n    clearOfflineCache();\n  });\n  \n  afterAll(() => {\n    // Restore original environment\n    process.env = originalEnv;\n  });\n  \n  describe('Environment Variable Detection', () => {\n    \n    test('detects CODEX environment variable', () => {\n      process.env.CODEX = 'true';\n      \n      // Re-require module to pick up environment changes\n      jest.resetModules();\n      const offlineMode = require('../utils/offlineMode');\n      \n      const envState = offlineMode.getEnvironmentState();\n      expect(envState.codexFlag).toBe(true);\n      expect(envState.environmentDetected).toBe(true);\n    });\n    \n    test('detects OFFLINE_MODE environment variable', () => {\n      process.env.OFFLINE_MODE = 'true';\n      \n      jest.resetModules();\n      const offlineMode = require('../utils/offlineMode');\n      \n      const envState = offlineMode.getEnvironmentState();\n      expect(envState.offlineFlagExplicit).toBe(true);\n      expect(envState.environmentDetected).toBe(true);\n    });\n    \n    test('handles case-insensitive environment variables', () => {\n      process.env.CODEX = 'TRUE';\n      process.env.OFFLINE_MODE = 'True';\n      \n      jest.resetModules();\n      const offlineMode = require('../utils/offlineMode');\n      \n      const envState = offlineMode.getEnvironmentState();\n      expect(envState.codexFlag).toBe(true);\n      expect(envState.offlineFlagExplicit).toBe(true);\n    });\n    \n    test('ignores invalid environment variable values', () => {\n      process.env.CODEX = 'false';\n      process.env.OFFLINE_MODE = 'no';\n      \n      jest.resetModules();\n      const offlineMode = require('../utils/offlineMode');\n      \n      const envState = offlineMode.getEnvironmentState();\n      expect(envState.codexFlag).toBe(false);\n      expect(envState.offlineFlagExplicit).toBe(false);\n      expect(envState.environmentDetected).toBe(false);\n    });\n  });\n  \n  describe('Enhanced Axios Integration', () => {\n    \n    test('returns mock axios factory instance in offline mode', async () => {\n      setOfflineMode(true);\n      \n      const axios = getAxios();\n      \n      // Verify it's a mock axios with enhanced capabilities\n      expect(typeof axios.get).toBe('function');\n      expect(typeof axios.post).toBe('function');\n      expect(typeof axios.put).toBe('function');\n      expect(typeof axios.delete).toBe('function');\n      expect(typeof axios.request).toBe('function');\n      \n      // Test that it returns proper mock responses\n      const response = await axios.get('/api/test');\n      expect(response.status).toBe(200);\n      expect(response.data).toEqual({});\n      expect(response.statusText).toBe('OK');\n    });\n    \n    test('mock axios handles all HTTP methods correctly', async () => {\n      setOfflineMode(true);\n      const axios = getAxios();\n      \n      // Test GET request\n      const getResponse = await axios.get('/api/users');\n      expect(getResponse.status).toBe(200);\n      \n      // Test POST request with data\n      const postResponse = await axios.post('/api/users', { name: 'test' });\n      expect(postResponse.status).toBe(200);\n      \n      // Test PUT request\n      const putResponse = await axios.put('/api/users/1', { name: 'updated' });\n      expect(putResponse.status).toBe(200);\n      \n      // Test DELETE request\n      const deleteResponse = await axios.delete('/api/users/1');\n      expect(deleteResponse.status).toBe(200);\n      \n      // Test generic request method\n      const requestResponse = await axios.request({ method: 'PATCH', url: '/api/test' });\n      expect(requestResponse.status).toBe(200);\n    });\n  });\n  \n  describe('Enhanced Qerrors Handling', () => {\n    \n    test('returns enhanced no-op qerrors in offline mode', () => {\n      setOfflineMode(true);\n      \n      const qerrorsImpl = getQerrors();\n      \n      // Verify it has the qerrors function\n      expect(typeof qerrorsImpl.qerrors).toBe('function');\n      \n      // Test that it executes without throwing\n      expect(() => {\n        qerrorsImpl.qerrors();\n      }).not.toThrow();\n    });\n    \n    test('enhanced qerrors provides debugging output', () => {\n      setOfflineMode(true);\n      \n      // Capture console output\n      const consoleSpy = jest.spyOn(console, 'log').mockImplementation();\n      \n      const qerrorsImpl = getQerrors();\n      qerrorsImpl.qerrors();\n      \n      // Verify debugging output is generated\n      expect(consoleSpy).toHaveBeenCalledWith('noopQerrors is running with none');\n      expect(consoleSpy).toHaveBeenCalledWith('noopQerrors has run');\n      \n      consoleSpy.mockRestore();\n    });\n  });\n  \n  describe('Environment State Management', () => {\n    \n    test('getEnvironmentState returns comprehensive state information', () => {\n      setOfflineMode(true);\n      \n      const state = getEnvironmentState();\n      \n      expect(state).toHaveProperty('codexFlag');\n      expect(state).toHaveProperty('offlineFlagExplicit');\n      expect(state).toHaveProperty('testEnvironment');\n      expect(state).toHaveProperty('isOffline');\n      expect(state).toHaveProperty('environmentDetected');\n      \n      expect(state.isOffline).toBe(true);\n    });\n    \n    test('tracks environment detection correctly', () => {\n      // Initially no environment detection\n      let state = getEnvironmentState();\n      expect(state.environmentDetected).toBe(false);\n      \n      // Set programmatic offline mode\n      setOfflineMode(true);\n      state = getEnvironmentState();\n      expect(state.isOffline).toBe(true);\n    });\n  });\n  \n  describe('Environment Adapter Creation', () => {\n    \n    test('createEnvironmentAdapters returns complete adapter set', () => {\n      setOfflineMode(true);\n      \n      const adapters = createEnvironmentAdapters();\n      \n      expect(adapters).toHaveProperty('isOffline');\n      expect(adapters).toHaveProperty('axios');\n      expect(adapters).toHaveProperty('qerrors');\n      \n      expect(adapters.isOffline).toBe(true);\n      expect(typeof adapters.axios.get).toBe('function');\n      expect(typeof adapters.qerrors.qerrors).toBe('function');\n    });\n    \n    test('adapter set works together for complete offline simulation', async () => {\n      setOfflineMode(true);\n      \n      const { axios, qerrors, isOffline } = createEnvironmentAdapters();\n      \n      // Verify offline state\n      expect(isOffline).toBe(true);\n      \n      // Test axios functionality\n      const response = await axios.get('/api/test');\n      expect(response.status).toBe(200);\n      \n      // Test qerrors functionality\n      expect(() => {\n        qerrors.qerrors();\n      }).not.toThrow();\n    });\n    \n    test('adapter set provides online implementations when appropriate', () => {\n      setOfflineMode(false);\n      \n      const { axios, qerrors, isOffline } = createEnvironmentAdapters();\n      \n      expect(isOffline).toBe(false);\n      // Note: We can't easily test real axios/qerrors loading without dependencies\n      // but we can verify the adapters are created without errors\n      expect(axios).toBeDefined();\n      expect(qerrors).toBeDefined();\n    });\n  });\n  \n  describe('Caching and Performance', () => {\n    \n    test('caches implementations for consistent behavior', () => {\n      setOfflineMode(true);\n      \n      const axios1 = getAxios();\n      const axios2 = getAxios();\n      \n      // Should return the same cached instance\n      expect(axios1).toBe(axios2);\n    });\n    \n    test('clearOfflineCache resets cached implementations', () => {\n      setOfflineMode(true);\n      \n      const axios1 = getAxios();\n      clearOfflineCache();\n      const axios2 = getAxios();\n      \n      // Cache should be functional - both instances should work correctly\n      // (Note: with static stub modules, object identity may be preserved by Node.js require cache)\n      expect(axios1).toBeDefined();\n      expect(axios2).toBeDefined();\n      expect(typeof axios1.get).toBe('function');\n      expect(typeof axios2.get).toBe('function');\n    });\n    \n    test('cache is cleared when toggling offline mode', () => {\n      setOfflineMode(true);\n      const axios1 = getAxios();\n      \n      setOfflineMode(false);\n      const axios2 = getAxios();\n      \n      // Should return different instances after mode toggle\n      expect(axios1).not.toBe(axios2);\n    });\n  });\n  \n  describe('Error Handling and Fallbacks', () => {\n    \n    test('handles module loading errors gracefully', () => {\n      setOfflineMode(false);\n      \n      // This should not throw even if real modules are unavailable\n      expect(() => {\n        getAxios();\n      }).not.toThrow();\n      \n      expect(() => {\n        getQerrors();\n      }).not.toThrow();\n    });\n    \n    test('provides fallback implementations when real modules fail', () => {\n      setOfflineMode(false);\n      \n      // Get implementations (should fallback to stubs if real modules unavailable)\n      const axios = getAxios();\n      const qerrors = getQerrors();\n      \n      expect(axios).toBeDefined();\n      expect(qerrors).toBeDefined();\n    });\n  });\n  \n  describe('Integration with Existing Functionality', () => {\n    \n    test('maintains compatibility with existing setOfflineMode API', () => {\n      // Test original programmatic API still works\n      expect(isOfflineMode()).toBe(false);\n      \n      setOfflineMode(true);\n      expect(isOfflineMode()).toBe(true);\n      \n      setOfflineMode(false);\n      expect(isOfflineMode()).toBe(false);\n    });\n    \n    test('works correctly with existing clearOfflineCache function', () => {\n      setOfflineMode(true);\n      getAxios(); // Load into cache\n      \n      // Original cache clearing should still work\n      expect(() => {\n        clearOfflineCache();\n      }).not.toThrow();\n    });\n  });\n});"],"mappings":"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","ignoreList":[]}