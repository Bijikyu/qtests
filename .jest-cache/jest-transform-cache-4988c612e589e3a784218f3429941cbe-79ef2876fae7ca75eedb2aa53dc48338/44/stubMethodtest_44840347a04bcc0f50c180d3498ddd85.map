{"version":3,"names":["stubMethod","require","runTestSuite","createAssertions","assert","tests","obj","greet","name","restore","result","equal","throws","proto","Object","create","falsy","prototype","hasOwnProperty","call","main","module","results","process","exit","failed"],"sources":["stubMethod.test.js"],"sourcesContent":["// qtests dogfooding - using qtests to test itself instead of Jest\nconst stubMethod = require('../utils/stubMethod');\nconst { runTestSuite, createAssertions } = require('../utils/runTestSuite');\n\nconst assert = createAssertions();\n\n// Convert Jest tests to qtests format\nconst tests = [\n  ['stubMethod replaces and restores methods', () => {\n    const obj = { greet: name => `Hello, ${name}` };\n    const restore = stubMethod(obj, 'greet', () => 'Hi');\n    const result = obj.greet('Bob');\n    restore();\n    assert.equal(result, 'Hi', 'Stub should return stubbed value');\n    assert.equal(obj.greet('Bob'), 'Hello, Bob', 'Original method should be restored');\n  }],\n\n  ['stubMethod throws for non-object target', () => {\n    assert.throws(\n      () => stubMethod(null, 'greet', () => {}),\n      'Should throw for null target'\n    );\n  }],\n\n  ['stubMethod throws when method missing', () => {\n    assert.throws(\n      () => stubMethod({}, 'missing', () => {}),\n      'Should throw for missing method'\n    );\n  }],\n\n  ['stubMethod throws for non-function stub', () => {\n    const obj = { greet: () => 'hi' };\n    assert.throws(\n      () => stubMethod(obj, 'greet', 'notFn'),\n      'Should throw for non-function stub'\n    );\n  }],\n\n  ['stubMethod handles inherited methods', () => {\n    const proto = { greet: () => 'proto' };\n    const obj = Object.create(proto);\n    const restore = stubMethod(obj, 'greet', () => 'stub');\n    assert.equal(obj.greet(), 'stub', 'Stub should work on inherited method');\n    restore();\n    assert.falsy(\n      Object.prototype.hasOwnProperty.call(obj, 'greet'),\n      'Own property should be removed after restore'\n    );\n    assert.equal(obj.greet(), 'proto', 'Inherited method should be available again');\n  }]\n];\n\n// Run tests using qtests instead of Jest\nif (require.main === module) {\n  const results = runTestSuite('stubMethod', tests);\n  process.exit(results.failed > 0 ? 1 : 0);\n}\n"],"mappings":"AAAA;AACA,MAAMA,UAAU,GAAGC,OAAO,CAAC,qBAAqB,CAAC;AACjD,MAAM;EAAEC,YAAY;EAAEC;AAAiB,CAAC,GAAGF,OAAO,CAAC,uBAAuB,CAAC;AAE3E,MAAMG,MAAM,GAAGD,gBAAgB,CAAC,CAAC;;AAEjC;AACA,MAAME,KAAK,GAAG,CACZ,CAAC,0CAA0C,EAAE,MAAM;EACjD,MAAMC,GAAG,GAAG;IAAEC,KAAK,EAAEC,IAAI,IAAI,UAAUA,IAAI;EAAG,CAAC;EAC/C,MAAMC,OAAO,GAAGT,UAAU,CAACM,GAAG,EAAE,OAAO,EAAE,MAAM,IAAI,CAAC;EACpD,MAAMI,MAAM,GAAGJ,GAAG,CAACC,KAAK,CAAC,KAAK,CAAC;EAC/BE,OAAO,CAAC,CAAC;EACTL,MAAM,CAACO,KAAK,CAACD,MAAM,EAAE,IAAI,EAAE,kCAAkC,CAAC;EAC9DN,MAAM,CAACO,KAAK,CAACL,GAAG,CAACC,KAAK,CAAC,KAAK,CAAC,EAAE,YAAY,EAAE,oCAAoC,CAAC;AACpF,CAAC,CAAC,EAEF,CAAC,yCAAyC,EAAE,MAAM;EAChDH,MAAM,CAACQ,MAAM,CACX,MAAMZ,UAAU,CAAC,IAAI,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC,CAAC,EACzC,8BACF,CAAC;AACH,CAAC,CAAC,EAEF,CAAC,uCAAuC,EAAE,MAAM;EAC9CI,MAAM,CAACQ,MAAM,CACX,MAAMZ,UAAU,CAAC,CAAC,CAAC,EAAE,SAAS,EAAE,MAAM,CAAC,CAAC,CAAC,EACzC,iCACF,CAAC;AACH,CAAC,CAAC,EAEF,CAAC,yCAAyC,EAAE,MAAM;EAChD,MAAMM,GAAG,GAAG;IAAEC,KAAK,EAAEA,CAAA,KAAM;EAAK,CAAC;EACjCH,MAAM,CAACQ,MAAM,CACX,MAAMZ,UAAU,CAACM,GAAG,EAAE,OAAO,EAAE,OAAO,CAAC,EACvC,oCACF,CAAC;AACH,CAAC,CAAC,EAEF,CAAC,sCAAsC,EAAE,MAAM;EAC7C,MAAMO,KAAK,GAAG;IAAEN,KAAK,EAAEA,CAAA,KAAM;EAAQ,CAAC;EACtC,MAAMD,GAAG,GAAGQ,MAAM,CAACC,MAAM,CAACF,KAAK,CAAC;EAChC,MAAMJ,OAAO,GAAGT,UAAU,CAACM,GAAG,EAAE,OAAO,EAAE,MAAM,MAAM,CAAC;EACtDF,MAAM,CAACO,KAAK,CAACL,GAAG,CAACC,KAAK,CAAC,CAAC,EAAE,MAAM,EAAE,sCAAsC,CAAC;EACzEE,OAAO,CAAC,CAAC;EACTL,MAAM,CAACY,KAAK,CACVF,MAAM,CAACG,SAAS,CAACC,cAAc,CAACC,IAAI,CAACb,GAAG,EAAE,OAAO,CAAC,EAClD,8CACF,CAAC;EACDF,MAAM,CAACO,KAAK,CAACL,GAAG,CAACC,KAAK,CAAC,CAAC,EAAE,OAAO,EAAE,4CAA4C,CAAC;AAClF,CAAC,CAAC,CACH;;AAED;AACA,IAAIN,OAAO,CAACmB,IAAI,KAAKC,MAAM,EAAE;EAC3B,MAAMC,OAAO,GAAGpB,YAAY,CAAC,YAAY,EAAEG,KAAK,CAAC;EACjDkB,OAAO,CAACC,IAAI,CAACF,OAAO,CAACG,MAAM,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AAC1C","ignoreList":[]}