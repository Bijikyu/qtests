{"file":"/home/runner/workspace/stubs/winston.ts","mappings":"AAAA;;;;;;GAMG;AAkCH,MAAM,IAAI,GAAG,GAAG,EAAE,GAAE,CAAC,CAAC,CAAC,6CAA6C;AAEpE,MAAM,WAAW,GAAgB;IAC/B;;OAEG;IACH,YAAY,EAAE,GAAe,EAAE,CAAC,CAAC;QAC/B,KAAK,EAAE,IAAI,EAAI,wCAAwC;QACvD,IAAI,EAAE,IAAI,EAAK,0CAA0C;QACzD,IAAI,EAAE,IAAI,EAAK,uCAAuC;QACtD,KAAK,EAAE,IAAI,EAAI,wCAAwC;QACvD,OAAO,EAAE,IAAI,EAAE,0CAA0C;QACzD,KAAK,EAAE,IAAI,CAAI,wCAAwC;KACxD,CAAC;IAEF;;OAEG;IACH,MAAM,EAAE;QACN,QAAQ,EAAE,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC;QACpB,OAAO,EAAE,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC;QACnB,KAAK,EAAE,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC;QACjB,SAAS,EAAE,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC;QACrB,MAAM,EAAE,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC;QAClB,IAAI,EAAE,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC;QAChB,MAAM,EAAE,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC;KACnB;IAED;;OAEG;IACH,UAAU,EAAE;QACV,OAAO,EAAE,MAAM,oBAAoB;YACjC;gBACE,oBAAoB;YACtB,CAAC;SACF;QACD,IAAI,EAAE,MAAM,iBAAiB;YAC3B;gBACE,oBAAoB;YACtB,CAAC;SACF;KACF;IAED;;OAEG;IACH,SAAS,EAAE,IAAI;IAEf;;OAEG;IACH,OAAO,EAAE;QACP,GAAG,EAAE,IAAI;QACT,GAAG,EAAE,GAAe,EAAE,CAAC,CAAC;YACtB,KAAK,EAAE,IAAI;YACX,IAAI,EAAE,IAAI;YACV,IAAI,EAAE,IAAI;YACV,KAAK,EAAE,IAAI;YACX,OAAO,EAAE,IAAI;YACb,KAAK,EAAE,IAAI;SACZ,CAAC;KACH;CACF,CAAC;AAEF,6CAA6C;AAC7C,eAAe,WAAW,CAAC","names":[],"sources":["/home/runner/workspace/stubs/winston.ts"],"sourcesContent":["/**\n * Winston Logging Library Stub for Testing - TypeScript Implementation\n * \n * This module provides a complete no-op replacement for the winston logging\n * library. When tests require('winston') after qtests/setup, they get this\n * stub instead of real winston, preventing log output during test execution.\n */\n\n// Type definitions for winston stub\ninterface LoggerStub {\n  error: (...args: any[]) => void;\n  warn: (...args: any[]) => void;\n  info: (...args: any[]) => void;\n  debug: (...args: any[]) => void;\n  verbose: (...args: any[]) => void;\n  silly: (...args: any[]) => void;\n}\n\ninterface WinstonStub {\n  createLogger: (options?: any) => LoggerStub;\n  format: {\n    colorize: (...args: any[]) => any;\n    combine: (...args: any[]) => any;\n    label: (...args: any[]) => any;\n    timestamp: (...args: any[]) => any;\n    printf: (...args: any[]) => any;\n    json: (...args: any[]) => any;\n    simple: (...args: any[]) => any;\n  };\n  transports: {\n    Console: new (...args: any[]) => any;\n    File: new (...args: any[]) => any;\n  };\n  addColors: (...args: any[]) => void;\n  loggers: {\n    add: (...args: any[]) => void;\n    get: (...args: any[]) => LoggerStub;\n  };\n}\n\nconst noop = () => {}; // shared no-op function for all stub methods\n\nconst winstonStub: WinstonStub = {\n  /**\n   * Creates a no-op logger instance\n   */\n  createLogger: (): LoggerStub => ({\n    error: noop,   // Silent - no error output during tests\n    warn: noop,    // Silent - no warning output during tests\n    info: noop,    // Silent - no info output during tests\n    debug: noop,   // Silent - no debug output during tests\n    verbose: noop, // Silent - no verbose output during tests\n    silly: noop    // Silent - no silly output during tests\n  }),\n\n  /**\n   * Winston format utilities stub\n   */\n  format: {\n    colorize: () => ({}),\n    combine: () => ({}),\n    label: () => ({}),\n    timestamp: () => ({}),\n    printf: () => ({}),\n    json: () => ({}),\n    simple: () => ({})\n  },\n\n  /**\n   * Winston transport stubs\n   */\n  transports: {\n    Console: class ConsoleTransportStub {\n      constructor() {\n        // No-op constructor\n      }\n    },\n    File: class FileTransportStub {\n      constructor() {\n        // No-op constructor\n      }\n    }\n  },\n\n  /**\n   * Color configuration stub\n   */\n  addColors: noop,\n\n  /**\n   * Logger container stub\n   */\n  loggers: {\n    add: noop,\n    get: (): LoggerStub => ({\n      error: noop,\n      warn: noop,\n      info: noop,\n      debug: noop,\n      verbose: noop,\n      silly: noop\n    })\n  }\n};\n\n// Export winston stub using ES module syntax\nexport default winstonStub;"],"version":3}