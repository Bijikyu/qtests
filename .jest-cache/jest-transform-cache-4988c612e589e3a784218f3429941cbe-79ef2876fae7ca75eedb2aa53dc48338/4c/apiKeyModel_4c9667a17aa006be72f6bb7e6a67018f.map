{"file":"/home/runner/workspace/utils/models/apiKeyModel.ts","mappings":"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","names":[],"sources":["/home/runner/workspace/utils/models/apiKeyModel.ts"],"sourcesContent":["/**\n * API Key Model - TypeScript Implementation\n * \n * This class focuses solely on API key model functionality and behavior.\n * It extends BaseMockModel with API key-specific methods and properties.\n */\n\nimport { BaseMockModel } from './baseMockModel.js';\n\n// Type definitions\ninterface ApiKeyData {\n  _id?: string;\n  key?: string;\n  name?: string;\n  userId?: string;\n  isActive?: boolean;\n  createdAt?: Date;\n  [key: string]: any;\n}\n\ninterface QueryChain {\n  data: any[];\n  sort: () => QueryChain;\n  lean: () => Promise<any[]>;\n  exec: () => Promise<any[]>;\n}\n\n// Legacy array for backwards compatibility\nconst mockApiKeys: any[] = [];\n\n/**\n * API Key Model Class\n * \n * Provides Mongoose-compatible API key model for testing scenarios.\n * Includes API key-specific validation and methods.\n */\nclass ApiKey extends BaseMockModel {\n  public key?: string;\n  public name?: string;\n  public userId?: string;\n  public isActive?: boolean;\n  public createdAt?: Date;\n\n  constructor(data: ApiKeyData = {}) {\n    super(data);\n    // Set default values specific to ApiKey\n    if (!this.createdAt) this.createdAt = new Date();\n    if (this.isActive === undefined) this.isActive = true;\n  }\n  \n  // Override getCollection to use legacy array for backwards compatibility\n  static getCollection(): any[] {\n    return mockApiKeys;\n  }\n  \n  // Legacy methods for backward compatibility with existing code\n  static findOne(query: { key?: string; [key: string]: any }): Promise<any | null> {\n    console.log(`ApiKey.findOne is running with ${JSON.stringify(query)}`);\n    const result = mockApiKeys.find(k => k.key === query.key) || null;\n    console.log(`ApiKey.findOne is returning ${result ? 'key' : 'null'}`);\n    return Promise.resolve(result);\n  }\n  \n  static findOneAndDelete(query: { key?: string; [key: string]: any }): Promise<any | null> {\n    console.log(`ApiKey.findOneAndDelete is running with ${JSON.stringify(query)}`);\n    const idx = mockApiKeys.findIndex(k => k.key === query.key);\n    if (idx === -1) {\n      console.log(`ApiKey.findOneAndDelete is returning null`);\n      return Promise.resolve(null);\n    }\n    const deleted = mockApiKeys.splice(idx, 1)[0];\n    console.log(`ApiKey.findOneAndDelete is returning deleted key`);\n    return Promise.resolve(deleted);\n  }\n  \n  static findOneAndUpdate(query: { key?: string; [key: string]: any }, update: any): Promise<any | null> {\n    console.log(`ApiKey.findOneAndUpdate is running with query and update`);\n    const key = mockApiKeys.find(k => k.key === query.key);\n    if (!key) {\n      console.log(`ApiKey.findOneAndUpdate is returning null`);\n      return Promise.resolve(null);\n    }\n    Object.assign(key, update);\n    console.log(`ApiKey.findOneAndUpdate is returning updated key`);\n    return Promise.resolve(key);\n  }\n  \n  static find(): QueryChain {\n    console.log(`ApiKey.find is running with none`);\n    const chain: QueryChain = { \n      data: mockApiKeys,\n      sort: () => chain,\n      lean: () => {\n        console.log(`ApiKey.find.lean is returning ${chain.data.length} keys`);\n        return Promise.resolve(chain.data);\n      },\n      exec: () => {\n        console.log(`ApiKey.find.exec is returning ${chain.data.length} keys`);\n        return Promise.resolve(chain.data);\n      }\n    };\n    return chain;\n  }\n}\n\n// Export using ES module syntax\nexport { ApiKey, mockApiKeys };"],"version":3}