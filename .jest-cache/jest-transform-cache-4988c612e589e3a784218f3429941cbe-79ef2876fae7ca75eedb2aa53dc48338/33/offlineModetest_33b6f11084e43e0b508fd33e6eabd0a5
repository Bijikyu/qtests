bc0392e94dc09afa949b1b78662b1703
// Auto-generated unit test for offlineMode.js - optimized for speed
const mod = require('./offlineMode.js');
describe('offlineMode.js', () => {
  test('setOfflineMode works', async () => {
    // Fast assertion - TODO: implement specific test logic
    expect(typeof mod.setOfflineMode).toBeDefined();
  });
  test('isOfflineMode works', async () => {
    // Fast assertion - TODO: implement specific test logic
    expect(typeof mod.isOfflineMode).toBeDefined();
  });
  test('getAxios works', async () => {
    // Fast assertion - TODO: implement specific test logic
    expect(typeof mod.getAxios).toBeDefined();
  });
  test('getQerrors works', async () => {
    // Fast assertion - TODO: implement specific test logic
    expect(typeof mod.getQerrors).toBeDefined();
  });
  test('getEnvironmentState works', async () => {
    // Fast assertion - TODO: implement specific test logic
    expect(typeof mod.getEnvironmentState).toBeDefined();
  });
  test('createEnvironmentAdapters works', async () => {
    // Fast assertion - TODO: implement specific test logic
    expect(typeof mod.createEnvironmentAdapters).toBeDefined();
  });
  test('clearOfflineCache works', async () => {
    // Fast assertion - TODO: implement specific test logic
    expect(typeof mod.clearOfflineCache).toBeDefined();
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJtb2QiLCJyZXF1aXJlIiwiZGVzY3JpYmUiLCJ0ZXN0IiwiZXhwZWN0Iiwic2V0T2ZmbGluZU1vZGUiLCJ0b0JlRGVmaW5lZCIsImlzT2ZmbGluZU1vZGUiLCJnZXRBeGlvcyIsImdldFFlcnJvcnMiLCJnZXRFbnZpcm9ubWVudFN0YXRlIiwiY3JlYXRlRW52aXJvbm1lbnRBZGFwdGVycyIsImNsZWFyT2ZmbGluZUNhY2hlIl0sInNvdXJjZXMiOlsib2ZmbGluZU1vZGUudGVzdC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBBdXRvLWdlbmVyYXRlZCB1bml0IHRlc3QgZm9yIG9mZmxpbmVNb2RlLmpzIC0gb3B0aW1pemVkIGZvciBzcGVlZFxuY29uc3QgbW9kID0gcmVxdWlyZSgnLi9vZmZsaW5lTW9kZS5qcycpO1xuXG5kZXNjcmliZSgnb2ZmbGluZU1vZGUuanMnLCAoKSA9PiB7XG4gIHRlc3QoJ3NldE9mZmxpbmVNb2RlIHdvcmtzJywgYXN5bmMgKCkgPT4ge1xuICAgIC8vIEZhc3QgYXNzZXJ0aW9uIC0gVE9ETzogaW1wbGVtZW50IHNwZWNpZmljIHRlc3QgbG9naWNcbiAgICBleHBlY3QodHlwZW9mIG1vZC5zZXRPZmZsaW5lTW9kZSkudG9CZURlZmluZWQoKTtcbiAgfSk7XG4gIHRlc3QoJ2lzT2ZmbGluZU1vZGUgd29ya3MnLCBhc3luYyAoKSA9PiB7XG4gICAgLy8gRmFzdCBhc3NlcnRpb24gLSBUT0RPOiBpbXBsZW1lbnQgc3BlY2lmaWMgdGVzdCBsb2dpY1xuICAgIGV4cGVjdCh0eXBlb2YgbW9kLmlzT2ZmbGluZU1vZGUpLnRvQmVEZWZpbmVkKCk7XG4gIH0pO1xuICB0ZXN0KCdnZXRBeGlvcyB3b3JrcycsIGFzeW5jICgpID0+IHtcbiAgICAvLyBGYXN0IGFzc2VydGlvbiAtIFRPRE86IGltcGxlbWVudCBzcGVjaWZpYyB0ZXN0IGxvZ2ljXG4gICAgZXhwZWN0KHR5cGVvZiBtb2QuZ2V0QXhpb3MpLnRvQmVEZWZpbmVkKCk7XG4gIH0pO1xuICB0ZXN0KCdnZXRRZXJyb3JzIHdvcmtzJywgYXN5bmMgKCkgPT4ge1xuICAgIC8vIEZhc3QgYXNzZXJ0aW9uIC0gVE9ETzogaW1wbGVtZW50IHNwZWNpZmljIHRlc3QgbG9naWNcbiAgICBleHBlY3QodHlwZW9mIG1vZC5nZXRRZXJyb3JzKS50b0JlRGVmaW5lZCgpO1xuICB9KTtcbiAgdGVzdCgnZ2V0RW52aXJvbm1lbnRTdGF0ZSB3b3JrcycsIGFzeW5jICgpID0+IHtcbiAgICAvLyBGYXN0IGFzc2VydGlvbiAtIFRPRE86IGltcGxlbWVudCBzcGVjaWZpYyB0ZXN0IGxvZ2ljXG4gICAgZXhwZWN0KHR5cGVvZiBtb2QuZ2V0RW52aXJvbm1lbnRTdGF0ZSkudG9CZURlZmluZWQoKTtcbiAgfSk7XG4gIHRlc3QoJ2NyZWF0ZUVudmlyb25tZW50QWRhcHRlcnMgd29ya3MnLCBhc3luYyAoKSA9PiB7XG4gICAgLy8gRmFzdCBhc3NlcnRpb24gLSBUT0RPOiBpbXBsZW1lbnQgc3BlY2lmaWMgdGVzdCBsb2dpY1xuICAgIGV4cGVjdCh0eXBlb2YgbW9kLmNyZWF0ZUVudmlyb25tZW50QWRhcHRlcnMpLnRvQmVEZWZpbmVkKCk7XG4gIH0pO1xuICB0ZXN0KCdjbGVhck9mZmxpbmVDYWNoZSB3b3JrcycsIGFzeW5jICgpID0+IHtcbiAgICAvLyBGYXN0IGFzc2VydGlvbiAtIFRPRE86IGltcGxlbWVudCBzcGVjaWZpYyB0ZXN0IGxvZ2ljXG4gICAgZXhwZWN0KHR5cGVvZiBtb2QuY2xlYXJPZmZsaW5lQ2FjaGUpLnRvQmVEZWZpbmVkKCk7XG4gIH0pO1xufSk7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0EsTUFBTUEsR0FBRyxHQUFHQyxPQUFPLENBQUMsa0JBQWtCLENBQUM7QUFFdkNDLFFBQVEsQ0FBQyxnQkFBZ0IsRUFBRSxNQUFNO0VBQy9CQyxJQUFJLENBQUMsc0JBQXNCLEVBQUUsWUFBWTtJQUN2QztJQUNBQyxNQUFNLENBQUMsT0FBT0osR0FBRyxDQUFDSyxjQUFjLENBQUMsQ0FBQ0MsV0FBVyxDQUFDLENBQUM7RUFDakQsQ0FBQyxDQUFDO0VBQ0ZILElBQUksQ0FBQyxxQkFBcUIsRUFBRSxZQUFZO0lBQ3RDO0lBQ0FDLE1BQU0sQ0FBQyxPQUFPSixHQUFHLENBQUNPLGFBQWEsQ0FBQyxDQUFDRCxXQUFXLENBQUMsQ0FBQztFQUNoRCxDQUFDLENBQUM7RUFDRkgsSUFBSSxDQUFDLGdCQUFnQixFQUFFLFlBQVk7SUFDakM7SUFDQUMsTUFBTSxDQUFDLE9BQU9KLEdBQUcsQ0FBQ1EsUUFBUSxDQUFDLENBQUNGLFdBQVcsQ0FBQyxDQUFDO0VBQzNDLENBQUMsQ0FBQztFQUNGSCxJQUFJLENBQUMsa0JBQWtCLEVBQUUsWUFBWTtJQUNuQztJQUNBQyxNQUFNLENBQUMsT0FBT0osR0FBRyxDQUFDUyxVQUFVLENBQUMsQ0FBQ0gsV0FBVyxDQUFDLENBQUM7RUFDN0MsQ0FBQyxDQUFDO0VBQ0ZILElBQUksQ0FBQywyQkFBMkIsRUFBRSxZQUFZO0lBQzVDO0lBQ0FDLE1BQU0sQ0FBQyxPQUFPSixHQUFHLENBQUNVLG1CQUFtQixDQUFDLENBQUNKLFdBQVcsQ0FBQyxDQUFDO0VBQ3RELENBQUMsQ0FBQztFQUNGSCxJQUFJLENBQUMsaUNBQWlDLEVBQUUsWUFBWTtJQUNsRDtJQUNBQyxNQUFNLENBQUMsT0FBT0osR0FBRyxDQUFDVyx5QkFBeUIsQ0FBQyxDQUFDTCxXQUFXLENBQUMsQ0FBQztFQUM1RCxDQUFDLENBQUM7RUFDRkgsSUFBSSxDQUFDLHlCQUF5QixFQUFFLFlBQVk7SUFDMUM7SUFDQUMsTUFBTSxDQUFDLE9BQU9KLEdBQUcsQ0FBQ1ksaUJBQWlCLENBQUMsQ0FBQ04sV0FBVyxDQUFDLENBQUM7RUFDcEQsQ0FBQyxDQUFDO0FBQ0osQ0FBQyxDQUFDIiwiaWdub3JlTGlzdCI6W119