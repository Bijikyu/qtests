{"file":"/home/runner/workspace/lib/envUtils.ts","mappings":";AAAA;;;;;;;;;;;;GAYG;;;AAEH,iEAAiE;AACjE,oDAY6B;AAC7B,4DAQiC;AACjC,4DAWiC;AAEjC,kDAAkD;AAClD,MAAM,OAAO,GAAG;IACd,UAAU,EAAV,uBAAU;IACV,UAAU,EAAV,uBAAU;IACV,OAAO,EAAP,oBAAO;IACP,UAAU,EAAV,uBAAU;IACV,eAAe,EAAf,4BAAe;IACf,cAAc,EAAd,2BAAc;IACd,kBAAkB,EAAlB,+BAAkB;IAClB,iBAAiB,EAAjB,8BAAiB;IACjB,eAAe,EAAf,4BAAe;IACf,UAAU,EAAV,uBAAU;IACV,cAAc,EAAd,2BAAc;CACf,CAAC;AA6BA,0BAAO;AA3BT,sDAAsD;AACtD,MAAM,WAAW,GAAG;IAClB,cAAc,EAAd,+BAAc;IACd,aAAa,EAAb,8BAAa;IACb,QAAQ,EAAR,yBAAQ;IACR,UAAU,EAAV,2BAAU;IACV,mBAAmB,EAAnB,oCAAmB;IACnB,yBAAyB,EAAzB,0CAAyB;IACzB,iBAAiB,EAAjB,kCAAiB;CAClB,CAAC;AAmBA,kCAAW;AAjBb,sDAAsD;AACtD,MAAM,WAAW,GAAG;IAClB,MAAM,EAAN,uBAAM;IACN,gBAAgB,EAAhB,iCAAgB;IAChB,WAAW,EAAX,4BAAW;IACX,eAAe,EAAf,gCAAe;IACf,aAAa,EAAb,8BAAa;IACb,SAAS,EAAT,0BAAS;IACT,aAAa,EAAb,8BAAa;IACb,cAAc,EAAd,+BAAc;IACd,YAAY,EAAZ,6BAAY;IACZ,WAAW,EAAX,4BAAW;CACZ,CAAC;AAMA,kCAAW","names":[],"sources":["/home/runner/workspace/lib/envUtils.ts"],"sourcesContent":["/**\n * Environment Management Utilities - TypeScript ES Module Implementation\n * \n * This module provides utilities specifically for managing test environments,\n * including environment variable manipulation and test isolation. These utilities\n * help create isolated, predictable test environments without side effects.\n * \n * Design philosophy:\n * - Environment isolation to prevent test interference\n * - Predictable test conditions with known values\n * - Easy setup and teardown of test environments\n * - Simple, focused functionality for environment management\n */\n\n// Import environment management utilities using ES module syntax\nimport {\n  defaultEnv,\n  setTestEnv,\n  saveEnv,\n  restoreEnv,\n  attachMockSpies,\n  makeLoggedMock,\n  createScheduleMock,\n  createQerrorsMock,\n  createAxiosMock,\n  resetMocks,\n  initSearchTest\n} from '../utils/testEnv.js';\nimport { \n  setOfflineMode,\n  isOfflineMode,\n  getAxios,\n  getQerrors,\n  getEnvironmentState,\n  createEnvironmentAdapters,\n  clearOfflineCache\n} from '../utils/offlineMode.js';\nimport {\n  reload,\n  moduleReloadLock,\n  stubQerrors,\n  withMockConsole,\n  createJsonRes,\n  createRes,\n  backupEnvVars,\n  restoreEnvVars,\n  withSavedEnv,\n  generateKey\n} from '../utils/testHelpers.js';\n\n// Create testEnv object from individual functions\nconst testEnv = {\n  defaultEnv,\n  setTestEnv,\n  saveEnv,\n  restoreEnv,\n  attachMockSpies,\n  makeLoggedMock,\n  createScheduleMock,\n  createQerrorsMock,\n  createAxiosMock,\n  resetMocks,\n  initSearchTest\n};\n\n// Create offlineMode object from individual functions\nconst offlineMode = {\n  setOfflineMode,\n  isOfflineMode,\n  getAxios,\n  getQerrors,\n  getEnvironmentState,\n  createEnvironmentAdapters,\n  clearOfflineCache\n};\n\n// Create testHelpers object from individual functions\nconst testHelpers = {\n  reload,\n  moduleReloadLock,\n  stubQerrors,\n  withMockConsole,\n  createJsonRes,\n  createRes,\n  backupEnvVars,\n  restoreEnvVars,\n  withSavedEnv,\n  generateKey\n};\n\n// Export the core utilities that our TypeScript index needs\nexport {\n  testEnv,     // environment variable management and test isolation\n  offlineMode, // offline/online mode utility with automatic switching\n  testHelpers  // advanced testing utilities for module reloading and mocking\n};"],"version":3}