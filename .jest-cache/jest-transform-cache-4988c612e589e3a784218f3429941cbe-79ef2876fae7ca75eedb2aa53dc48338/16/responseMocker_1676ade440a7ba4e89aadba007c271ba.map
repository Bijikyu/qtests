{"version":3,"names":["createJsonRes","console","log","jsonSpy","jest","fn","calls","args","push","mock","json","err","message","createRes","responseMock","status","mockImplementation","code","statusCode","mockReturnThis","send","end","statusCalls","jsonCalls","sendCalls","endCalls","length","module","exports"],"sources":["responseMocker.js"],"sourcesContent":["/**\n * Response Object Mocking Utility\n * \n * This module provides utilities for creating mock Express-style response objects\n * for API testing. It focuses solely on response object creation and management.\n */\n\n/**\n * Create minimal response object with json spy for API testing\n * \n * This function creates a minimal Express-style response object with a\n * spied json method, enabling verification of API response behavior.\n * \n * @returns {Object} Mock response object with spied json method\n */\nfunction createJsonRes() {\n  console.log(`createJsonRes is running with none`);\n  \n  try {\n    let jsonSpy;\n    \n    // Check if Jest is available for superior spy functionality\n    if (typeof jest !== 'undefined' && jest.fn) {\n      jsonSpy = jest.fn();\n    } else {\n      // Create manual spy implementation for non-Jest environments\n      const calls = [];\n      \n      jsonSpy = function(...args) {\n        calls.push(args);\n      };\n      \n      // Add Jest-compatible mock property for consistent API\n      jsonSpy.mock = { calls: calls };\n    }\n    \n    console.log(`createJsonRes is returning response object`);\n    return { json: jsonSpy };\n    \n  } catch (err) {\n    console.log(`createJsonRes error ${err.message}`);\n    throw err;\n  }\n}\n\n/**\n * Create comprehensive Express-style response mock for integration testing\n * \n * This function creates a more complete Express-style response object\n * suitable for comprehensive API testing scenarios.\n * \n * @returns {Object} Comprehensive response mock with multiple spied methods\n */\nfunction createRes() {\n  console.log(`createRes is running with none`);\n  \n  try {\n    let responseMock;\n    \n    // Check for Jest availability\n    if (typeof jest !== 'undefined' && jest.fn) {\n      // Create Jest-based response mock with spied methods\n      responseMock = {\n        status: jest.fn().mockImplementation(function(code) {\n          this.statusCode = code;\n          return this;\n        }),\n        json: jest.fn().mockReturnThis(),\n        send: jest.fn().mockReturnThis(),\n        end: jest.fn().mockReturnThis()\n      };\n    } else {\n      // Create manual implementation for non-Jest environments\n      const statusCalls = [];\n      const jsonCalls = [];\n      const sendCalls = [];\n      const endCalls = [];\n      \n      responseMock = {\n        status: function(...args) {\n          statusCalls.push(args);\n          if (args.length > 0) {\n            this.statusCode = args[0];\n          }\n          return this;\n        },\n        json: function(...args) {\n          jsonCalls.push(args);\n          return this;\n        },\n        send: function(...args) {\n          sendCalls.push(args);\n          return this;\n        },\n        end: function(...args) {\n          endCalls.push(args);\n          return this;\n        }\n      };\n      \n      // Add Jest-compatible mock properties\n      responseMock.status.mock = { calls: statusCalls };\n      responseMock.json.mock = { calls: jsonCalls };\n      responseMock.send.mock = { calls: sendCalls };\n      responseMock.end.mock = { calls: endCalls };\n    }\n    \n    console.log(`createRes is returning response object`);\n    return responseMock;\n    \n  } catch (err) {\n    console.log(`createRes error ${err.message}`);\n    throw err;\n  }\n}\n\nmodule.exports = {\n  createJsonRes,\n  createRes\n};"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,aAAaA,CAAA,EAAG;EACvBC,OAAO,CAACC,GAAG,CAAC,oCAAoC,CAAC;EAEjD,IAAI;IACF,IAAIC,OAAO;;IAEX;IACA,IAAI,OAAOC,IAAI,KAAK,WAAW,IAAIA,IAAI,CAACC,EAAE,EAAE;MAC1CF,OAAO,GAAGC,IAAI,CAACC,EAAE,CAAC,CAAC;IACrB,CAAC,MAAM;MACL;MACA,MAAMC,KAAK,GAAG,EAAE;MAEhBH,OAAO,GAAG,SAAAA,CAAS,GAAGI,IAAI,EAAE;QAC1BD,KAAK,CAACE,IAAI,CAACD,IAAI,CAAC;MAClB,CAAC;;MAED;MACAJ,OAAO,CAACM,IAAI,GAAG;QAAEH,KAAK,EAAEA;MAAM,CAAC;IACjC;IAEAL,OAAO,CAACC,GAAG,CAAC,4CAA4C,CAAC;IACzD,OAAO;MAAEQ,IAAI,EAAEP;IAAQ,CAAC;EAE1B,CAAC,CAAC,OAAOQ,GAAG,EAAE;IACZV,OAAO,CAACC,GAAG,CAAC,uBAAuBS,GAAG,CAACC,OAAO,EAAE,CAAC;IACjD,MAAMD,GAAG;EACX;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASE,SAASA,CAAA,EAAG;EACnBZ,OAAO,CAACC,GAAG,CAAC,gCAAgC,CAAC;EAE7C,IAAI;IACF,IAAIY,YAAY;;IAEhB;IACA,IAAI,OAAOV,IAAI,KAAK,WAAW,IAAIA,IAAI,CAACC,EAAE,EAAE;MAC1C;MACAS,YAAY,GAAG;QACbC,MAAM,EAAEX,IAAI,CAACC,EAAE,CAAC,CAAC,CAACW,kBAAkB,CAAC,UAASC,IAAI,EAAE;UAClD,IAAI,CAACC,UAAU,GAAGD,IAAI;UACtB,OAAO,IAAI;QACb,CAAC,CAAC;QACFP,IAAI,EAAEN,IAAI,CAACC,EAAE,CAAC,CAAC,CAACc,cAAc,CAAC,CAAC;QAChCC,IAAI,EAAEhB,IAAI,CAACC,EAAE,CAAC,CAAC,CAACc,cAAc,CAAC,CAAC;QAChCE,GAAG,EAAEjB,IAAI,CAACC,EAAE,CAAC,CAAC,CAACc,cAAc,CAAC;MAChC,CAAC;IACH,CAAC,MAAM;MACL;MACA,MAAMG,WAAW,GAAG,EAAE;MACtB,MAAMC,SAAS,GAAG,EAAE;MACpB,MAAMC,SAAS,GAAG,EAAE;MACpB,MAAMC,QAAQ,GAAG,EAAE;MAEnBX,YAAY,GAAG;QACbC,MAAM,EAAE,SAAAA,CAAS,GAAGR,IAAI,EAAE;UACxBe,WAAW,CAACd,IAAI,CAACD,IAAI,CAAC;UACtB,IAAIA,IAAI,CAACmB,MAAM,GAAG,CAAC,EAAE;YACnB,IAAI,CAACR,UAAU,GAAGX,IAAI,CAAC,CAAC,CAAC;UAC3B;UACA,OAAO,IAAI;QACb,CAAC;QACDG,IAAI,EAAE,SAAAA,CAAS,GAAGH,IAAI,EAAE;UACtBgB,SAAS,CAACf,IAAI,CAACD,IAAI,CAAC;UACpB,OAAO,IAAI;QACb,CAAC;QACDa,IAAI,EAAE,SAAAA,CAAS,GAAGb,IAAI,EAAE;UACtBiB,SAAS,CAAChB,IAAI,CAACD,IAAI,CAAC;UACpB,OAAO,IAAI;QACb,CAAC;QACDc,GAAG,EAAE,SAAAA,CAAS,GAAGd,IAAI,EAAE;UACrBkB,QAAQ,CAACjB,IAAI,CAACD,IAAI,CAAC;UACnB,OAAO,IAAI;QACb;MACF,CAAC;;MAED;MACAO,YAAY,CAACC,MAAM,CAACN,IAAI,GAAG;QAAEH,KAAK,EAAEgB;MAAY,CAAC;MACjDR,YAAY,CAACJ,IAAI,CAACD,IAAI,GAAG;QAAEH,KAAK,EAAEiB;MAAU,CAAC;MAC7CT,YAAY,CAACM,IAAI,CAACX,IAAI,GAAG;QAAEH,KAAK,EAAEkB;MAAU,CAAC;MAC7CV,YAAY,CAACO,GAAG,CAACZ,IAAI,GAAG;QAAEH,KAAK,EAAEmB;MAAS,CAAC;IAC7C;IAEAxB,OAAO,CAACC,GAAG,CAAC,wCAAwC,CAAC;IACrD,OAAOY,YAAY;EAErB,CAAC,CAAC,OAAOH,GAAG,EAAE;IACZV,OAAO,CAACC,GAAG,CAAC,mBAAmBS,GAAG,CAACC,OAAO,EAAE,CAAC;IAC7C,MAAMD,GAAG;EACX;AACF;AAEAgB,MAAM,CAACC,OAAO,GAAG;EACf5B,aAAa;EACba;AACF,CAAC","ignoreList":[]}