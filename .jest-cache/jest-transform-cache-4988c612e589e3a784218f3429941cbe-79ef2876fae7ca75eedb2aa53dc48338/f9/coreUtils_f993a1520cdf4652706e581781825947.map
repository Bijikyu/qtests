{"version":3,"names":["stubMethod","require","mockConsole","module","exports"],"sources":["coreUtils.js"],"sourcesContent":["\n/**\n * Core Testing Utilities\n * \n * This module provides the fundamental testing utilities that form the backbone\n * of the qtests framework. These utilities are used across different testing\n * scenarios and provide basic functionality for method stubbing and console mocking.\n * \n * Design philosophy:\n * - Simple, focused utilities that do one thing well\n * - Minimal dependencies to avoid circular imports\n * - Framework-agnostic implementations\n * - Consistent API patterns across utilities\n * \n * Architecture rationale:\n * This module serves as the foundation layer because:\n * 1. These utilities have no dependencies on other qtests modules\n * 2. They provide primitive operations that other modules build upon\n * 3. Keeping them separate prevents circular dependency issues\n * 4. They can be used independently without importing the full qtests suite\n */\n\n// Import the core stubMethod utility from utils directory\n// Placed in utils/ rather than lib/ because it's a pure utility function\n// with zero dependencies on qtests-specific architecture or other modules\n// This separation enables independent use and prevents circular dependencies\nconst stubMethod = require('../utils/stubMethod');\n\n// Import mockConsole from its dedicated utility module using destructuring\n// Destructuring extracts only mockConsole from module exports for clean imports\n// This pattern allows the mockConsole module to export additional utilities in future\n// while maintaining backward compatibility and explicit import declarations\nconst { mockConsole } = require('../utils/mockConsole');\n\n/**\n * Export core testing utilities\n * \n * These are the most commonly used utilities in the qtests framework.\n * They are exported at the top level because:\n * 1. stubMethod and mockConsole are used in 80% of testing scenarios\n * 2. They have simple, predictable APIs that don't require namespacing\n * 3. They form the foundation that other utilities build upon\n * 4. Frequent usage justifies top-level access for developer convenience\n * \n * Export strategy:\n * - Direct object export rather than individual exports for consistency\n * - Descriptive property names that clearly indicate purpose\n * - Comments explain the primary use case for each utility\n */\n// Export core testing utilities using object shorthand syntax\n// Object export pattern chosen over individual exports for several reasons:\n// 1. Provides clear namespace organization for related utilities\n// 2. Enables easier destructuring imports in consuming code\n// 3. Maintains consistent export pattern across all qtests modules\n// 4. Allows for future expansion without breaking existing imports\nmodule.exports = {\n  stubMethod,   // Method replacement utility for isolating dependencies during testing\n  mockConsole   // Console output capture utility for testing logging behavior without pollution\n};\n"],"mappings":"AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAMA,UAAU,GAAGC,OAAO,CAAC,qBAAqB,CAAC;;AAEjD;AACA;AACA;AACA;AACA,MAAM;EAAEC;AAAY,CAAC,GAAGD,OAAO,CAAC,sBAAsB,CAAC;;AAEvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAE,MAAM,CAACC,OAAO,GAAG;EACfJ,UAAU;EAAI;EACdE,WAAW,CAAG;AAChB,CAAC","ignoreList":[]}