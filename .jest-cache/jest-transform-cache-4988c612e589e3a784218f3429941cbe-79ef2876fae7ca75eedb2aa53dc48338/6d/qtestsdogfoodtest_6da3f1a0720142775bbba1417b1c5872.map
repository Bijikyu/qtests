{"version":3,"names":["runTestSuite","createAssertions","require","mockConsole","setTestEnv","saveEnv","restoreEnv","stubMethod","describe","assert","mockConsoleTests","spy","console","log","truthy","mock","calls","length","some","call","arg","String","includes","mockRestore","originalLog","equal","testEnvTests","process","env","TEST_VAR","saved","GOOGLE_API_KEY","OPENAI_TOKEN","stubMethodTests","obj","add","a","b","restore","throws","it","results","expect","failed","toBe"],"sources":["qtests-dogfood.test.js"],"sourcesContent":["// qtests dogfooding demonstration - using qtests to test qtests utilities\n// This shows qtests can replace Jest for most testing scenarios\n\nconst { runTestSuite, createAssertions } = require('../utils/runTestSuite');\nconst { mockConsole } = require('../utils/mockConsole');\nconst { setTestEnv, saveEnv, restoreEnv } = require('../utils/testEnv');\nconst stubMethod = require('../utils/stubMethod');\n\n// Convert to Jest format for proper test discovery\ndescribe('qtests Dogfooding Tests', () => {\n\nconst assert = createAssertions();\n\n// Test qtests mockConsole utility\nconst mockConsoleTests = [\n  ['mockConsole captures calls', () => {\n    const spy = mockConsole('log');\n    console.log('captured message');\n    assert.truthy(spy.mock.calls.length > 0, 'Should capture console calls');\n    assert.truthy(spy.mock.calls.some(call => \n      call.some(arg => String(arg).includes('captured message'))\n    ), 'Should capture message content');\n    spy.mockRestore();\n  }],\n\n  ['mockConsole restores console', () => {\n    const originalLog = console.log;\n    const spy = mockConsole('log');\n    spy.mockRestore();\n    assert.equal(console.log, originalLog, 'Should restore original console.log');\n  }]\n];\n\n// Test qtests testEnv utility  \nconst testEnvTests = [\n  ['testEnv saves and restores environment', () => {\n    process.env.TEST_VAR = 'original';\n    const saved = saveEnv();\n    process.env.TEST_VAR = 'modified';\n    assert.equal(process.env.TEST_VAR, 'modified', 'Should set test environment');\n    restoreEnv(saved);\n    assert.equal(process.env.TEST_VAR, 'original', 'Should restore original environment');\n  }],\n\n  ['testEnv sets standard environment', () => {\n    const saved = saveEnv();\n    setTestEnv();\n    assert.truthy(process.env.GOOGLE_API_KEY, 'Should set GOOGLE_API_KEY');\n    assert.truthy(process.env.OPENAI_TOKEN, 'Should set OPENAI_TOKEN');\n    restoreEnv(saved);\n  }]\n];\n\n// Test qtests stubMethod utility\nconst stubMethodTests = [\n  ['stubMethod creates working stubs', () => {\n    const obj = { add: (a, b) => a + b };\n    const restore = stubMethod(obj, 'add', () => 100);\n    assert.equal(obj.add(2, 3), 100, 'Stubbed method should return stub value');\n    restore();\n    assert.equal(obj.add(2, 3), 5, 'Restored method should work normally');\n  }],\n\n  ['stubMethod error handling', () => {\n    assert.throws(() => stubMethod(null, 'method', () => {}), 'Should throw for null object');\n    assert.throws(() => stubMethod({}, 'missing', () => {}), 'Should throw for missing method');\n  }]\n];\n\n  it('should run mockConsole tests', () => {\n    const results = runTestSuite('mockConsole Tests', mockConsoleTests);\n    expect(results.failed).toBe(0);\n  });\n\n  it('should run testEnv tests', () => {\n    const results = runTestSuite('testEnv Tests', testEnvTests);\n    expect(results.failed).toBe(0);\n  });\n\n  it('should run stubMethod tests', () => {\n    const results = runTestSuite('stubMethod Tests', stubMethodTests);\n    expect(results.failed).toBe(0);\n  });\n});"],"mappings":"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","ignoreList":[]}