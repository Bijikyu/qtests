bcb304a2cfd02f6718710e146aced085
"use strict";
/**
 * HTTP Testing Utilities
 *
 * This module provides utilities for HTTP client mocking, integration testing,
 * and network simulation. These utilities help test applications that make
 * HTTP requests without requiring actual network connectivity.
 *
 * Design philosophy:
 * - Network-free testing for reliable, fast tests
 * - Configurable mock behavior for different scenarios
 * - Integration testing support without external dependencies
 * - Offline mode simulation for robust testing
 *
 * Why HTTP utilities are grouped together:
 * 1. All utilities deal with HTTP/network interactions
 * 2. They share common patterns for request/response mocking
 * 3. Often used together in integration testing scenarios
 * 4. Provide complementary functionality for comprehensive HTTP testing
 *
 * Module organization rationale:
 * These utilities are grouped because they all serve the purpose of
 * testing HTTP-dependent code without actual network calls, providing
 * different levels of abstraction and configuration options.
 */
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.offlineMode = exports.httpTest = exports.mockAxios = void 0;
// Import mockAxios factory for creating configurable HTTP client mocks
// mockAxios provides enhanced mock HTTP clients with customizable behavior
// for comprehensive offline testing and HTTP simulation scenarios
const mockAxios_js_1 = __importDefault(require("../utils/mockAxios.js"));
exports.mockAxios = mockAxios_js_1.default;
// Import httpTest utilities for lightweight integration testing
// httpTest provides supertest-like functionality without external dependencies
// for testing HTTP endpoints and applications in Node.js core
const httpTest_js_1 = __importDefault(require("../utils/httpTest.js"));
exports.httpTest = httpTest_js_1.default;
// Import offlineMode utility for network-free testing
// offlineMode automatically switches between real and stub implementations
// based on whether the test should simulate offline conditions
const offlineMode_js_1 = __importDefault(require("../utils/offlineMode.js"));
exports.offlineMode = offlineMode_js_1.default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiL2hvbWUvcnVubmVyL3dvcmtzcGFjZS9saWIvaHR0cFV0aWxzLnRzIiwibWFwcGluZ3MiOiI7QUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7R0F1Qkc7Ozs7OztBQUVILHVFQUF1RTtBQUN2RSwyRUFBMkU7QUFDM0Usa0VBQWtFO0FBQ2xFLHlFQUE4QztBQTZCNUMsb0JBN0JLLHNCQUFTLENBNkJMO0FBM0JYLGdFQUFnRTtBQUNoRSwrRUFBK0U7QUFDL0UsOERBQThEO0FBQzlELHVFQUE0QztBQTJCMUMsbUJBM0JLLHFCQUFRLENBMkJMO0FBekJWLHNEQUFzRDtBQUN0RCwyRUFBMkU7QUFDM0UsK0RBQStEO0FBQy9ELDZFQUFrRDtBQXlCaEQsc0JBekJLLHdCQUFXLENBeUJMIiwibmFtZXMiOltdLCJzb3VyY2VzIjpbIi9ob21lL3J1bm5lci93b3Jrc3BhY2UvbGliL2h0dHBVdGlscy50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEhUVFAgVGVzdGluZyBVdGlsaXRpZXNcbiAqIFxuICogVGhpcyBtb2R1bGUgcHJvdmlkZXMgdXRpbGl0aWVzIGZvciBIVFRQIGNsaWVudCBtb2NraW5nLCBpbnRlZ3JhdGlvbiB0ZXN0aW5nLFxuICogYW5kIG5ldHdvcmsgc2ltdWxhdGlvbi4gVGhlc2UgdXRpbGl0aWVzIGhlbHAgdGVzdCBhcHBsaWNhdGlvbnMgdGhhdCBtYWtlXG4gKiBIVFRQIHJlcXVlc3RzIHdpdGhvdXQgcmVxdWlyaW5nIGFjdHVhbCBuZXR3b3JrIGNvbm5lY3Rpdml0eS5cbiAqIFxuICogRGVzaWduIHBoaWxvc29waHk6XG4gKiAtIE5ldHdvcmstZnJlZSB0ZXN0aW5nIGZvciByZWxpYWJsZSwgZmFzdCB0ZXN0c1xuICogLSBDb25maWd1cmFibGUgbW9jayBiZWhhdmlvciBmb3IgZGlmZmVyZW50IHNjZW5hcmlvc1xuICogLSBJbnRlZ3JhdGlvbiB0ZXN0aW5nIHN1cHBvcnQgd2l0aG91dCBleHRlcm5hbCBkZXBlbmRlbmNpZXNcbiAqIC0gT2ZmbGluZSBtb2RlIHNpbXVsYXRpb24gZm9yIHJvYnVzdCB0ZXN0aW5nXG4gKiBcbiAqIFdoeSBIVFRQIHV0aWxpdGllcyBhcmUgZ3JvdXBlZCB0b2dldGhlcjpcbiAqIDEuIEFsbCB1dGlsaXRpZXMgZGVhbCB3aXRoIEhUVFAvbmV0d29yayBpbnRlcmFjdGlvbnNcbiAqIDIuIFRoZXkgc2hhcmUgY29tbW9uIHBhdHRlcm5zIGZvciByZXF1ZXN0L3Jlc3BvbnNlIG1vY2tpbmdcbiAqIDMuIE9mdGVuIHVzZWQgdG9nZXRoZXIgaW4gaW50ZWdyYXRpb24gdGVzdGluZyBzY2VuYXJpb3NcbiAqIDQuIFByb3ZpZGUgY29tcGxlbWVudGFyeSBmdW5jdGlvbmFsaXR5IGZvciBjb21wcmVoZW5zaXZlIEhUVFAgdGVzdGluZ1xuICogXG4gKiBNb2R1bGUgb3JnYW5pemF0aW9uIHJhdGlvbmFsZTpcbiAqIFRoZXNlIHV0aWxpdGllcyBhcmUgZ3JvdXBlZCBiZWNhdXNlIHRoZXkgYWxsIHNlcnZlIHRoZSBwdXJwb3NlIG9mXG4gKiB0ZXN0aW5nIEhUVFAtZGVwZW5kZW50IGNvZGUgd2l0aG91dCBhY3R1YWwgbmV0d29yayBjYWxscywgcHJvdmlkaW5nXG4gKiBkaWZmZXJlbnQgbGV2ZWxzIG9mIGFic3RyYWN0aW9uIGFuZCBjb25maWd1cmF0aW9uIG9wdGlvbnMuXG4gKi9cblxuLy8gSW1wb3J0IG1vY2tBeGlvcyBmYWN0b3J5IGZvciBjcmVhdGluZyBjb25maWd1cmFibGUgSFRUUCBjbGllbnQgbW9ja3Ncbi8vIG1vY2tBeGlvcyBwcm92aWRlcyBlbmhhbmNlZCBtb2NrIEhUVFAgY2xpZW50cyB3aXRoIGN1c3RvbWl6YWJsZSBiZWhhdmlvclxuLy8gZm9yIGNvbXByZWhlbnNpdmUgb2ZmbGluZSB0ZXN0aW5nIGFuZCBIVFRQIHNpbXVsYXRpb24gc2NlbmFyaW9zXG5pbXBvcnQgbW9ja0F4aW9zIGZyb20gJy4uL3V0aWxzL21vY2tBeGlvcy5qcyc7XG5cbi8vIEltcG9ydCBodHRwVGVzdCB1dGlsaXRpZXMgZm9yIGxpZ2h0d2VpZ2h0IGludGVncmF0aW9uIHRlc3Rpbmdcbi8vIGh0dHBUZXN0IHByb3ZpZGVzIHN1cGVydGVzdC1saWtlIGZ1bmN0aW9uYWxpdHkgd2l0aG91dCBleHRlcm5hbCBkZXBlbmRlbmNpZXNcbi8vIGZvciB0ZXN0aW5nIEhUVFAgZW5kcG9pbnRzIGFuZCBhcHBsaWNhdGlvbnMgaW4gTm9kZS5qcyBjb3JlXG5pbXBvcnQgaHR0cFRlc3QgZnJvbSAnLi4vdXRpbHMvaHR0cFRlc3QuanMnO1xuXG4vLyBJbXBvcnQgb2ZmbGluZU1vZGUgdXRpbGl0eSBmb3IgbmV0d29yay1mcmVlIHRlc3Rpbmdcbi8vIG9mZmxpbmVNb2RlIGF1dG9tYXRpY2FsbHkgc3dpdGNoZXMgYmV0d2VlbiByZWFsIGFuZCBzdHViIGltcGxlbWVudGF0aW9uc1xuLy8gYmFzZWQgb24gd2hldGhlciB0aGUgdGVzdCBzaG91bGQgc2ltdWxhdGUgb2ZmbGluZSBjb25kaXRpb25zXG5pbXBvcnQgb2ZmbGluZU1vZGUgZnJvbSAnLi4vdXRpbHMvb2ZmbGluZU1vZGUuanMnO1xuXG4vKipcbiAqIEV4cG9ydCBIVFRQIHRlc3RpbmcgdXRpbGl0aWVzXG4gKiBcbiAqIFRoZXNlIHV0aWxpdGllcyBhcmUgZXhwb3J0ZWQgdG9nZXRoZXIgYmVjYXVzZSB0aGV5IHByb3ZpZGVcbiAqIGNvbXBsZW1lbnRhcnkgZnVuY3Rpb25hbGl0eSBmb3IgSFRUUCB0ZXN0aW5nOlxuICogXG4gKiAtIG1vY2tBeGlvczogRm9yIG1vY2tpbmcgSFRUUCBjbGllbnQgYmVoYXZpb3JcbiAqIC0gaHR0cFRlc3Q6IEZvciBpbnRlZ3JhdGlvbiB0ZXN0aW5nIG9mIEhUVFAgZW5kcG9pbnRzXG4gKiAtIG9mZmxpbmVNb2RlOiBGb3Igc2ltdWxhdGluZyBvZmZsaW5lIGNvbmRpdGlvbnNcbiAqIFxuICogRXhwb3J0IHN0cmF0ZWd5OlxuICogLSBOYW1lZCBleHBvcnRzIGZvciBFUyBtb2R1bGUgY29tcGF0aWJpbGl0eVxuICogLSBEZXNjcmlwdGl2ZSBwcm9wZXJ0eSBuYW1lcyB0aGF0IGluZGljYXRlIHB1cnBvc2VcbiAqIC0gR3JvdXBlZCBieSBmdW5jdGlvbmFsaXR5IGZvciBkZXZlbG9wZXIgY29udmVuaWVuY2VcbiAqL1xuZXhwb3J0IHtcbiAgLy8gSFRUUCBjbGllbnQgbW9ja2luZyBmb3IgYXhpb3MgYW5kIHNpbWlsYXIgbGlicmFyaWVzXG4gIG1vY2tBeGlvcyxcbiAgXG4gIC8vIExpZ2h0d2VpZ2h0IEhUVFAgaW50ZWdyYXRpb24gdGVzdGluZyB1dGlsaXRpZXNcbiAgaHR0cFRlc3QsXG4gIFxuICAvLyBFbnZpcm9ubWVudC1hd2FyZSBvZmZsaW5lIG1vZGUgc2ltdWxhdGlvblxuICBvZmZsaW5lTW9kZVxufTsiXSwidmVyc2lvbiI6M30=