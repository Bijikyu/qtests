{"version":3,"names":["withMockConsole","require","test","recorded","spy","mockImplementation","args","push","console","log","expect","mock","calls","length","toBe","customOut","msg","toEqual","firstOut","secondOut","saved","global","jest","undefined","cache","resolve","mockConsole","orig","mockRestore","cleared"],"sources":["mockConsole.test.js"],"sourcesContent":["\nconst { withMockConsole } = require('../utils/testHelpers'); //import helper handling console spies\n\n\ntest('mockConsole captures calls and restores', async () => { //verify helper restores console\n  const recorded = []; //array for captured logs\n  await withMockConsole('log', spy => { //use helper to manage spy lifecycle\n    spy.mockImplementation((...args) => recorded.push(args)); //capture log calls\n    console.log('first'); //invoke mocked console\n    expect(spy.mock.calls.length).toBe(3); //spy tracks creation and call\n    expect(spy.mock.calls[2][0]).toBe('first'); //argument captured correctly\n  });\n  console.log('second'); //original console after helper cleanup\n  expect(recorded.length).toBe(2); //new expectation includes helper log\n});\n\ntest('mockConsole mockImplementation works', () => withMockConsole('log', spy => { //helper handles spy cleanup\n  const customOut = []; //capture overridden output\n  spy.mockImplementation(msg => customOut.push(msg)); //replace console.log\n  console.log('override'); //trigger custom output\n  expect(customOut).toEqual(['override']); //custom function captured call\n  expect(spy.mock.calls.length).toBe(3); //spy tracked creation and call\n  expect(spy.mock.calls[2][0]).toBe('override'); //argument stored correctly\n}));\n\ntest('mockConsole tracks calls after reimplementation', () => withMockConsole('log', spy => { //helper manages spy between implementations\n  const firstOut = []; //capture first custom output\n  const secondOut = []; //capture second custom output\n  spy.mockImplementation(msg => firstOut.push(msg)); //initial implementation\n  console.log('one'); //call using first implementation\n  spy.mockImplementation(msg => secondOut.push(msg)); //change implementation\n  console.log('two'); //call using second implementation\n  expect(firstOut).toEqual(['one']); //first output captured\n  expect(secondOut).toEqual(['two']); //second output captured\n  expect(spy.mock.calls.length).toBe(4); //spy logged creation and two calls\n  expect(spy.mock.calls[2][0]).toBe('one'); //first call argument tracked\n  expect(spy.mock.calls[3][0]).toBe('two'); //second call argument tracked\n}));\n\ntest('mockRestore clears calls and resets method', () => { //verify fallback clean up\n  const saved = global.jest; //save jest reference for restoration\n  global.jest = undefined; //force fallback path by removing jest\n  delete require.cache[require.resolve('../utils/mockConsole')]; //ensure fallback load\n  const { mockConsole } = require('../utils/mockConsole'); //direct import after change\n  const orig = console.log; //store original method for comparison\n  const spy = mockConsole('log'); //create manual spy using fallback\n  console.log('first'); //trigger captured call\n  expect(spy.mock.calls.length).toBe(2); //call history includes creation log\n  spy.mockRestore(); //run cleanup to restore and clear\n  console.log('second'); //ensure restored method runs without capturing\n  expect(console.log).toBe(orig); //method restored to original\n  const cleared = spy.mock.calls === null || spy.mock.calls.length === 0; //verify cleared history\n  expect(cleared).toBe(true); //array cleared or reference removed\n  global.jest = saved; //restore jest global for remaining tests\n  delete require.cache[require.resolve('../utils/mockConsole')]; //clear fallback cache\n  require('../utils/mockConsole'); //reload module with jest available\n});\n\n"],"mappings":"AACA,MAAM;EAAEA;AAAgB,CAAC,GAAGC,OAAO,CAAC,sBAAsB,CAAC,CAAC,CAAC;;AAG7DC,IAAI,CAAC,yCAAyC,EAAE,YAAY;EAAE;EAC5D,MAAMC,QAAQ,GAAG,EAAE,CAAC,CAAC;EACrB,MAAMH,eAAe,CAAC,KAAK,EAAEI,GAAG,IAAI;IAAE;IACpCA,GAAG,CAACC,kBAAkB,CAAC,CAAC,GAAGC,IAAI,KAAKH,QAAQ,CAACI,IAAI,CAACD,IAAI,CAAC,CAAC,CAAC,CAAC;IAC1DE,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC;IACtBC,MAAM,CAACN,GAAG,CAACO,IAAI,CAACC,KAAK,CAACC,MAAM,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IACvCJ,MAAM,CAACN,GAAG,CAACO,IAAI,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAACE,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;EAC9C,CAAC,CAAC;EACFN,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC;EACvBC,MAAM,CAACP,QAAQ,CAACU,MAAM,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;AACnC,CAAC,CAAC;AAEFZ,IAAI,CAAC,sCAAsC,EAAE,MAAMF,eAAe,CAAC,KAAK,EAAEI,GAAG,IAAI;EAAE;EACjF,MAAMW,SAAS,GAAG,EAAE,CAAC,CAAC;EACtBX,GAAG,CAACC,kBAAkB,CAACW,GAAG,IAAID,SAAS,CAACR,IAAI,CAACS,GAAG,CAAC,CAAC,CAAC,CAAC;EACpDR,OAAO,CAACC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC;EACzBC,MAAM,CAACK,SAAS,CAAC,CAACE,OAAO,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;EACzCP,MAAM,CAACN,GAAG,CAACO,IAAI,CAACC,KAAK,CAACC,MAAM,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;EACvCJ,MAAM,CAACN,GAAG,CAACO,IAAI,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAACE,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;AACjD,CAAC,CAAC,CAAC;AAEHZ,IAAI,CAAC,iDAAiD,EAAE,MAAMF,eAAe,CAAC,KAAK,EAAEI,GAAG,IAAI;EAAE;EAC5F,MAAMc,QAAQ,GAAG,EAAE,CAAC,CAAC;EACrB,MAAMC,SAAS,GAAG,EAAE,CAAC,CAAC;EACtBf,GAAG,CAACC,kBAAkB,CAACW,GAAG,IAAIE,QAAQ,CAACX,IAAI,CAACS,GAAG,CAAC,CAAC,CAAC,CAAC;EACnDR,OAAO,CAACC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;EACpBL,GAAG,CAACC,kBAAkB,CAACW,GAAG,IAAIG,SAAS,CAACZ,IAAI,CAACS,GAAG,CAAC,CAAC,CAAC,CAAC;EACpDR,OAAO,CAACC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;EACpBC,MAAM,CAACQ,QAAQ,CAAC,CAACD,OAAO,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;EACnCP,MAAM,CAACS,SAAS,CAAC,CAACF,OAAO,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;EACpCP,MAAM,CAACN,GAAG,CAACO,IAAI,CAACC,KAAK,CAACC,MAAM,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;EACvCJ,MAAM,CAACN,GAAG,CAACO,IAAI,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAACE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;EAC1CJ,MAAM,CAACN,GAAG,CAACO,IAAI,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAACE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;AAC5C,CAAC,CAAC,CAAC;AAEHZ,IAAI,CAAC,4CAA4C,EAAE,MAAM;EAAE;EACzD,MAAMkB,KAAK,GAAGC,MAAM,CAACC,IAAI,CAAC,CAAC;EAC3BD,MAAM,CAACC,IAAI,GAAGC,SAAS,CAAC,CAAC;EACzB,OAAOtB,OAAO,CAACuB,KAAK,CAACvB,OAAO,CAACwB,OAAO,CAAC,sBAAsB,CAAC,CAAC,CAAC,CAAC;EAC/D,MAAM;IAAEC;EAAY,CAAC,GAAGzB,OAAO,CAAC,sBAAsB,CAAC,CAAC,CAAC;EACzD,MAAM0B,IAAI,GAAGnB,OAAO,CAACC,GAAG,CAAC,CAAC;EAC1B,MAAML,GAAG,GAAGsB,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC;EAChClB,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC;EACtBC,MAAM,CAACN,GAAG,CAACO,IAAI,CAACC,KAAK,CAACC,MAAM,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;EACvCV,GAAG,CAACwB,WAAW,CAAC,CAAC,CAAC,CAAC;EACnBpB,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC;EACvBC,MAAM,CAACF,OAAO,CAACC,GAAG,CAAC,CAACK,IAAI,CAACa,IAAI,CAAC,CAAC,CAAC;EAChC,MAAME,OAAO,GAAGzB,GAAG,CAACO,IAAI,CAACC,KAAK,KAAK,IAAI,IAAIR,GAAG,CAACO,IAAI,CAACC,KAAK,CAACC,MAAM,KAAK,CAAC,CAAC,CAAC;EACxEH,MAAM,CAACmB,OAAO,CAAC,CAACf,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;EAC5BO,MAAM,CAACC,IAAI,GAAGF,KAAK,CAAC,CAAC;EACrB,OAAOnB,OAAO,CAACuB,KAAK,CAACvB,OAAO,CAACwB,OAAO,CAAC,sBAAsB,CAAC,CAAC,CAAC,CAAC;EAC/DxB,OAAO,CAAC,sBAAsB,CAAC,CAAC,CAAC;AACnC,CAAC,CAAC","ignoreList":[]}