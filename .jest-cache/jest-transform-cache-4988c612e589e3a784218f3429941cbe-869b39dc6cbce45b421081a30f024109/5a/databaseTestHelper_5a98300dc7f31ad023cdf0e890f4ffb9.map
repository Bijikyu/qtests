{"version":3,"names":["logStart","logReturn","require","DatabaseTestHelper","constructor","models","isSetup","setup","mockModels","clearAllModels","mockApiKeys","length","mockLogs","error","message","teardown","createSuite","helper","beforeEach","afterEach","isValidTestContext","describe","it","console","log","getModels","Error","module","exports"],"sources":["databaseTestHelper.js"],"sourcesContent":["/**\n * Database Testing Helper for In-Memory Database Management\n * \n * This class provides centralized database testing utilities using qtests mockModels\n * instead of external database dependencies. It focuses solely on database testing concerns.\n */\n\nconst { logStart, logReturn } = require('../../lib/logUtils');\n\n/**\n * Database Testing Helper for In-Memory Database Management\n * \n * This class provides centralized database testing utilities using qtests mockModels\n * instead of external database dependencies. It eliminates duplicate beforeEach/afterEach\n * patterns across storage tests while maintaining qtests zero-dependency approach.\n */\nclass DatabaseTestHelper {\n  constructor() {\n    this.models = null;\n    this.isSetup = false;\n  }\n\n  /**\n   * Sets up in-memory database models and clears existing data\n   * \n   * @returns {Promise<void>} Resolves when setup is complete\n   */\n  async setup() {\n    logStart('DatabaseTestHelper.setup');\n    \n    try {\n      // Import qtests mockModels for in-memory database simulation\n      const { mockModels } = require('../../lib/envUtils');\n      this.models = mockModels;\n      \n      // Clear existing model data for clean test state\n      if (this.models.clearAllModels) {\n        this.models.clearAllModels();\n      } else {\n        // Manual clearing if clearAllModels not available\n        if (this.models.mockApiKeys) this.models.mockApiKeys.length = 0;\n        if (this.models.mockLogs) this.models.mockLogs.length = 0;\n      }\n      \n      this.isSetup = true;\n      logReturn('DatabaseTestHelper.setup', 'completed');\n    } catch (error) {\n      logReturn('DatabaseTestHelper.setup', `error: ${error.message}`);\n      throw error;\n    }\n  }\n\n  /**\n   * Tears down database connections and clears model state\n   * \n   * @returns {Promise<void>} Resolves when teardown is complete\n   */\n  async teardown() {\n    logStart('DatabaseTestHelper.teardown');\n    \n    try {\n      if (this.models) {\n        // Clear all model data\n        if (this.models.clearAllModels) {\n          this.models.clearAllModels();\n        } else {\n          // Manual clearing if clearAllModels not available\n          if (this.models.mockApiKeys) this.models.mockApiKeys.length = 0;\n          if (this.models.mockLogs) this.models.mockLogs.length = 0;\n        }\n      }\n      \n      this.models = null;\n      this.isSetup = false;\n      logReturn('DatabaseTestHelper.teardown', 'completed');\n    } catch (error) {\n      logReturn('DatabaseTestHelper.teardown', `error: ${error.message}`);\n      throw error;\n    }\n  }\n\n  /**\n   * Creates a complete test suite setup with automatic cleanup\n   * \n   * @returns {DatabaseTestHelper} Configured helper instance\n   */\n  static createSuite() {\n    logStart('DatabaseTestHelper.createSuite');\n    \n    const helper = new DatabaseTestHelper();\n    \n    // Only set up hooks if they're available and we're at the right scope\n    try {\n      if (typeof beforeEach === 'function' && typeof afterEach === 'function') {\n        // Check if we're in a test context by attempting to define hooks\n        const isValidTestContext = typeof describe === 'function' && typeof it === 'function';\n        \n        if (isValidTestContext) {\n          beforeEach(async () => {\n            await helper.setup();\n          });\n\n          afterEach(async () => {\n            await helper.teardown();\n          });\n        } else {\n          console.log('[DatabaseTestHelper] Hooks available but not in valid test context - use manual setup/teardown');\n        }\n      } else {\n        console.log('[DatabaseTestHelper] No test hooks detected - use manual setup/teardown');\n      }\n    } catch (error) {\n      console.log('[DatabaseTestHelper] Could not set up automatic hooks - use manual setup/teardown');\n    }\n    \n    logReturn('DatabaseTestHelper.createSuite', helper);\n    return helper;\n  }\n\n  /**\n   * Get direct access to models for advanced testing scenarios\n   * \n   * @returns {Object} Mock models object with ApiKey, ApiLog, etc.\n   */\n  getModels() {\n    if (!this.isSetup) {\n      throw new Error('DatabaseTestHelper must be set up before accessing models');\n    }\n    return this.models;\n  }\n}\n\nmodule.exports = {\n  DatabaseTestHelper\n};"],"mappings":"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","ignoreList":[]}