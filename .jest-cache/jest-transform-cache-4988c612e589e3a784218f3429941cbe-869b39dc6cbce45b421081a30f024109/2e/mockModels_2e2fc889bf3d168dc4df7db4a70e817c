9856a835ca9dac9336c0072a9272a79f
/**
 * Mock Models for Testing - Working Implementation
 */

// Collections storage
const collections = new Map();

/**
 * Base Mock Model class
 */
class BaseMockModel {
  constructor(data = {}) {
    this._id = data._id || `mock_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;
    Object.assign(this, data);
  }
  async save() {
    const collectionName = this.constructor.modelName || 'default';
    if (!collections.has(collectionName)) {
      collections.set(collectionName, []);
    }
    const collection = collections.get(collectionName);
    const existingIndex = collection.findIndex(item => item._id === this._id);
    if (existingIndex >= 0) {
      collection[existingIndex] = this;
    } else {
      collection.push(this);
    }
    return this;
  }
  static getCollection() {
    const collectionName = this.modelName || 'default';
    return collections.get(collectionName) || [];
  }
  static find(query = {}) {
    const collection = this.getCollection();
    if (Object.keys(query).length === 0) {
      return [...collection]; // Return copy
    }
    return collection.filter(item => {
      return Object.keys(query).every(key => item[key] === query[key]);
    });
  }
}

/**
 * Create mock model class
 */
function createMockModel(modelName) {
  class MockModel extends BaseMockModel {
    static modelName = modelName;
  }
  MockModel.modelName = modelName;
  return MockModel;
}

/**
 * Pre-built API Key model
 */
class ApiKey extends BaseMockModel {
  static modelName = 'ApiKey';
  constructor(data = {}) {
    super(data);
    this.key = data.key || '';
    this.name = data.name || '';
    this.permissions = data.permissions || [];
    this.createdAt = data.createdAt || new Date();
  }
}

/**
 * Pre-built API Log model  
 */
class ApiLog extends BaseMockModel {
  static modelName = 'ApiLog';
  constructor(data = {}) {
    super(data);
    this.endpoint = data.endpoint || '';
    this.method = data.method || 'GET';
    this.statusCode = data.statusCode || 200;
    this.timestamp = data.timestamp || new Date();
  }
}

/**
 * Reset all collections
 */
function resetAllCollections() {
  collections.clear();
}
module.exports = {
  BaseMockModel,
  ApiKey,
  ApiLog,
  createMockModel,
  resetAllCollections,
  // Legacy exports for compatibility
  mockApiKeys: () => ApiKey.getCollection(),
  mockLogs: () => ApiLog.getCollection()
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb2xsZWN0aW9ucyIsIk1hcCIsIkJhc2VNb2NrTW9kZWwiLCJjb25zdHJ1Y3RvciIsImRhdGEiLCJfaWQiLCJEYXRlIiwibm93IiwiTWF0aCIsInJhbmRvbSIsInRvU3RyaW5nIiwic3Vic3RyIiwiT2JqZWN0IiwiYXNzaWduIiwic2F2ZSIsImNvbGxlY3Rpb25OYW1lIiwibW9kZWxOYW1lIiwiaGFzIiwic2V0IiwiY29sbGVjdGlvbiIsImdldCIsImV4aXN0aW5nSW5kZXgiLCJmaW5kSW5kZXgiLCJpdGVtIiwicHVzaCIsImdldENvbGxlY3Rpb24iLCJmaW5kIiwicXVlcnkiLCJrZXlzIiwibGVuZ3RoIiwiZmlsdGVyIiwiZXZlcnkiLCJrZXkiLCJjcmVhdGVNb2NrTW9kZWwiLCJNb2NrTW9kZWwiLCJBcGlLZXkiLCJuYW1lIiwicGVybWlzc2lvbnMiLCJjcmVhdGVkQXQiLCJBcGlMb2ciLCJlbmRwb2ludCIsIm1ldGhvZCIsInN0YXR1c0NvZGUiLCJ0aW1lc3RhbXAiLCJyZXNldEFsbENvbGxlY3Rpb25zIiwiY2xlYXIiLCJtb2R1bGUiLCJleHBvcnRzIiwibW9ja0FwaUtleXMiLCJtb2NrTG9ncyJdLCJzb3VyY2VzIjpbIm1vY2tNb2RlbHMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBNb2NrIE1vZGVscyBmb3IgVGVzdGluZyAtIFdvcmtpbmcgSW1wbGVtZW50YXRpb25cbiAqL1xuXG4vLyBDb2xsZWN0aW9ucyBzdG9yYWdlXG5jb25zdCBjb2xsZWN0aW9ucyA9IG5ldyBNYXAoKTtcblxuLyoqXG4gKiBCYXNlIE1vY2sgTW9kZWwgY2xhc3NcbiAqL1xuY2xhc3MgQmFzZU1vY2tNb2RlbCB7XG4gIGNvbnN0cnVjdG9yKGRhdGEgPSB7fSkge1xuICAgIHRoaXMuX2lkID0gZGF0YS5faWQgfHwgYG1vY2tfJHtEYXRlLm5vdygpfV8ke01hdGgucmFuZG9tKCkudG9TdHJpbmcoMzYpLnN1YnN0cigyLCA5KX1gO1xuICAgIE9iamVjdC5hc3NpZ24odGhpcywgZGF0YSk7XG4gIH1cbiAgXG4gIGFzeW5jIHNhdmUoKSB7XG4gICAgY29uc3QgY29sbGVjdGlvbk5hbWUgPSB0aGlzLmNvbnN0cnVjdG9yLm1vZGVsTmFtZSB8fCAnZGVmYXVsdCc7XG4gICAgaWYgKCFjb2xsZWN0aW9ucy5oYXMoY29sbGVjdGlvbk5hbWUpKSB7XG4gICAgICBjb2xsZWN0aW9ucy5zZXQoY29sbGVjdGlvbk5hbWUsIFtdKTtcbiAgICB9XG4gICAgXG4gICAgY29uc3QgY29sbGVjdGlvbiA9IGNvbGxlY3Rpb25zLmdldChjb2xsZWN0aW9uTmFtZSk7XG4gICAgY29uc3QgZXhpc3RpbmdJbmRleCA9IGNvbGxlY3Rpb24uZmluZEluZGV4KGl0ZW0gPT4gaXRlbS5faWQgPT09IHRoaXMuX2lkKTtcbiAgICBcbiAgICBpZiAoZXhpc3RpbmdJbmRleCA+PSAwKSB7XG4gICAgICBjb2xsZWN0aW9uW2V4aXN0aW5nSW5kZXhdID0gdGhpcztcbiAgICB9IGVsc2Uge1xuICAgICAgY29sbGVjdGlvbi5wdXNoKHRoaXMpO1xuICAgIH1cbiAgICBcbiAgICByZXR1cm4gdGhpcztcbiAgfVxuICBcbiAgc3RhdGljIGdldENvbGxlY3Rpb24oKSB7XG4gICAgY29uc3QgY29sbGVjdGlvbk5hbWUgPSB0aGlzLm1vZGVsTmFtZSB8fCAnZGVmYXVsdCc7XG4gICAgcmV0dXJuIGNvbGxlY3Rpb25zLmdldChjb2xsZWN0aW9uTmFtZSkgfHwgW107XG4gIH1cbiAgXG4gIHN0YXRpYyBmaW5kKHF1ZXJ5ID0ge30pIHtcbiAgICBjb25zdCBjb2xsZWN0aW9uID0gdGhpcy5nZXRDb2xsZWN0aW9uKCk7XG4gICAgaWYgKE9iamVjdC5rZXlzKHF1ZXJ5KS5sZW5ndGggPT09IDApIHtcbiAgICAgIHJldHVybiBbLi4uY29sbGVjdGlvbl07IC8vIFJldHVybiBjb3B5XG4gICAgfVxuICAgIFxuICAgIHJldHVybiBjb2xsZWN0aW9uLmZpbHRlcihpdGVtID0+IHtcbiAgICAgIHJldHVybiBPYmplY3Qua2V5cyhxdWVyeSkuZXZlcnkoa2V5ID0+IGl0ZW1ba2V5XSA9PT0gcXVlcnlba2V5XSk7XG4gICAgfSk7XG4gIH1cbn1cblxuLyoqXG4gKiBDcmVhdGUgbW9jayBtb2RlbCBjbGFzc1xuICovXG5mdW5jdGlvbiBjcmVhdGVNb2NrTW9kZWwobW9kZWxOYW1lKSB7XG4gIGNsYXNzIE1vY2tNb2RlbCBleHRlbmRzIEJhc2VNb2NrTW9kZWwge1xuICAgIHN0YXRpYyBtb2RlbE5hbWUgPSBtb2RlbE5hbWU7XG4gIH1cbiAgTW9ja01vZGVsLm1vZGVsTmFtZSA9IG1vZGVsTmFtZTtcbiAgcmV0dXJuIE1vY2tNb2RlbDtcbn1cblxuLyoqXG4gKiBQcmUtYnVpbHQgQVBJIEtleSBtb2RlbFxuICovXG5jbGFzcyBBcGlLZXkgZXh0ZW5kcyBCYXNlTW9ja01vZGVsIHtcbiAgc3RhdGljIG1vZGVsTmFtZSA9ICdBcGlLZXknO1xuICBcbiAgY29uc3RydWN0b3IoZGF0YSA9IHt9KSB7XG4gICAgc3VwZXIoZGF0YSk7XG4gICAgdGhpcy5rZXkgPSBkYXRhLmtleSB8fCAnJztcbiAgICB0aGlzLm5hbWUgPSBkYXRhLm5hbWUgfHwgJyc7XG4gICAgdGhpcy5wZXJtaXNzaW9ucyA9IGRhdGEucGVybWlzc2lvbnMgfHwgW107XG4gICAgdGhpcy5jcmVhdGVkQXQgPSBkYXRhLmNyZWF0ZWRBdCB8fCBuZXcgRGF0ZSgpO1xuICB9XG59XG5cbi8qKlxuICogUHJlLWJ1aWx0IEFQSSBMb2cgbW9kZWwgIFxuICovXG5jbGFzcyBBcGlMb2cgZXh0ZW5kcyBCYXNlTW9ja01vZGVsIHtcbiAgc3RhdGljIG1vZGVsTmFtZSA9ICdBcGlMb2cnO1xuICBcbiAgY29uc3RydWN0b3IoZGF0YSA9IHt9KSB7XG4gICAgc3VwZXIoZGF0YSk7XG4gICAgdGhpcy5lbmRwb2ludCA9IGRhdGEuZW5kcG9pbnQgfHwgJyc7XG4gICAgdGhpcy5tZXRob2QgPSBkYXRhLm1ldGhvZCB8fCAnR0VUJztcbiAgICB0aGlzLnN0YXR1c0NvZGUgPSBkYXRhLnN0YXR1c0NvZGUgfHwgMjAwO1xuICAgIHRoaXMudGltZXN0YW1wID0gZGF0YS50aW1lc3RhbXAgfHwgbmV3IERhdGUoKTtcbiAgfVxufVxuXG4vKipcbiAqIFJlc2V0IGFsbCBjb2xsZWN0aW9uc1xuICovXG5mdW5jdGlvbiByZXNldEFsbENvbGxlY3Rpb25zKCkge1xuICBjb2xsZWN0aW9ucy5jbGVhcigpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgQmFzZU1vY2tNb2RlbCxcbiAgQXBpS2V5LFxuICBBcGlMb2csXG4gIGNyZWF0ZU1vY2tNb2RlbCxcbiAgcmVzZXRBbGxDb2xsZWN0aW9ucyxcbiAgLy8gTGVnYWN5IGV4cG9ydHMgZm9yIGNvbXBhdGliaWxpdHlcbiAgbW9ja0FwaUtleXM6ICgpID0+IEFwaUtleS5nZXRDb2xsZWN0aW9uKCksXG4gIG1vY2tMb2dzOiAoKSA9PiBBcGlMb2cuZ2V0Q29sbGVjdGlvbigpXG59OyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBOztBQUVBO0FBQ0EsTUFBTUEsV0FBVyxHQUFHLElBQUlDLEdBQUcsQ0FBQyxDQUFDOztBQUU3QjtBQUNBO0FBQ0E7QUFDQSxNQUFNQyxhQUFhLENBQUM7RUFDbEJDLFdBQVdBLENBQUNDLElBQUksR0FBRyxDQUFDLENBQUMsRUFBRTtJQUNyQixJQUFJLENBQUNDLEdBQUcsR0FBR0QsSUFBSSxDQUFDQyxHQUFHLElBQUksUUFBUUMsSUFBSSxDQUFDQyxHQUFHLENBQUMsQ0FBQyxJQUFJQyxJQUFJLENBQUNDLE1BQU0sQ0FBQyxDQUFDLENBQUNDLFFBQVEsQ0FBQyxFQUFFLENBQUMsQ0FBQ0MsTUFBTSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRTtJQUN0RkMsTUFBTSxDQUFDQyxNQUFNLENBQUMsSUFBSSxFQUFFVCxJQUFJLENBQUM7RUFDM0I7RUFFQSxNQUFNVSxJQUFJQSxDQUFBLEVBQUc7SUFDWCxNQUFNQyxjQUFjLEdBQUcsSUFBSSxDQUFDWixXQUFXLENBQUNhLFNBQVMsSUFBSSxTQUFTO0lBQzlELElBQUksQ0FB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