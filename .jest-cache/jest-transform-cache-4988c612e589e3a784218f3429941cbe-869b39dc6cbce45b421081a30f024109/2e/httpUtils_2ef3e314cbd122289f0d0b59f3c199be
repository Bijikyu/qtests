3a3261c536e3752b3f4c9b3e9998165b
/**
 * HTTP Testing Utilities
 * 
 * This module provides utilities for HTTP client mocking, integration testing,
 * and network simulation. These utilities help test applications that make
 * HTTP requests without requiring actual network connectivity.
 * 
 * Design philosophy:
 * - Network-free testing for reliable, fast tests
 * - Configurable mock behavior for different scenarios
 * - Integration testing support without external dependencies
 * - Offline mode simulation for robust testing
 * 
 * Why HTTP utilities are grouped together:
 * 1. All utilities deal with HTTP/network interactions
 * 2. They share common patterns for request/response mocking
 * 3. Often used together in integration testing scenarios
 * 4. Provide complementary functionality for comprehensive HTTP testing
 * 
 * Module organization rationale:
 * These utilities are grouped because they all serve the purpose of
 * testing HTTP-dependent code without actual network calls, providing
 * different levels of abstraction and configuration options.
 */

// Import mockAxios factory for creating configurable HTTP client mocks
// mockAxios provides enhanced mock HTTP clients with customizable behavior
// for comprehensive offline testing and HTTP simulation scenarios
const mockAxios = require('../utils/mockAxios');

// Import httpTest utilities for lightweight integration testing
// httpTest provides supertest-like functionality without external dependencies
// for testing HTTP endpoints and applications in Node.js core
const httpTest = require('../utils/httpTest');

// Import offlineMode utility for network-free testing
// offlineMode automatically switches between real and stub implementations
// based on whether the test should simulate offline conditions
const offlineMode = require('../utils/offlineMode');

/**
 * Export HTTP testing utilities
 * 
 * These utilities are exported together because they provide
 * complementary functionality for HTTP testing:
 * 
 * - mockAxios: For mocking HTTP client behavior
 * - httpTest: For integration testing of HTTP endpoints
 * - offlineMode: For simulating offline conditions
 * 
 * Export strategy:
 * - Object export for consistent access patterns
 * - Descriptive property names that indicate purpose
 * - Grouped by functionality for developer convenience
 */
module.exports = {
  // HTTP client mocking for axios and similar libraries
  mockAxios,
  // Lightweight HTTP integration testing utilities
  httpTest,
  // Environment-aware offline mode simulation
  offlineMode
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJtb2NrQXhpb3MiLCJyZXF1aXJlIiwiaHR0cFRlc3QiLCJvZmZsaW5lTW9kZSIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlcyI6WyJodHRwVXRpbHMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBIVFRQIFRlc3RpbmcgVXRpbGl0aWVzXG4gKiBcbiAqIFRoaXMgbW9kdWxlIHByb3ZpZGVzIHV0aWxpdGllcyBmb3IgSFRUUCBjbGllbnQgbW9ja2luZywgaW50ZWdyYXRpb24gdGVzdGluZyxcbiAqIGFuZCBuZXR3b3JrIHNpbXVsYXRpb24uIFRoZXNlIHV0aWxpdGllcyBoZWxwIHRlc3QgYXBwbGljYXRpb25zIHRoYXQgbWFrZVxuICogSFRUUCByZXF1ZXN0cyB3aXRob3V0IHJlcXVpcmluZyBhY3R1YWwgbmV0d29yayBjb25uZWN0aXZpdHkuXG4gKiBcbiAqIERlc2lnbiBwaGlsb3NvcGh5OlxuICogLSBOZXR3b3JrLWZyZWUgdGVzdGluZyBmb3IgcmVsaWFibGUsIGZhc3QgdGVzdHNcbiAqIC0gQ29uZmlndXJhYmxlIG1vY2sgYmVoYXZpb3IgZm9yIGRpZmZlcmVudCBzY2VuYXJpb3NcbiAqIC0gSW50ZWdyYXRpb24gdGVzdGluZyBzdXBwb3J0IHdpdGhvdXQgZXh0ZXJuYWwgZGVwZW5kZW5jaWVzXG4gKiAtIE9mZmxpbmUgbW9kZSBzaW11bGF0aW9uIGZvciByb2J1c3QgdGVzdGluZ1xuICogXG4gKiBXaHkgSFRUUCB1dGlsaXRpZXMgYXJlIGdyb3VwZWQgdG9nZXRoZXI6XG4gKiAxLiBBbGwgdXRpbGl0aWVzIGRlYWwgd2l0aCBIVFRQL25ldHdvcmsgaW50ZXJhY3Rpb25zXG4gKiAyLiBUaGV5IHNoYXJlIGNvbW1vbiBwYXR0ZXJucyBmb3IgcmVxdWVzdC9yZXNwb25zZSBtb2NraW5nXG4gKiAzLiBPZnRlbiB1c2VkIHRvZ2V0aGVyIGluIGludGVncmF0aW9uIHRlc3Rpbmcgc2NlbmFyaW9zXG4gKiA0LiBQcm92aWRlIGNvbXBsZW1lbnRhcnkgZnVuY3Rpb25hbGl0eSBmb3IgY29tcHJlaGVuc2l2ZSBIVFRQIHRlc3RpbmdcbiAqIFxuICogTW9kdWxlIG9yZ2FuaXphdGlvbiByYXRpb25hbGU6XG4gKiBUaGVzZSB1dGlsaXRpZXMgYXJlIGdyb3VwZWQgYmVjYXVzZSB0aGV5IGFsbCBzZXJ2ZSB0aGUgcHVycG9zZSBvZlxuICogdGVzdGluZyBIVFRQLWRlcGVuZGVudCBjb2RlIHdpdGhvdXQgYWN0dWFsIG5ldHdvcmsgY2FsbHMsIHByb3ZpZGluZ1xuICogZGlmZmVyZW50IGxldmVscyBvZiBhYnN0cmFjdGlvbiBhbmQgY29uZmlndXJhdGlvbiBvcHRpb25zLlxuICovXG5cbi8vIEltcG9ydCBtb2NrQXhpb3MgZmFjdG9yeSBmb3IgY3JlYXRpbmcgY29uZmlndXJhYmxlIEhUVFAgY2xpZW50IG1vY2tzXG4vLyBtb2NrQXhpb3MgcHJvdmlkZXMgZW5oYW5jZWQgbW9jayBIVFRQIGNsaWVudHMgd2l0aCBjdXN0b21pemFibGUgYmVoYXZpb3Jcbi8vIGZvciBjb21wcmVoZW5zaXZlIG9mZmxpbmUgdGVzdGluZyBhbmQgSFRUUCBzaW11bGF0aW9uIHNjZW5hcmlvc1xuY29uc3QgbW9ja0F4aW9zID0gcmVxdWlyZSgnLi4vdXRpbHMvbW9ja0F4aW9zJyk7XG5cbi8vIEltcG9ydCBodHRwVGVzdCB1dGlsaXRpZXMgZm9yIGxpZ2h0d2VpZ2h0IGludGVncmF0aW9uIHRlc3Rpbmdcbi8vIGh0dHBUZXN0IHByb3ZpZGVzIHN1cGVydGVzdC1saWtlIGZ1bmN0aW9uYWxpdHkgd2l0aG91dCBleHRlcm5hbCBkZXBlbmRlbmNpZXNcbi8vIGZvciB0ZXN0aW5nIEhUVFAgZW5kcG9pbnRzIGFuZCBhcHBsaWNhdGlvbnMgaW4gTm9kZS5qcyBjb3JlXG5jb25zdCBodHRwVGVzdCA9IHJlcXVpcmUoJy4uL3V0aWxzL2h0dHBUZXN0Jyk7XG5cbi8vIEltcG9ydCBvZmZsaW5lTW9kZSB1dGlsaXR5IGZvciBuZXR3b3JrLWZyZWUgdGVzdGluZ1xuLy8gb2ZmbGluZU1vZGUgYXV0b21hdGljYWxseSBzd2l0Y2hlcyBiZXR3ZWVuIHJlYWwgYW5kIHN0dWIgaW1wbGVtZW50YXRpb25zXG4vLyBiYXNlZCBvbiB3aGV0aGVyIHRoZSB0ZXN0IHNob3VsZCBzaW11bGF0ZSBvZmZsaW5lIGNvbmRpdGlvbnNcbmNvbnN0IG9mZmxpbmVNb2RlID0gcmVxdWlyZSgnLi4vdXRpbHMvb2ZmbGluZU1vZGUnKTtcblxuLyoqXG4gKiBFeHBvcnQgSFRUUCB0ZXN0aW5nIHV0aWxpdGllc1xuICogXG4gKiBUaGVzZSB1dGlsaXRpZXMgYXJlIGV4cG9ydGVkIHRvZ2V0aGVyIGJlY2F1c2UgdGhleSBwcm92aWRlXG4gKiBjb21wbGVtZW50YXJ5IGZ1bmN0aW9uYWxpdHkgZm9yIEhUVFAgdGVzdGluZzpcbiAqIFxuICogLSBtb2NrQXhpb3M6IEZvciBtb2NraW5nIEhUVFAgY2xpZW50IGJlaGF2aW9yXG4gKiAtIGh0dHBUZXN0OiBGb3IgaW50ZWdyYXRpb24gdGVzdGluZyBvZiBIVFRQIGVuZHBvaW50c1xuICogLSBvZmZsaW5lTW9kZTogRm9yIHNpbXVsYXRpbmcgb2ZmbGluZSBjb25kaXRpb25zXG4gKiBcbiAqIEV4cG9ydCBzdHJhdGVneTpcbiAqIC0gT2JqZWN0IGV4cG9ydCBmb3IgY29uc2lzdGVudCBhY2Nlc3MgcGF0dGVybnNcbiAqIC0gRGVzY3JpcHRpdmUgcHJvcGVydHkgbmFtZXMgdGhhdCBpbmRpY2F0ZSBwdXJwb3NlXG4gKiAtIEdyb3VwZWQgYnkgZnVuY3Rpb25hbGl0eSBmb3IgZGV2ZWxvcGVyIGNvbnZlbmllbmNlXG4gKi9cbm1vZHVsZS5leHBvcnRzID0ge1xuICAvLyBIVFRQIGNsaWVudCBtb2NraW5nIGZvciBheGlvcyBhbmQgc2ltaWxhciBsaWJyYXJpZXNcbiAgbW9ja0F4aW9zLFxuICBcbiAgLy8gTGlnaHR3ZWlnaHQgSFRUUCBpbnRlZ3JhdGlvbiB0ZXN0aW5nIHV0aWxpdGllc1xuICBodHRwVGVzdCxcbiAgXG4gIC8vIEVudmlyb25tZW50LWF3YXJlIG9mZmxpbmUgbW9kZSBzaW11bGF0aW9uXG4gIG9mZmxpbmVNb2RlXG59OyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLE1BQU1BLFNBQVMsR0FBR0MsT0FBTyxDQUFDLG9CQUFvQixDQUFDOztBQUUvQztBQUNBO0FBQ0E7QUFDQSxNQUFNQyxRQUFRLEdBQUdELE9BQU8sQ0FBQyxtQkFBbUIsQ0FBQzs7QUFFN0M7QUFDQTtBQUNBO0FBQ0EsTUFBTUUsV0FBVyxHQUFHRixPQUFPLENBQUMsc0JBQXNCLENBQUM7O0FBRW5EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBRyxNQUFNLENBQUNDLE9BQU8sR0FBRztFQUNmO0VBQ0FMLFNBQVM7RUFFVDtFQUNBRSxRQUFRO0VBRVI7RUFDQUM7QUFDRixDQUFDIiwiaWdub3JlTGlzdCI6W119