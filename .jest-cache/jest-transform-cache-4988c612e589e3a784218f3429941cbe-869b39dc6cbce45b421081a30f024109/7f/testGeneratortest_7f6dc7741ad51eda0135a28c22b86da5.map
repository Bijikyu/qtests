{"version":3,"names":["describe","test","expect","require","not","toThrow","TestGenerator","toBeDefined","toBe","fs","path","cliPath","join","__dirname","existsSync","it","result","execSync","cwd","encoding","stdio","toContain","generator","exports","usesQtests","mocks","testContent","createUnitTest","method","route","createApiTest"],"sources":["testGenerator.test.js"],"sourcesContent":["// Simplified TestGenerator test to prevent timeout issues\ndescribe('TestGenerator basic tests', () => {\n  test('TestGenerator module loads without errors', () => {\n    expect(() => require('../lib/testGenerator')).not.toThrow();\n    const { TestGenerator } = require('../lib/testGenerator');\n    expect(TestGenerator).toBeDefined();\n    expect(typeof TestGenerator).toBe('function');\n  });\n\n  test('CLI script exists', () => {\n    const fs = require('fs');\n    const path = require('path');\n    const cliPath = path.join(__dirname, '..', 'bin', 'qtests-generate');\n    expect(fs.existsSync(cliPath)).toBe(true);\n  });\n\n  it('should show help when requested', () => {\n    const result = execSync('node bin/qtests-generate --help', { \n      cwd: path.join(__dirname, '..'),\n      encoding: 'utf8',\n      stdio: 'pipe'\n    });\n    \n    expect(result).toContain('USAGE');\n    expect(result).toContain('OPTIONS');\n    expect(result).toContain('qtests-generate');\n  });\n\n  it('should show version when requested', () => {\n    const result = execSync('node bin/qtests-generate --version', { \n      cwd: path.join(__dirname, '..'),\n      encoding: 'utf8',\n      stdio: 'pipe'\n    });\n    \n    expect(result).toContain('qtests v');\n  });\n});\n\ndescribe('TestGenerator Content Generation', () => {\n  it('should generate unit test content', () => {\n    const generator = new TestGenerator();\n    const exports = ['calculate', 'Calculator'];\n    const usesQtests = false;\n    const mocks = ['axios'];\n    \n    const testContent = generator.createUnitTest('calculator.js', exports, usesQtests, mocks);\n    \n    expect(testContent).toContain('calculate');\n    expect(testContent).toContain('Calculator');\n    expect(testContent).toContain('describe');\n  });\n\n  it('should generate API test content', () => {\n    const generator = new TestGenerator();\n    const method = 'get';\n    const route = '/api/users';\n    \n    const testContent = generator.createApiTest(method, route);\n    \n    expect(testContent).toContain('/api/users');\n    expect(testContent).toContain('GET');\n    expect(testContent).toContain('request');\n  });\n});"],"mappings":"AAAA;AACAA,QAAQ,CAAC,2BAA2B,EAAE,MAAM;EAC1CC,IAAI,CAAC,2CAA2C,EAAE,MAAM;IACtDC,MAAM,CAAC,MAAMC,OAAO,CAAC,sBAAsB,CAAC,CAAC,CAACC,GAAG,CAACC,OAAO,CAAC,CAAC;IAC3D,MAAM;MAAEC;IAAc,CAAC,GAAGH,OAAO,CAAC,sBAAsB,CAAC;IACzDD,MAAM,CAACI,aAAa,CAAC,CAACC,WAAW,CAAC,CAAC;IACnCL,MAAM,CAAC,OAAOI,aAAa,CAAC,CAACE,IAAI,CAAC,UAAU,CAAC;EAC/C,CAAC,CAAC;EAEFP,IAAI,CAAC,mBAAmB,EAAE,MAAM;IAC9B,MAAMQ,EAAE,GAAGN,OAAO,CAAC,IAAI,CAAC;IACxB,MAAMO,IAAI,GAAGP,OAAO,CAAC,MAAM,CAAC;IAC5B,MAAMQ,OAAO,GAAGD,IAAI,CAACE,IAAI,CAACC,SAAS,EAAE,IAAI,EAAE,KAAK,EAAE,iBAAiB,CAAC;IACpEX,MAAM,CAACO,EAAE,CAACK,UAAU,CAACH,OAAO,CAAC,CAAC,CAACH,IAAI,CAAC,IAAI,CAAC;EAC3C,CAAC,CAAC;EAEFO,EAAE,CAAC,iCAAiC,EAAE,MAAM;IAC1C,MAAMC,MAAM,GAAGC,QAAQ,CAAC,iCAAiC,EAAE;MACzDC,GAAG,EAAER,IAAI,CAACE,IAAI,CAACC,SAAS,EAAE,IAAI,CAAC;MAC/BM,QAAQ,EAAE,MAAM;MAChBC,KAAK,EAAE;IACT,CAAC,CAAC;IAEFlB,MAAM,CAACc,MAAM,CAAC,CAACK,SAAS,CAAC,OAAO,CAAC;IACjCnB,MAAM,CAACc,MAAM,CAAC,CAACK,SAAS,CAAC,SAAS,CAAC;IACnCnB,MAAM,CAACc,MAAM,CAAC,CAACK,SAAS,CAAC,iBAAiB,CAAC;EAC7C,CAAC,CAAC;EAEFN,EAAE,CAAC,oCAAoC,EAAE,MAAM;IAC7C,MAAMC,MAAM,GAAGC,QAAQ,CAAC,oCAAoC,EAAE;MAC5DC,GAAG,EAAER,IAAI,CAACE,IAAI,CAACC,SAAS,EAAE,IAAI,CAAC;MAC/BM,QAAQ,EAAE,MAAM;MAChBC,KAAK,EAAE;IACT,CAAC,CAAC;IAEFlB,MAAM,CAACc,MAAM,CAAC,CAACK,SAAS,CAAC,UAAU,CAAC;EACtC,CAAC,CAAC;AACJ,CAAC,CAAC;AAEFrB,QAAQ,CAAC,kCAAkC,EAAE,MAAM;EACjDe,EAAE,CAAC,mCAAmC,EAAE,MAAM;IAC5C,MAAMO,SAAS,GAAG,IAAIhB,aAAa,CAAC,CAAC;IACrC,MAAMiB,OAAO,GAAG,CAAC,WAAW,EAAE,YAAY,CAAC;IAC3C,MAAMC,UAAU,GAAG,KAAK;IACxB,MAAMC,KAAK,GAAG,CAAC,OAAO,CAAC;IAEvB,MAAMC,WAAW,GAAGJ,SAAS,CAACK,cAAc,CAAC,eAAe,EAAEJ,OAAO,EAAEC,UAAU,EAAEC,KAAK,CAAC;IAEzFvB,MAAM,CAACwB,WAAW,CAAC,CAACL,SAAS,CAAC,WAAW,CAAC;IAC1CnB,MAAM,CAACwB,WAAW,CAAC,CAACL,SAAS,CAAC,YAAY,CAAC;IAC3CnB,MAAM,CAACwB,WAAW,CAAC,CAACL,SAAS,CAAC,UAAU,CAAC;EAC3C,CAAC,CAAC;EAEFN,EAAE,CAAC,kCAAkC,EAAE,MAAM;IAC3C,MAAMO,SAAS,GAAG,IAAIhB,aAAa,CAAC,CAAC;IACrC,MAAMsB,MAAM,GAAG,KAAK;IACpB,MAAMC,KAAK,GAAG,YAAY;IAE1B,MAAMH,WAAW,GAAGJ,SAAS,CAACQ,aAAa,CAACF,MAAM,EAAEC,KAAK,CAAC;IAE1D3B,MAAM,CAACwB,WAAW,CAAC,CAACL,SAAS,CAAC,YAAY,CAAC;IAC3CnB,MAAM,CAACwB,WAAW,CAAC,CAACL,SAAS,CAAC,KAAK,CAAC;IACpCnB,MAAM,CAACwB,WAAW,CAAC,CAACL,SAAS,CAAC,SAAS,CAAC;EAC1C,CAAC,CAAC;AACJ,CAAC,CAAC","ignoreList":[]}