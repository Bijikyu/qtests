{"version":3,"names":["executeWithLogs","require","emailHistory","sendEmail","emailData","to","Error","result","success","messageId","Date","now","Math","random","toString","substr","subject","timestamp","toISOString","push","getEmailHistory","clearEmailHistory","cleared","length","validateEmail","includes","module","exports"],"sources":["sendEmail.js"],"sourcesContent":["/**\n * Email Mock Utility for Testing - Working Implementation\n */\n\nconst { executeWithLogs } = require('../lib/logUtils');\n\n// Simple email history storage\nlet emailHistory = [];\n\n/**\n * Mock email sending function\n */\nfunction sendEmail(emailData) {\n  return executeWithLogs('sendEmail', async () => {\n    // Validate basic email structure\n    if (!emailData || !emailData.to) {\n      throw new Error('Email requires \"to\" field');\n    }\n    \n    // Create mock result\n    const result = {\n      success: true,\n      messageId: `mock-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`,\n      to: emailData.to,\n      subject: emailData.subject || '',\n      timestamp: new Date().toISOString()\n    };\n    \n    // Store in history\n    emailHistory.push({\n      ...emailData,\n      ...result\n    });\n    \n    return result;\n  }, emailData);\n}\n\n/**\n * Get email history\n */\nfunction getEmailHistory() {\n  return [...emailHistory]; // Return copy\n}\n\n/**\n * Clear email history\n */\nfunction clearEmailHistory() {\n  return executeWithLogs('clearEmailHistory', () => {\n    const cleared = emailHistory.length;\n    emailHistory = [];\n    return cleared;\n  });\n}\n\n/**\n * Validate email data\n */\nfunction validateEmail(emailData) {\n  return executeWithLogs('validateEmail', () => {\n    if (!emailData) return false;\n    if (!emailData.to) return false;\n    if (typeof emailData.to !== 'string') return false;\n    return emailData.to.includes('@');\n  }, emailData);\n}\n\nmodule.exports = {\n  sendEmail,\n  getEmailHistory,\n  clearEmailHistory,\n  validateEmail,\n  emailHistory: () => emailHistory // Function to access for debugging\n};"],"mappings":"AAAA;AACA;AACA;;AAEA,MAAM;EAAEA;AAAgB,CAAC,GAAGC,OAAO,CAAC,iBAAiB,CAAC;;AAEtD;AACA,IAAIC,YAAY,GAAG,EAAE;;AAErB;AACA;AACA;AACA,SAASC,SAASA,CAACC,SAAS,EAAE;EAC5B,OAAOJ,eAAe,CAAC,WAAW,EAAE,YAAY;IAC9C;IACA,IAAI,CAACI,SAAS,IAAI,CAACA,SAAS,CAACC,EAAE,EAAE;MAC/B,MAAM,IAAIC,KAAK,CAAC,2BAA2B,CAAC;IAC9C;;IAEA;IACA,MAAMC,MAAM,GAAG;MACbC,OAAO,EAAE,IAAI;MACbC,SAAS,EAAE,QAAQC,IAAI,CAACC,GAAG,CAAC,CAAC,IAAIC,IAAI,CAACC,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAC,CAACC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE;MAC1EV,EAAE,EAAED,SAAS,CAACC,EAAE;MAChBW,OAAO,EAAEZ,SAAS,CAACY,OAAO,IAAI,EAAE;MAChCC,SAAS,EAAE,IAAIP,IAAI,CAAC,CAAC,CAACQ,WAAW,CAAC;IACpC,CAAC;;IAED;IACAhB,YAAY,CAACiB,IAAI,CAAC;MAChB,GAAGf,SAAS;MACZ,GAAGG;IACL,CAAC,CAAC;IAEF,OAAOA,MAAM;EACf,CAAC,EAAEH,SAAS,CAAC;AACf;;AAEA;AACA;AACA;AACA,SAASgB,eAAeA,CAAA,EAAG;EACzB,OAAO,CAAC,GAAGlB,YAAY,CAAC,CAAC,CAAC;AAC5B;;AAEA;AACA;AACA;AACA,SAASmB,iBAAiBA,CAAA,EAAG;EAC3B,OAAOrB,eAAe,CAAC,mBAAmB,EAAE,MAAM;IAChD,MAAMsB,OAAO,GAAGpB,YAAY,CAACqB,MAAM;IACnCrB,YAAY,GAAG,EAAE;IACjB,OAAOoB,OAAO;EAChB,CAAC,CAAC;AACJ;;AAEA;AACA;AACA;AACA,SAASE,aAAaA,CAACpB,SAAS,EAAE;EAChC,OAAOJ,eAAe,CAAC,eAAe,EAAE,MAAM;IAC5C,IAAI,CAACI,SAAS,EAAE,OAAO,KAAK;IAC5B,IAAI,CAACA,SAAS,CAACC,EAAE,EAAE,OAAO,KAAK;IAC/B,IAAI,OAAOD,SAAS,CAACC,EAAE,KAAK,QAAQ,EAAE,OAAO,KAAK;IAClD,OAAOD,SAAS,CAACC,EAAE,CAACoB,QAAQ,CAAC,GAAG,CAAC;EACnC,CAAC,EAAErB,SAAS,CAAC;AACf;AAEAsB,MAAM,CAACC,OAAO,GAAG;EACfxB,SAAS;EACTiB,eAAe;EACfC,iBAAiB;EACjBG,aAAa;EACbtB,YAAY,EAAEA,CAAA,KAAMA,YAAY,CAAC;AACnC,CAAC","ignoreList":[]}