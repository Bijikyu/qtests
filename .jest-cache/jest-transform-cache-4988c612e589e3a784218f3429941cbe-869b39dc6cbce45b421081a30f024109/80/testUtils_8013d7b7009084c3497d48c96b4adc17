bf6db7076f0f7bb3562732bfbc7ab4dd
/**
 * Advanced Testing Utilities
 * 
 * This module provides advanced testing utilities for complex testing scenarios,
 * including comprehensive test suite management, helper functions, and pattern
 * elimination utilities. These are higher-level utilities that build upon the
 * core testing functionality.
 * 
 * Design philosophy:
 * - Eliminate duplicate patterns across test suites
 * - Provide comprehensive testing workflows
 * - Advanced helper functions for complex scenarios
 * - Framework-agnostic patterns supporting multiple test runners
 * 
 * Why advanced testing utilities are grouped together:
 * 1. All utilities provide sophisticated testing patterns
 * 2. They build upon core utilities to provide higher-level functionality
 * 3. Often used together in large-scale testing scenarios
 * 4. Share common patterns for advanced test management
 * 
 * Module organization rationale:
 * These utilities are grouped because they all serve the purpose of
 * providing advanced testing capabilities that go beyond basic mocking
 * and stubbing, offering comprehensive solutions for complex testing needs.
 */

// Import testHelpers for advanced testing scenarios
// testHelpers provides module reloading, response mocking, and other
// specialized utilities needed for integration and complex unit testing
const testHelpers = require('../utils/testHelpers');

// Import testSuite utilities for comprehensive test pattern elimination
// testSuite provides centralized setup, teardown, mocking, and assertion
// patterns to eliminate duplicate code across test suites
const testSuite = require('../utils/testSuite');

/**
 * Export advanced testing utilities
 * 
 * These utilities are exported together because they provide
 * complementary functionality for advanced testing scenarios:
 * 
 * - testHelpers: For complex testing scenarios and integration testing
 * - testSuite: For comprehensive test suite management and pattern elimination
 * 
 * Export strategy:
 * - Object export for consistent access patterns
 * - Descriptive property names that indicate purpose
 * - Grouped by advanced functionality for developer convenience
 */
module.exports = {
  // Advanced helper functions for complex testing scenarios
  testHelpers,
  // Comprehensive test suite utilities for pattern elimination
  testSuite
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJ0ZXN0SGVscGVycyIsInJlcXVpcmUiLCJ0ZXN0U3VpdGUiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZXMiOlsidGVzdFV0aWxzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQWR2YW5jZWQgVGVzdGluZyBVdGlsaXRpZXNcbiAqIFxuICogVGhpcyBtb2R1bGUgcHJvdmlkZXMgYWR2YW5jZWQgdGVzdGluZyB1dGlsaXRpZXMgZm9yIGNvbXBsZXggdGVzdGluZyBzY2VuYXJpb3MsXG4gKiBpbmNsdWRpbmcgY29tcHJlaGVuc2l2ZSB0ZXN0IHN1aXRlIG1hbmFnZW1lbnQsIGhlbHBlciBmdW5jdGlvbnMsIGFuZCBwYXR0ZXJuXG4gKiBlbGltaW5hdGlvbiB1dGlsaXRpZXMuIFRoZXNlIGFyZSBoaWdoZXItbGV2ZWwgdXRpbGl0aWVzIHRoYXQgYnVpbGQgdXBvbiB0aGVcbiAqIGNvcmUgdGVzdGluZyBmdW5jdGlvbmFsaXR5LlxuICogXG4gKiBEZXNpZ24gcGhpbG9zb3BoeTpcbiAqIC0gRWxpbWluYXRlIGR1cGxpY2F0ZSBwYXR0ZXJucyBhY3Jvc3MgdGVzdCBzdWl0ZXNcbiAqIC0gUHJvdmlkZSBjb21wcmVoZW5zaXZlIHRlc3Rpbmcgd29ya2Zsb3dzXG4gKiAtIEFkdmFuY2VkIGhlbHBlciBmdW5jdGlvbnMgZm9yIGNvbXBsZXggc2NlbmFyaW9zXG4gKiAtIEZyYW1ld29yay1hZ25vc3RpYyBwYXR0ZXJucyBzdXBwb3J0aW5nIG11bHRpcGxlIHRlc3QgcnVubmVyc1xuICogXG4gKiBXaHkgYWR2YW5jZWQgdGVzdGluZyB1dGlsaXRpZXMgYXJlIGdyb3VwZWQgdG9nZXRoZXI6XG4gKiAxLiBBbGwgdXRpbGl0aWVzIHByb3ZpZGUgc29waGlzdGljYXRlZCB0ZXN0aW5nIHBhdHRlcm5zXG4gKiAyLiBUaGV5IGJ1aWxkIHVwb24gY29yZSB1dGlsaXRpZXMgdG8gcHJvdmlkZSBoaWdoZXItbGV2ZWwgZnVuY3Rpb25hbGl0eVxuICogMy4gT2Z0ZW4gdXNlZCB0b2dldGhlciBpbiBsYXJnZS1zY2FsZSB0ZXN0aW5nIHNjZW5hcmlvc1xuICogNC4gU2hhcmUgY29tbW9uIHBhdHRlcm5zIGZvciBhZHZhbmNlZCB0ZXN0IG1hbmFnZW1lbnRcbiAqIFxuICogTW9kdWxlIG9yZ2FuaXphdGlvbiByYXRpb25hbGU6XG4gKiBUaGVzZSB1dGlsaXRpZXMgYXJlIGdyb3VwZWQgYmVjYXVzZSB0aGV5IGFsbCBzZXJ2ZSB0aGUgcHVycG9zZSBvZlxuICogcHJvdmlkaW5nIGFkdmFuY2VkIHRlc3RpbmcgY2FwYWJpbGl0aWVzIHRoYXQgZ28gYmV5b25kIGJhc2ljIG1vY2tpbmdcbiAqIGFuZCBzdHViYmluZywgb2ZmZXJpbmcgY29tcHJlaGVuc2l2ZSBzb2x1dGlvbnMgZm9yIGNvbXBsZXggdGVzdGluZyBuZWVkcy5cbiAqL1xuXG4vLyBJbXBvcnQgdGVzdEhlbHBlcnMgZm9yIGFkdmFuY2VkIHRlc3Rpbmcgc2NlbmFyaW9zXG4vLyB0ZXN0SGVscGVycyBwcm92aWRlcyBtb2R1bGUgcmVsb2FkaW5nLCByZXNwb25zZSBtb2NraW5nLCBhbmQgb3RoZXJcbi8vIHNwZWNpYWxpemVkIHV0aWxpdGllcyBuZWVkZWQgZm9yIGludGVncmF0aW9uIGFuZCBjb21wbGV4IHVuaXQgdGVzdGluZ1xuY29uc3QgdGVzdEhlbHBlcnMgPSByZXF1aXJlKCcuLi91dGlscy90ZXN0SGVscGVycycpO1xuXG4vLyBJbXBvcnQgdGVzdFN1aXRlIHV0aWxpdGllcyBmb3IgY29tcHJlaGVuc2l2ZSB0ZXN0IHBhdHRlcm4gZWxpbWluYXRpb25cbi8vIHRlc3RTdWl0ZSBwcm92aWRlcyBjZW50cmFsaXplZCBzZXR1cCwgdGVhcmRvd24sIG1vY2tpbmcsIGFuZCBhc3NlcnRpb25cbi8vIHBhdHRlcm5zIHRvIGVsaW1pbmF0ZSBkdXBsaWNhdGUgY29kZSBhY3Jvc3MgdGVzdCBzdWl0ZXNcbmNvbnN0IHRlc3RTdWl0ZSA9IHJlcXVpcmUoJy4uL3V0aWxzL3Rlc3RTdWl0ZScpO1xuXG4vKipcbiAqIEV4cG9ydCBhZHZhbmNlZCB0ZXN0aW5nIHV0aWxpdGllc1xuICogXG4gKiBUaGVzZSB1dGlsaXRpZXMgYXJlIGV4cG9ydGVkIHRvZ2V0aGVyIGJlY2F1c2UgdGhleSBwcm92aWRlXG4gKiBjb21wbGVtZW50YXJ5IGZ1bmN0aW9uYWxpdHkgZm9yIGFkdmFuY2VkIHRlc3Rpbmcgc2NlbmFyaW9zOlxuICogXG4gKiAtIHRlc3RIZWxwZXJzOiBGb3IgY29tcGxleCB0ZXN0aW5nIHNjZW5hcmlvcyBhbmQgaW50ZWdyYXRpb24gdGVzdGluZ1xuICogLSB0ZXN0U3VpdGU6IEZvciBjb21wcmVoZW5zaXZlIHRlc3Qgc3VpdGUgbWFuYWdlbWVudCBhbmQgcGF0dGVybiBlbGltaW5hdGlvblxuICogXG4gKiBFeHBvcnQgc3RyYXRlZ3k6XG4gKiAtIE9iamVjdCBleHBvcnQgZm9yIGNvbnNpc3RlbnQgYWNjZXNzIHBhdHRlcm5zXG4gKiAtIERlc2NyaXB0aXZlIHByb3BlcnR5IG5hbWVzIHRoYXQgaW5kaWNhdGUgcHVycG9zZVxuICogLSBHcm91cGVkIGJ5IGFkdmFuY2VkIGZ1bmN0aW9uYWxpdHkgZm9yIGRldmVsb3BlciBjb252ZW5pZW5jZVxuICovXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgLy8gQWR2YW5jZWQgaGVscGVyIGZ1bmN0aW9ucyBmb3IgY29tcGxleCB0ZXN0aW5nIHNjZW5hcmlvc1xuICB0ZXN0SGVscGVycyxcbiAgXG4gIC8vIENvbXByZWhlbnNpdmUgdGVzdCBzdWl0ZSB1dGlsaXRpZXMgZm9yIHBhdHRlcm4gZWxpbWluYXRpb25cbiAgdGVzdFN1aXRlXG59OyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsTUFBTUEsV0FBVyxHQUFHQyxPQUFPLENBQUMsc0JBQXNCLENBQUM7O0FBRW5EO0FBQ0E7QUFDQTtBQUNBLE1BQU1DLFNBQVMsR0FBR0QsT0FBTyxDQUFDLG9CQUFvQixDQUFDOztBQUUvQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0FFLE1BQU0sQ0FBQ0MsT0FBTyxHQUFHO0VBQ2Y7RUFDQUosV0FBVztFQUVYO0VBQ0FFO0FBQ0YsQ0FBQyIsImlnbm9yZUxpc3QiOltdfQ==