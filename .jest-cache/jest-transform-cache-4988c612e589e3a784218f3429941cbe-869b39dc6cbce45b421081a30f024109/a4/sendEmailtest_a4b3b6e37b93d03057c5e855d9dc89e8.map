{"version":3,"names":["sendEmail","getEmailHistory","clearEmailHistory","require","describe","beforeEach","test","emailData","to","subject","text","result","expect","success","toBe","messageId","toBeDefined","history","toHaveLength"],"sources":["sendEmail.test.js"],"sourcesContent":["/**\n * Send Email Integration Tests - Core functionality\n */\n\nconst { sendEmail, getEmailHistory, clearEmailHistory } = require('../utils/sendEmail');\n\ndescribe('Send Email Integration', () => {\n  \n  beforeEach(() => {\n    clearEmailHistory();\n  });\n  \n  test('sendEmail captures email data', async () => {\n    const emailData = {\n      to: 'test@example.com',\n      subject: 'Test Email',\n      text: 'This is a test email'\n    };\n    \n    const result = await sendEmail(emailData);\n    \n    expect(result.success).toBe(true);\n    expect(result.messageId).toBeDefined();\n    expect(result.to).toBe('test@example.com');\n  });\n  \n  test('getEmailHistory tracks sent emails', async () => {\n    await sendEmail({\n      to: 'user1@example.com',\n      subject: 'Email 1',\n      text: 'First email'\n    });\n    \n    await sendEmail({\n      to: 'user2@example.com', \n      subject: 'Email 2',\n      text: 'Second email'\n    });\n    \n    const history = getEmailHistory();\n    expect(history).toHaveLength(2);\n    expect(history[0].to).toBe('user1@example.com');\n    expect(history[1].to).toBe('user2@example.com');\n  });\n  \n  test('clearEmailHistory resets tracking', async () => {\n    await sendEmail({\n      to: 'test@example.com',\n      subject: 'Test',\n      text: 'Test email'\n    });\n    \n    expect(getEmailHistory()).toHaveLength(1);\n    \n    clearEmailHistory();\n    expect(getEmailHistory()).toHaveLength(0);\n  });\n});"],"mappings":"AAAA;AACA;AACA;;AAEA,MAAM;EAAEA,SAAS;EAAEC,eAAe;EAAEC;AAAkB,CAAC,GAAGC,OAAO,CAAC,oBAAoB,CAAC;AAEvFC,QAAQ,CAAC,wBAAwB,EAAE,MAAM;EAEvCC,UAAU,CAAC,MAAM;IACfH,iBAAiB,CAAC,CAAC;EACrB,CAAC,CAAC;EAEFI,IAAI,CAAC,+BAA+B,EAAE,YAAY;IAChD,MAAMC,SAAS,GAAG;MAChBC,EAAE,EAAE,kBAAkB;MACtBC,OAAO,EAAE,YAAY;MACrBC,IAAI,EAAE;IACR,CAAC;IAED,MAAMC,MAAM,GAAG,MAAMX,SAAS,CAACO,SAAS,CAAC;IAEzCK,MAAM,CAACD,MAAM,CAACE,OAAO,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC;IACjCF,MAAM,CAACD,MAAM,CAACI,SAAS,CAAC,CAACC,WAAW,CAAC,CAAC;IACtCJ,MAAM,CAACD,MAAM,CAACH,EAAE,CAAC,CAACM,IAAI,CAAC,kBAAkB,CAAC;EAC5C,CAAC,CAAC;EAEFR,IAAI,CAAC,oCAAoC,EAAE,YAAY;IACrD,MAAMN,SAAS,CAAC;MACdQ,EAAE,EAAE,mBAAmB;MACvBC,OAAO,EAAE,SAAS;MAClBC,IAAI,EAAE;IACR,CAAC,CAAC;IAEF,MAAMV,SAAS,CAAC;MACdQ,EAAE,EAAE,mBAAmB;MACvBC,OAAO,EAAE,SAAS;MAClBC,IAAI,EAAE;IACR,CAAC,CAAC;IAEF,MAAMO,OAAO,GAAGhB,eAAe,CAAC,CAAC;IACjCW,MAAM,CAACK,OAAO,CAAC,CAACC,YAAY,CAAC,CAAC,CAAC;IAC/BN,MAAM,CAACK,OAAO,CAAC,CAAC,CAAC,CAACT,EAAE,CAAC,CAACM,IAAI,CAAC,mBAAmB,CAAC;IAC/CF,MAAM,CAACK,OAAO,CAAC,CAAC,CAAC,CAACT,EAAE,CAAC,CAACM,IAAI,CAAC,mBAAmB,CAAC;EACjD,CAAC,CAAC;EAEFR,IAAI,CAAC,mCAAmC,EAAE,YAAY;IACpD,MAAMN,SAAS,CAAC;MACdQ,EAAE,EAAE,kBAAkB;MACtBC,OAAO,EAAE,MAAM;MACfC,IAAI,EAAE;IACR,CAAC,CAAC;IAEFE,MAAM,CAACX,eAAe,CAAC,CAAC,CAAC,CAACiB,YAAY,CAAC,CAAC,CAAC;IAEzChB,iBAAiB,CAAC,CAAC;IACnBU,MAAM,CAACX,eAAe,CAAC,CAAC,CAAC,CAACiB,YAAY,CAAC,CAAC,CAAC;EAC3C,CAAC,CAAC;AACJ,CAAC,CAAC","ignoreList":[]}