{"version":3,"names":["backupEnvVars","varNames","console","log","length","backup","forEach","varName","process","env","Object","keys","error","message","restoreEnvVars","backupKeys","isSelectiveRestore","key","undefined","currentKeys","addedKeys","filter","entries","value","withSavedEnv","fn","result","module","exports"],"sources":["envManager.js"],"sourcesContent":["/**\n * Environment Variable Management Utility\n * \n * This module focuses solely on environment variable backup, restoration, and management\n * for testing scenarios. It provides selective and complete environment variable control.\n */\n\n/**\n * Backup environment variables (selective or complete)\n * \n * @param {...string} varNames - Specific variable names to backup (if provided)\n * @returns {Object} Backup object containing environment variable state\n */\nfunction backupEnvVars(...varNames) {\n  console.log(`backupEnvVars is running with ${varNames.length} variables`);\n  \n  try {\n    let backup = {};\n    \n    if (varNames.length > 0) {\n      // Selective backup - only specified variables\n      varNames.forEach(varName => {\n        backup[varName] = process.env[varName];\n      });\n    } else {\n      // Complete backup - all environment variables\n      backup = { ...process.env };\n    }\n    \n    console.log(`backupEnvVars is returning backup with ${Object.keys(backup).length} variables`);\n    return backup;\n  } catch (error) {\n    console.log(`backupEnvVars error ${error.message}`);\n    throw error;\n  }\n}\n\n/**\n * Restore environment variables from backup\n * \n * @param {Object} backup - Backup object from backupEnvVars\n */\nfunction restoreEnvVars(backup) {\n  console.log(`restoreEnvVars is running with ${backup ? 'backup' : 'null'}`);\n  \n  try {\n    if (!backup || typeof backup !== 'object') {\n      console.log(`restoreEnvVars skipping invalid backup`);\n      return;\n    }\n    \n    const backupKeys = Object.keys(backup);\n    const isSelectiveRestore = backupKeys.length < 50; // Heuristic for selective vs complete\n    \n    if (isSelectiveRestore) {\n      // Selective restoration - only restore specified variables\n      backupKeys.forEach(key => {\n        if (backup[key] === undefined) {\n          delete process.env[key];\n        } else {\n          process.env[key] = backup[key];\n        }\n      });\n    } else {\n      // Complete restoration - remove added variables and restore all\n      const currentKeys = Object.keys(process.env);\n      const addedKeys = currentKeys.filter(key => !(key in backup));\n      \n      // Remove variables that weren't in the backup\n      addedKeys.forEach(key => {\n        delete process.env[key];\n      });\n      \n      // Restore all backed up variables\n      Object.entries(backup).forEach(([key, value]) => {\n        if (value === undefined) {\n          delete process.env[key];\n        } else {\n          process.env[key] = value;\n        }\n      });\n    }\n    \n    console.log(`restoreEnvVars completed restoration`);\n  } catch (error) {\n    console.log(`restoreEnvVars error ${error.message}`);\n    throw error;\n  }\n}\n\n/**\n * Execute a function with saved environment that is automatically restored\n * \n * @param {Function} fn - Function to execute with saved environment\n * @returns {any} Result of the function execution\n */\nfunction withSavedEnv(fn) {\n  console.log(`withSavedEnv is running with function`);\n  \n  try {\n    const backup = backupEnvVars();\n    \n    try {\n      const result = fn();\n      console.log(`withSavedEnv is returning result`);\n      return result;\n    } finally {\n      restoreEnvVars(backup);\n    }\n  } catch (error) {\n    console.log(`withSavedEnv error ${error.message}`);\n    throw error;\n  }\n}\n\nmodule.exports = {\n  backupEnvVars,\n  restoreEnvVars,\n  withSavedEnv\n};"],"mappings":"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","ignoreList":[]}