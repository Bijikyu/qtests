{"version":3,"names":["execFileSync","require","path","runToggleScript","script","join","__dirname","out","process","execPath","env","NODE_PATH","toString","lastLine","trim","split","pop","JSON","parse","test","results","first","second","third","expect","offline","toBe","axiosStub","qType","axiosReal"],"sources":["offlineIntegration.test.js"],"sourcesContent":["const { execFileSync } = require('child_process'); // (import execFileSync for child process)\nconst path = require('path'); // (path helper)\n\nfunction runToggleScript(){ // (execute a node script toggling offline mode)\n  const script = `\n    const offline = require('${path.join(__dirname,'../utils/offlineMode')}');\n    const stubAxios = require('${path.join(__dirname,'../stubs/axios')}');\n    const realAxios = require(require.resolve('axios'));\n    const states = []; \n    offline.setOfflineMode(true);\n    states.push({ offline: offline.isOfflineMode(), axiosStub: offline.getAxios() === stubAxios, qType: typeof offline.getQerrors().qerrors });\n    offline.setOfflineMode(false);\n    states.push({ offline: offline.isOfflineMode(), axiosReal: offline.getAxios() === realAxios, qType: typeof offline.getQerrors().qerrors });\n    offline.setOfflineMode(true);\n    states.push({ offline: offline.isOfflineMode(), axiosStub: offline.getAxios() === stubAxios, qType: typeof offline.getQerrors().qerrors });\n    console.log(JSON.stringify(states));\n  `; // (script toggles offline mode and captures results)\n  const out = execFileSync(process.execPath, ['-e', script], { env: { NODE_PATH: '' } }).toString(); // (run script)\n  const lastLine = out.trim().split('\\n').pop(); // (extract JSON line ignoring logs)\n  return JSON.parse(lastLine); // (parse child output)\n}\n\ntest('offlineMode toggles axios and qerrors correctly', () => { // (jest test verifying offlineMode integration)\n  const results = runToggleScript(); // (run toggle script)\n  const [first, second, third] = results; // (destructure results)\n  expect(first.offline).toBe(true); // (initial mode should be offline)\n  expect(first.axiosStub).toBe(true); // (axios stub used when offline)\n  expect(first.qType).toBe('function'); // (qerrors function present)\n  expect(second.offline).toBe(false); // (mode toggled to online)\n  expect(second.axiosReal).toBe(true); // (real axios returned when online)\n  expect(second.qType).toBe('function'); // (qerrors function still present)\n  expect(third.offline).toBe(true); // (mode toggled back to offline)\n  expect(third.axiosStub).toBe(true); // (axios stub restored)\n  expect(third.qType).toBe('function'); // (qerrors function still present)\n});\n"],"mappings":"AAAA,MAAM;EAAEA;AAAa,CAAC,GAAGC,OAAO,CAAC,eAAe,CAAC,CAAC,CAAC;AACnD,MAAMC,IAAI,GAAGD,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;;AAE9B,SAASE,eAAeA,CAAA,EAAE;EAAE;EAC1B,MAAMC,MAAM,GAAG;AACjB,+BAA+BF,IAAI,CAACG,IAAI,CAACC,SAAS,EAAC,sBAAsB,CAAC;AAC1E,iCAAiCJ,IAAI,CAACG,IAAI,CAACC,SAAS,EAAC,gBAAgB,CAAC;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,CAAC,CAAC;EACH,MAAMC,GAAG,GAAGP,YAAY,CAACQ,OAAO,CAACC,QAAQ,EAAE,CAAC,IAAI,EAAEL,MAAM,CAAC,EAAE;IAAEM,GAAG,EAAE;MAAEC,SAAS,EAAE;IAAG;EAAE,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,CAAC,CAAC;EACnG,MAAMC,QAAQ,GAAGN,GAAG,CAACO,IAAI,CAAC,CAAC,CAACC,KAAK,CAAC,IAAI,CAAC,CAACC,GAAG,CAAC,CAAC,CAAC,CAAC;EAC/C,OAAOC,IAAI,CAACC,KAAK,CAACL,QAAQ,CAAC,CAAC,CAAC;AAC/B;AAEAM,IAAI,CAAC,iDAAiD,EAAE,MAAM;EAAE;EAC9D,MAAMC,OAAO,GAAGjB,eAAe,CAAC,CAAC,CAAC,CAAC;EACnC,MAAM,CAACkB,KAAK,EAAEC,MAAM,EAAEC,KAAK,CAAC,GAAGH,OAAO,CAAC,CAAC;EACxCI,MAAM,CAACH,KAAK,CAACI,OAAO,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;EAClCF,MAAM,CAACH,KAAK,CAACM,SAAS,CAAC,CAACD,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;EACpCF,MAAM,CAACH,KAAK,CAACO,KAAK,CAAC,CAACF,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;EACtCF,MAAM,CAACF,MAAM,CAACG,OAAO,CAAC,CAACC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;EACpCF,MAAM,CAACF,MAAM,CAACO,SAAS,CAAC,CAACH,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;EACrCF,MAAM,CAACF,MAAM,CAACM,KAAK,CAAC,CAACF,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;EACvCF,MAAM,CAACD,KAAK,CAACE,OAAO,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;EAClCF,MAAM,CAACD,KAAK,CAACI,SAAS,CAAC,CAACD,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;EACpCF,MAAM,CAACD,KAAK,CAACK,KAAK,CAAC,CAACF,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;AACxC,CAAC,CAAC","ignoreList":[]}