{"version":3,"names":["generateKey","appOrSuffix","allowedApi","console","log","use","get","post","supertest","require","response","send","error","message","suffix","Date","now","toString","key","module","exports"],"sources":["keyGenerator.js"],"sourcesContent":["/**\n * API Key Generator Utility\n * \n * This module focuses solely on generating test API keys for testing scenarios.\n * It provides both direct key generation and HTTP endpoint testing capabilities.\n */\n\n/**\n * Generate API key for testing scenarios\n * \n * This function creates test API keys with optional HTTP app testing support.\n * It supports both direct key generation and API endpoint testing patterns.\n * \n * @param {string|Object} appOrSuffix - Either an Express app for HTTP testing or a suffix string\n * @param {string} allowedApi - Optional API identifier for HTTP testing\n * @returns {Promise<string|Object>} Generated key string or HTTP response object\n */\nasync function generateKey(appOrSuffix, allowedApi) {\n  console.log(`generateKey is running with ${typeof appOrSuffix} ${allowedApi || 'none'}`);\n  \n  try {\n    // Check if first parameter is an Express app (has use/get/post methods)\n    if (appOrSuffix && typeof appOrSuffix === 'object' && \n        (appOrSuffix.use || appOrSuffix.get || appOrSuffix.post)) {\n      \n      // HTTP endpoint testing mode\n      try {\n        const { supertest } = require('../httpTest');\n        const response = await supertest(appOrSuffix)\n          .post('/api/generate-key')\n          .send({ allowedApi: allowedApi });\n        \n        console.log(`generateKey is returning HTTP response`);\n        return response;\n      } catch (error) {\n        console.log(`generateKey HTTP test error: ${error.message}`);\n        throw error;\n      }\n    } else {\n      // Direct key generation mode\n      const suffix = appOrSuffix || Date.now().toString();\n      const key = `test-api-key-${suffix}`;\n      \n      console.log(`generateKey is returning direct key`);\n      return key;\n    }\n  } catch (error) {\n    console.log(`generateKey error ${error.message}`);\n    throw error;\n  }\n}\n\nmodule.exports = {\n  generateKey\n};"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAeA,WAAWA,CAACC,WAAW,EAAEC,UAAU,EAAE;EAClDC,OAAO,CAACC,GAAG,CAAC,+BAA+B,OAAOH,WAAW,IAAIC,UAAU,IAAI,MAAM,EAAE,CAAC;EAExF,IAAI;IACF;IACA,IAAID,WAAW,IAAI,OAAOA,WAAW,KAAK,QAAQ,KAC7CA,WAAW,CAACI,GAAG,IAAIJ,WAAW,CAACK,GAAG,IAAIL,WAAW,CAACM,IAAI,CAAC,EAAE;MAE5D;MACA,IAAI;QACF,MAAM;UAAEC;QAAU,CAAC,GAAGC,OAAO,CAAC,aAAa,CAAC;QAC5C,MAAMC,QAAQ,GAAG,MAAMF,SAAS,CAACP,WAAW,CAAC,CAC1CM,IAAI,CAAC,mBAAmB,CAAC,CACzBI,IAAI,CAAC;UAAET,UAAU,EAAEA;QAAW,CAAC,CAAC;QAEnCC,OAAO,CAACC,GAAG,CAAC,wCAAwC,CAAC;QACrD,OAAOM,QAAQ;MACjB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdT,OAAO,CAACC,GAAG,CAAC,gCAAgCQ,KAAK,CAACC,OAAO,EAAE,CAAC;QAC5D,MAAMD,KAAK;MACb;IACF,CAAC,MAAM;MACL;MACA,MAAME,MAAM,GAAGb,WAAW,IAAIc,IAAI,CAACC,GAAG,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC;MACnD,MAAMC,GAAG,GAAG,gBAAgBJ,MAAM,EAAE;MAEpCX,OAAO,CAACC,GAAG,CAAC,qCAAqC,CAAC;MAClD,OAAOc,GAAG;IACZ;EACF,CAAC,CAAC,OAAON,KAAK,EAAE;IACdT,OAAO,CAACC,GAAG,CAAC,qBAAqBQ,KAAK,CAACC,OAAO,EAAE,CAAC;IACjD,MAAMD,KAAK;EACb;AACF;AAEAO,MAAM,CAACC,OAAO,GAAG;EACfpB;AACF,CAAC","ignoreList":[]}