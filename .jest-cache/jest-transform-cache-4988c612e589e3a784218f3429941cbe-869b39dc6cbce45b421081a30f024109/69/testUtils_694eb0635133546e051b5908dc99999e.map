{"file":"/home/runner/workspace/lib/testUtils.ts","mappings":";AAAA;;;;;;;;;;;;;;;;;;;;;;;;GAwBG;;;;;;AAEH,oDAAoD;AACpD,qEAAqE;AACrE,wEAAwE;AACxE,6EAAkD;AAuBhD,sBAvBK,wBAAW,CAuBL;AArBb,wEAAwE;AACxE,yEAAyE;AACzE,0DAA0D;AAC1D,yEAA8C;AAqB5C,oBArBK,sBAAS,CAqBL","names":[],"sources":["/home/runner/workspace/lib/testUtils.ts"],"sourcesContent":["/**\n * Advanced Testing Utilities\n * \n * This module provides advanced testing utilities for complex testing scenarios,\n * including comprehensive test suite management, helper functions, and pattern\n * elimination utilities. These are higher-level utilities that build upon the\n * core testing functionality.\n * \n * Design philosophy:\n * - Eliminate duplicate patterns across test suites\n * - Provide comprehensive testing workflows\n * - Advanced helper functions for complex scenarios\n * - Framework-agnostic patterns supporting multiple test runners\n * \n * Why advanced testing utilities are grouped together:\n * 1. All utilities provide sophisticated testing patterns\n * 2. They build upon core utilities to provide higher-level functionality\n * 3. Often used together in large-scale testing scenarios\n * 4. Share common patterns for advanced test management\n * \n * Module organization rationale:\n * These utilities are grouped because they all serve the purpose of\n * providing advanced testing capabilities that go beyond basic mocking\n * and stubbing, offering comprehensive solutions for complex testing needs.\n */\n\n// Import testHelpers for advanced testing scenarios\n// testHelpers provides module reloading, response mocking, and other\n// specialized utilities needed for integration and complex unit testing\nimport testHelpers from '../utils/testHelpers.js';\n\n// Import testSuite utilities for comprehensive test pattern elimination\n// testSuite provides centralized setup, teardown, mocking, and assertion\n// patterns to eliminate duplicate code across test suites\nimport testSuite from '../utils/testSuite.js';\n\n/**\n * Export advanced testing utilities\n * \n * These utilities are exported together because they provide\n * complementary functionality for advanced testing scenarios:\n * \n * - testHelpers: For complex testing scenarios and integration testing\n * - testSuite: For comprehensive test suite management and pattern elimination\n * \n * Export strategy:\n * - Named exports for ES module compatibility\n * - Descriptive property names that indicate purpose\n * - Grouped by advanced functionality for developer convenience\n */\nexport {\n  // Advanced helper functions for complex testing scenarios\n  testHelpers,\n  \n  // Comprehensive test suite utilities for pattern elimination\n  testSuite\n};"],"version":3}