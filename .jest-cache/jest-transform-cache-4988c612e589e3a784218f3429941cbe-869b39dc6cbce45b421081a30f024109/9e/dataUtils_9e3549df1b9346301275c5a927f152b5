05f8b31c13698027508c11a5a895f9e8
"use strict";
/**
 * Data and Database Testing Utilities
 *
 * This module provides utilities for database mocking, model simulation,
 * and data generation for testing scenarios. These utilities help test
 * data-dependent applications without requiring actual database connections.
 *
 * Design philosophy:
 * - Database-free testing for fast, isolated tests
 * - Realistic data generation for comprehensive testing
 * - In-memory model simulation with full API compatibility
 * - Email system mocking for notification testing
 *
 * Why data utilities are grouped together:
 * 1. All utilities deal with data persistence and generation
 * 2. They provide alternatives to external data dependencies
 * 3. Often used together in application testing scenarios
 * 4. Share common patterns for entity creation and management
 *
 * Module organization rationale:
 * These utilities are grouped because they all serve the purpose of
 * providing data and persistence layer testing without external dependencies,
 * offering different levels of abstraction for various testing needs.
 */
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.sendEmail = exports.mockModels = void 0;
// Import mockModels for in-memory database model simulation
// mockModels provides Mongoose-compatible models without database dependencies
// for testing data-dependent applications with full CRUD operations
const mockModels_js_1 = __importDefault(require("../utils/mockModels.js"));
exports.mockModels = mockModels_js_1.default;
// Import sendEmail utility for email system mocking
// sendEmail provides lightweight email mocking for testing notification systems
// without requiring external mail service configuration or actual email delivery
const sendEmail_js_1 = __importDefault(require("../utils/sendEmail.js"));
exports.sendEmail = sendEmail_js_1.default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiL2hvbWUvcnVubmVyL3dvcmtzcGFjZS9saWIvZGF0YVV0aWxzLnRzIiwibWFwcGluZ3MiOiI7QUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7R0F1Qkc7Ozs7OztBQUVILDREQUE0RDtBQUM1RCwrRUFBK0U7QUFDL0Usb0VBQW9FO0FBQ3BFLDJFQUFnRDtBQXVCOUMscUJBdkJLLHVCQUFVLENBdUJMO0FBckJaLG9EQUFvRDtBQUNwRCxnRkFBZ0Y7QUFDaEYsaUZBQWlGO0FBQ2pGLHlFQUE4QztBQXFCNUMsb0JBckJLLHNCQUFTLENBcUJMIiwibmFtZXMiOltdLCJzb3VyY2VzIjpbIi9ob21lL3J1bm5lci93b3Jrc3BhY2UvbGliL2RhdGFVdGlscy50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIERhdGEgYW5kIERhdGFiYXNlIFRlc3RpbmcgVXRpbGl0aWVzXG4gKiBcbiAqIFRoaXMgbW9kdWxlIHByb3ZpZGVzIHV0aWxpdGllcyBmb3IgZGF0YWJhc2UgbW9ja2luZywgbW9kZWwgc2ltdWxhdGlvbixcbiAqIGFuZCBkYXRhIGdlbmVyYXRpb24gZm9yIHRlc3Rpbmcgc2NlbmFyaW9zLiBUaGVzZSB1dGlsaXRpZXMgaGVscCB0ZXN0XG4gKiBkYXRhLWRlcGVuZGVudCBhcHBsaWNhdGlvbnMgd2l0aG91dCByZXF1aXJpbmcgYWN0dWFsIGRhdGFiYXNlIGNvbm5lY3Rpb25zLlxuICogXG4gKiBEZXNpZ24gcGhpbG9zb3BoeTpcbiAqIC0gRGF0YWJhc2UtZnJlZSB0ZXN0aW5nIGZvciBmYXN0LCBpc29sYXRlZCB0ZXN0c1xuICogLSBSZWFsaXN0aWMgZGF0YSBnZW5lcmF0aW9uIGZvciBjb21wcmVoZW5zaXZlIHRlc3RpbmdcbiAqIC0gSW4tbWVtb3J5IG1vZGVsIHNpbXVsYXRpb24gd2l0aCBmdWxsIEFQSSBjb21wYXRpYmlsaXR5XG4gKiAtIEVtYWlsIHN5c3RlbSBtb2NraW5nIGZvciBub3RpZmljYXRpb24gdGVzdGluZ1xuICogXG4gKiBXaHkgZGF0YSB1dGlsaXRpZXMgYXJlIGdyb3VwZWQgdG9nZXRoZXI6XG4gKiAxLiBBbGwgdXRpbGl0aWVzIGRlYWwgd2l0aCBkYXRhIHBlcnNpc3RlbmNlIGFuZCBnZW5lcmF0aW9uXG4gKiAyLiBUaGV5IHByb3ZpZGUgYWx0ZXJuYXRpdmVzIHRvIGV4dGVybmFsIGRhdGEgZGVwZW5kZW5jaWVzXG4gKiAzLiBPZnRlbiB1c2VkIHRvZ2V0aGVyIGluIGFwcGxpY2F0aW9uIHRlc3Rpbmcgc2NlbmFyaW9zXG4gKiA0LiBTaGFyZSBjb21tb24gcGF0dGVybnMgZm9yIGVudGl0eSBjcmVhdGlvbiBhbmQgbWFuYWdlbWVudFxuICogXG4gKiBNb2R1bGUgb3JnYW5pemF0aW9uIHJhdGlvbmFsZTpcbiAqIFRoZXNlIHV0aWxpdGllcyBhcmUgZ3JvdXBlZCBiZWNhdXNlIHRoZXkgYWxsIHNlcnZlIHRoZSBwdXJwb3NlIG9mXG4gKiBwcm92aWRpbmcgZGF0YSBhbmQgcGVyc2lzdGVuY2UgbGF5ZXIgdGVzdGluZyB3aXRob3V0IGV4dGVybmFsIGRlcGVuZGVuY2llcyxcbiAqIG9mZmVyaW5nIGRpZmZlcmVudCBsZXZlbHMgb2YgYWJzdHJhY3Rpb24gZm9yIHZhcmlvdXMgdGVzdGluZyBuZWVkcy5cbiAqL1xuXG4vLyBJbXBvcnQgbW9ja01vZGVscyBmb3IgaW4tbWVtb3J5IGRhdGFiYXNlIG1vZGVsIHNpbXVsYXRpb25cbi8vIG1vY2tNb2RlbHMgcHJvdmlkZXMgTW9uZ29vc2UtY29tcGF0aWJsZSBtb2RlbHMgd2l0aG91dCBkYXRhYmFzZSBkZXBlbmRlbmNpZXNcbi8vIGZvciB0ZXN0aW5nIGRhdGEtZGVwZW5kZW50IGFwcGxpY2F0aW9ucyB3aXRoIGZ1bGwgQ1JVRCBvcGVyYXRpb25zXG5pbXBvcnQgbW9ja01vZGVscyBmcm9tICcuLi91dGlscy9tb2NrTW9kZWxzLmpzJztcblxuLy8gSW1wb3J0IHNlbmRFbWFpbCB1dGlsaXR5IGZvciBlbWFpbCBzeXN0ZW0gbW9ja2luZ1xuLy8gc2VuZEVtYWlsIHByb3ZpZGVzIGxpZ2h0d2VpZ2h0IGVtYWlsIG1vY2tpbmcgZm9yIHRlc3Rpbmcgbm90aWZpY2F0aW9uIHN5c3RlbXNcbi8vIHdpdGhvdXQgcmVxdWlyaW5nIGV4dGVybmFsIG1haWwgc2VydmljZSBjb25maWd1cmF0aW9uIG9yIGFjdHVhbCBlbWFpbCBkZWxpdmVyeVxuaW1wb3J0IHNlbmRFbWFpbCBmcm9tICcuLi91dGlscy9zZW5kRW1haWwuanMnO1xuXG4vKipcbiAqIEV4cG9ydCBkYXRhIGFuZCBkYXRhYmFzZSB0ZXN0aW5nIHV0aWxpdGllc1xuICogXG4gKiBUaGVzZSB1dGlsaXRpZXMgYXJlIGV4cG9ydGVkIHRvZ2V0aGVyIGJlY2F1c2UgdGhleSBwcm92aWRlXG4gKiBjb21wbGVtZW50YXJ5IGZ1bmN0aW9uYWxpdHkgZm9yIGRhdGEgbGF5ZXIgdGVzdGluZzpcbiAqIFxuICogLSBtb2NrTW9kZWxzOiBGb3IgZGF0YWJhc2UgbW9kZWwgc2ltdWxhdGlvbiBhbmQgQ1JVRCBvcGVyYXRpb25zXG4gKiAtIHNlbmRFbWFpbDogRm9yIGVtYWlsIHN5c3RlbSBtb2NraW5nIGFuZCBub3RpZmljYXRpb24gdGVzdGluZ1xuICogXG4gKiBFeHBvcnQgc3RyYXRlZ3k6XG4gKiAtIE5hbWVkIGV4cG9ydHMgZm9yIEVTIG1vZHVsZSBjb21wYXRpYmlsaXR5XG4gKiAtIERlc2NyaXB0aXZlIHByb3BlcnR5IG5hbWVzIHRoYXQgaW5kaWNhdGUgcHVycG9zZVxuICogLSBHcm91cGVkIGJ5IGRhdGEtcmVsYXRlZCBmdW5jdGlvbmFsaXR5IGZvciBkZXZlbG9wZXIgY29udmVuaWVuY2VcbiAqL1xuZXhwb3J0IHtcbiAgLy8gSW4tbWVtb3J5IGRhdGFiYXNlIG1vZGVsIHNpbXVsYXRpb24gd2l0aCBNb25nb29zZSBjb21wYXRpYmlsaXR5XG4gIG1vY2tNb2RlbHMsXG4gIFxuICAvLyBFbWFpbCBzeXN0ZW0gbW9ja2luZyBmb3Igbm90aWZpY2F0aW9uIHRlc3RpbmdcbiAgc2VuZEVtYWlsXG59OyJdLCJ2ZXJzaW9uIjozfQ==