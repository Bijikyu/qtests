{"version":3,"names":["testEnv","require","coreUtils","httpUtils","dataUtils","testUtils","module","exports","core","http","data","test"],"sources":["envUtils.js"],"sourcesContent":["\n/**\n * Environment Management Utilities\n * \n * This module provides utilities specifically for managing test environments,\n * including environment variable manipulation and test isolation. These utilities\n * help create isolated, predictable test environments without side effects.\n * \n * Design philosophy:\n * - Environment isolation to prevent test interference\n * - Predictable test conditions with known values\n * - Easy setup and teardown of test environments\n * - Simple, focused functionality for environment management\n * \n * Why environment management is critical:\n * 1. Tests must be deterministic - same input should always produce same output\n * 2. Tests should not depend on the host system's environment variables\n * 3. Tests should not affect each other through shared global state\n * 4. Environment setup should be simple and consistent across test suites\n * \n * Module organization rationale:\n * This module focuses solely on environment variable management and test\n * isolation, providing a clean separation of concerns from other testing\n * utilities like HTTP mocking, database simulation, and advanced test helpers.\n */\n\n// Import testEnv utility for comprehensive environment variable management\n// testEnv provides save/restore functionality for environment variables\n// and mock management for environment-dependent testing scenarios\nconst testEnv = require('../utils/testEnv');\n\n// Import specialized utility modules for organized access\nconst coreUtils = require('./coreUtils');\nconst httpUtils = require('./httpUtils');\nconst dataUtils = require('./dataUtils');\nconst testUtils = require('./testUtils');\n\n/**\n * Export environment management utilities and provide access to other utility categories\n * \n * This module serves as the main entry point for qtests utilities while maintaining\n * proper organization by category. Environment-specific utilities are exported directly,\n * while other utility categories are accessible through their respective modules.\n * \n * Organization strategy:\n * - Direct exports for environment-specific utilities (testEnv)\n * - Category-based access for other utilities (http, data, test)\n * - Maintains backward compatibility with existing code\n * - Clear separation of concerns while providing unified access\n * \n * Usage patterns:\n * const { testEnv } = require('qtests/lib/envUtils');\n * const { httpTest, mockAxios } = require('qtests/lib/envUtils').http;\n * const { mockModels, sendEmail } = require('qtests/lib/envUtils').data;\n * const { testSuite, testHelpers } = require('qtests/lib/envUtils').test;\n * \n * Backward compatibility:\n * For existing code, all utilities remain accessible through direct imports:\n * const { testSuite, mockModels, httpTest } = require('qtests/lib/envUtils');\n */\nmodule.exports = {\n  // Environment variable management and test isolation (primary focus)\n  testEnv,\n  \n  // Core testing utilities (stubMethod, mockConsole)\n  ...coreUtils,\n  \n  // HTTP testing utilities (mockAxios, httpTest, offlineMode)\n  ...httpUtils,\n  \n  // Data and database utilities (mockModels, sendEmail)\n  ...dataUtils,\n  \n  // Advanced testing utilities (testHelpers, testSuite)\n  ...testUtils,\n  \n  // Category-based access for organized imports\n  core: coreUtils,\n  http: httpUtils,\n  data: dataUtils,\n  test: testUtils\n};\n"],"mappings":"AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAMA,OAAO,GAAGC,OAAO,CAAC,kBAAkB,CAAC;;AAE3C;AACA,MAAMC,SAAS,GAAGD,OAAO,CAAC,aAAa,CAAC;AACxC,MAAME,SAAS,GAAGF,OAAO,CAAC,aAAa,CAAC;AACxC,MAAMG,SAAS,GAAGH,OAAO,CAAC,aAAa,CAAC;AACxC,MAAMI,SAAS,GAAGJ,OAAO,CAAC,aAAa,CAAC;;AAExC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAK,MAAM,CAACC,OAAO,GAAG;EACf;EACAP,OAAO;EAEP;EACA,GAAGE,SAAS;EAEZ;EACA,GAAGC,SAAS;EAEZ;EACA,GAAGC,SAAS;EAEZ;EACA,GAAGC,SAAS;EAEZ;EACAG,IAAI,EAAEN,SAAS;EACfO,IAAI,EAAEN,SAAS;EACfO,IAAI,EAAEN,SAAS;EACfO,IAAI,EAAEN;AACR,CAAC","ignoreList":[]}