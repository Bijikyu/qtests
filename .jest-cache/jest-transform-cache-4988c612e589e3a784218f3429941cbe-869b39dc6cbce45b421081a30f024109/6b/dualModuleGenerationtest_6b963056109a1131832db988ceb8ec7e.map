{"version":3,"names":["fs","require","path","TestGenerator","describe","tempDir","generator","beforeEach","uniqueId","process","hrtime","bigint","Math","random","toString","substr","join","__dirname","existsSync","mkdirSync","recursive","SRC_DIR","TEST_DIR","afterEach","rmSync","force","it","commonJSCode","exports","extractExports","expect","toContain","length","toBe","esModuleCode","mixedCode","imports","getUsedModules","codeWithRelative","not","isESModule","commonJSFile","writeFileSync","testContent","createUnitTest","esModuleFile","analyze","expectedTestPath","getRelativeTestPath","scanned","toBeGreaterThan","type","noExportsCode","toEqual","malformedCode","Array","isArray","commentCode"],"sources":["dualModuleGeneration.test.js"],"sourcesContent":["/**\n * Test qtests' ability to generate tests for both CommonJS and ES modules\n * Verifies the enhanced export detection and module-appropriate test generation\n */\n\nconst fs = require('fs');\nconst path = require('path');\nconst { TestGenerator } = require('../lib/testGenerator');\n\ndescribe('qtests Dual Module System Test Generation', () => {\n  let tempDir;\n  let generator;\n\n  beforeEach(() => {\n    // Create UNIQUE temporary directory for parallel safety\n    const uniqueId = `${process.hrtime.bigint()}-${Math.random().toString(36).substr(2, 9)}`;\n    tempDir = path.join(__dirname, `temp_module_tests_${uniqueId}`);\n    if (!fs.existsSync(tempDir)) {\n      fs.mkdirSync(tempDir, { recursive: true });\n    }\n    \n    generator = new TestGenerator({\n      SRC_DIR: tempDir,\n      TEST_DIR: path.join(tempDir, 'tests')\n    });\n  });\n\n  afterEach(() => {\n    // Cleanup temporary files\n    if (fs.existsSync(tempDir)) {\n      fs.rmSync(tempDir, { recursive: true, force: true });\n    }\n  });\n\n  describe('CommonJS Export Detection', () => {\n    it('should detect module.exports single function', () => {\n      const commonJSCode = `\nfunction calculateSum(a, b) {\n  return a + b;\n}\n\nmodule.exports = calculateSum;\n`;\n      const exports = generator.extractExports(commonJSCode);\n      expect(exports).toContain('calculateSum');\n      expect(exports.length).toBe(1);\n    });\n\n    it('should detect module.exports object with multiple exports', () => {\n      const commonJSCode = `\nfunction add(a, b) { return a + b; }\nfunction subtract(a, b) { return a - b; }\n\nclass Calculator {\n  constructor() {}\n}\n\nmodule.exports = {\n  add,\n  subtract,\n  Calculator\n};\n`;\n      const exports = generator.extractExports(commonJSCode);\n      expect(exports).toContain('add');\n      expect(exports).toContain('subtract');\n      expect(exports).toContain('Calculator');\n      expect(exports.length).toBe(3);\n    });\n\n    it('should detect exports.property assignments', () => {\n      const commonJSCode = `\nfunction helper1() {}\nfunction helper2() {}\n\nexports.helper1 = helper1;\nexports.helper2 = helper2;\n`;\n      const exports = generator.extractExports(commonJSCode);\n      expect(exports).toContain('helper1');\n      expect(exports).toContain('helper2');\n      expect(exports.length).toBe(2);\n    });\n\n    it('should detect module.exports.property assignments', () => {\n      const commonJSCode = `\nfunction utilityA() {}\nfunction utilityB() {}\n\nmodule.exports.utilityA = utilityA;\nmodule.exports.utilityB = utilityB;\n`;\n      const exports = generator.extractExports(commonJSCode);\n      expect(exports).toContain('utilityA');\n      expect(exports).toContain('utilityB');\n      expect(exports.length).toBe(2);\n    });\n  });\n\n  describe('ES Module Export Detection', () => {\n    it('should detect export const declarations', () => {\n      const esModuleCode = `\nexport const API_URL = 'https://api.example.com';\nexport const MAX_RETRIES = 3;\n`;\n      const exports = generator.extractExports(esModuleCode);\n      expect(exports).toContain('API_URL');\n      expect(exports).toContain('MAX_RETRIES');\n      expect(exports.length).toBe(2);\n    });\n\n    it('should detect export function declarations', () => {\n      const esModuleCode = `\nexport function processData(data) {\n  return data.map(item => item.value);\n}\n\nexport function validateInput(input) {\n  return typeof input === 'string';\n}\n`;\n      const exports = generator.extractExports(esModuleCode);\n      expect(exports).toContain('processData');\n      expect(exports).toContain('validateInput');\n      expect(exports.length).toBe(2);\n    });\n\n    it('should detect export class declarations', () => {\n      const esModuleCode = `\nexport class DataProcessor {\n  constructor() {}\n}\n\nexport class ValidationEngine {\n  validate() {}\n}\n`;\n      const exports = generator.extractExports(esModuleCode);\n      expect(exports).toContain('DataProcessor');\n      expect(exports).toContain('ValidationEngine');\n      expect(exports.length).toBe(2);\n    });\n  });\n\n  describe('Mixed Module Pattern Detection', () => {\n    it('should handle files with both ES and CommonJS patterns', () => {\n      const mixedCode = `\n// ES module style\nexport function esFunction() {\n  return 'es';\n}\n\n// CommonJS style\nfunction cjsFunction() {\n  return 'cjs';\n}\n\nmodule.exports.cjsFunction = cjsFunction;\n`;\n      const exports = generator.extractExports(mixedCode);\n      expect(exports).toContain('esFunction');\n      expect(exports).toContain('cjsFunction');\n      expect(exports.length).toBe(2);\n    });\n  });\n\n  describe('Import Detection (CommonJS vs ES Modules)', () => {\n    it('should detect CommonJS require statements', () => {\n      const commonJSCode = `\nconst fs = require('fs');\nconst path = require('path');\nconst axios = require('axios');\n`;\n      const imports = generator.getUsedModules(commonJSCode);\n      expect(imports).toContain('fs');\n      expect(imports).toContain('path');\n      expect(imports).toContain('axios');\n    });\n\n    it('should detect ES module import statements', () => {\n      const esModuleCode = `\nimport fs from 'fs';\nimport { resolve } from 'path';\nimport axios from 'axios';\n`;\n      const imports = generator.getUsedModules(esModuleCode);\n      expect(imports).toContain('fs');\n      expect(imports).toContain('path');\n      expect(imports).toContain('axios');\n    });\n\n    it('should filter out relative imports', () => {\n      const codeWithRelative = `\nconst fs = require('fs');\nconst local = require('./localFile');\nconst parent = require('../parentFile');\nimport axios from 'axios';\nimport { util } from './utils';\n`;\n      const imports = generator.getUsedModules(codeWithRelative);\n      expect(imports).toContain('fs');\n      expect(imports).toContain('axios');\n      expect(imports).not.toContain('./localFile');\n      expect(imports).not.toContain('../parentFile');\n      expect(imports).not.toContain('./utils');\n    });\n  });\n\n  describe('Test Generation for Different Module Systems', () => {\n    it('should generate CommonJS-style tests for CommonJS projects', () => {\n      // Mock CommonJS project (no \"type\": \"module\" in package.json)\n      generator.isESModule = false;\n      \n      const commonJSFile = path.join(tempDir, 'mathUtils.js');\n      const commonJSCode = `\nfunction add(a, b) {\n  return a + b;\n}\n\nmodule.exports = { add };\n`;\n      fs.writeFileSync(commonJSFile, commonJSCode);\n      \n      const exports = generator.extractExports(commonJSCode);\n      const testContent = generator.createUnitTest(commonJSFile, exports, false, []);\n      \n      // Should use require syntax\n      expect(testContent).toContain('const mod = require(');\n      expect(testContent).not.toContain('import');\n      expect(testContent).toContain(\"describe('mathUtils.js'\");\n      expect(testContent).toContain(\"test('add works'\");\n    });\n\n    it('should generate ES module-style tests for ES module projects', () => {\n      // Mock ES module project\n      generator.isESModule = true;\n      \n      const esModuleFile = path.join(tempDir, 'dataProcessor.js');\n      const esModuleCode = `\nexport function process(data) {\n  return data.filter(Boolean);\n}\n`;\n      fs.writeFileSync(esModuleFile, esModuleCode);\n      \n      const exports = generator.extractExports(esModuleCode);\n      const testContent = generator.createUnitTest(esModuleFile, exports, false, []);\n      \n      // Should use import syntax\n      expect(testContent).toContain('import * as mod from');\n      expect(testContent).not.toContain('require(');\n      expect(testContent).toContain(\"describe('dataProcessor.js'\");\n      expect(testContent).toContain(\"test('process works'\");\n    });\n  });\n\n  describe('Real File Analysis and Test Generation', () => {\n    it('should analyze and generate tests for CommonJS files', () => {\n      const commonJSFile = path.join(tempDir, 'realCommonJS.js');\n      const commonJSCode = `\nconst fs = require('fs');\n\nfunction readConfig(filename) {\n  return JSON.parse(fs.readFileSync(filename, 'utf8'));\n}\n\nclass ConfigManager {\n  constructor() {\n    this.config = {};\n  }\n  \n  load(file) {\n    this.config = readConfig(file);\n  }\n}\n\nmodule.exports = {\n  readConfig,\n  ConfigManager\n};\n`;\n      fs.writeFileSync(commonJSFile, commonJSCode);\n      \n      // Analyze the file\n      generator.analyze(commonJSFile);\n      \n      // Check if test was generated\n      const expectedTestPath = generator.getRelativeTestPath(commonJSFile, 'unit');\n      expect(generator.scanned.length).toBeGreaterThan(0);\n      expect(generator.scanned[0].type).toBe('unit');\n    });\n\n    it('should analyze and generate tests for ES module files', () => {\n      const esModuleFile = path.join(tempDir, 'realESModule.js');\n      const esModuleCode = `\nexport function validateEmail(email) {\n  return email.includes('@');\n}\n\nexport class EmailValidator {\n  constructor() {}\n  \n  isValid(email) {\n    return validateEmail(email);\n  }\n}\n`;\n      fs.writeFileSync(esModuleFile, esModuleCode);\n      \n      // Analyze the file\n      generator.analyze(esModuleFile);\n      \n      // Check if test was generated\n      expect(generator.scanned.length).toBeGreaterThan(0);\n      expect(generator.scanned[0].type).toBe('unit');\n    });\n  });\n\n  describe('Edge Cases and Error Handling', () => {\n    it('should handle files with no exports gracefully', () => {\n      const noExportsCode = `\n// Just some utility functions that aren't exported\nfunction internal() {}\nconst PRIVATE_CONST = 'private';\n`;\n      const exports = generator.extractExports(noExportsCode);\n      expect(exports).toEqual([]);\n    });\n\n    it('should handle malformed export patterns', () => {\n      const malformedCode = `\nmodule.exports = \nfunction incomplete() {}\nexports. = 'invalid';\nexport \n`;\n      const exports = generator.extractExports(malformedCode);\n      // Should not crash and return valid exports only\n      expect(Array.isArray(exports)).toBe(true);\n    });\n\n    it('should handle files with comments containing export-like patterns', () => {\n      const commentCode = `\n// This is not an export: module.exports = fake\n/* \n * export function commentedOut() {}\n */\nfunction realFunction() {}\nmodule.exports = realFunction;\n`;\n      const exports = generator.extractExports(commentCode);\n      expect(exports).toContain('realFunction');\n      expect(exports).not.toContain('fake');\n      expect(exports).not.toContain('commentedOut');\n    });\n  });\n});"],"mappings":"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","ignoreList":[]}